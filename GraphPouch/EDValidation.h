//  ____                _
// |  _ \ ___  ___  ___(_) __ _  ___ _ ___
// | |_) / _ \/ __|/ _ \ |/ _` |/ _ \ '_  \
// |  _ |  __/ (__|  __/ | (_| |  __/ | | |
// |_| \_\___|\___|\___|_|\__, |\___|_| |_|
//                        |___/
//
// This code was generated by Receigen and will use:
//
// CFBundleIdentifier         : com.edcodia.graphpouch
// CFBundleShortVersionString : 1.0.4
//
// Code Type                  : ReceiptValidation
// Prefix                     : ED
// No Main Generation         : false
//
// Don't forget to link with the IOKit and Security frameworks !
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif
    
    // Headers for general purpose functions
#import <CoreFoundation/CoreFoundation.h>
    // Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
    
    // Headers for bundle security checks
#import <CommonCrypto/CommonDigest.h>
#import <Security/Security.h>
#import <Security/CMSDecoder.h>
#import <Security/CSCommon.h>
#import <Security/SecAsn1Coder.h>
#import <Security/SecAsn1Templates.h>
#import <Security/SecCode.h>
#import <Security/SecRequirement.h>
#import <Security/SecStaticCode.h>
    
    // Headers for network checks
#import <IOKit/IOKitLib.h>
#import <arpa/inet.h>
#import <ifaddrs.h>
#import <net/if.h>
#import <net/if_dl.h>
    
    // Some compilers provide the capability to test if certain attributes are available.
    // This macro provides a compatibility path for other compilers.
#ifndef __has_feature
#define __has_feature(X)    0
#endif
    
    // Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
#if __has_feature(objc_arc)
#define __SAFE_CAST(T,X)    (__bridge T) X
#else
#define __SAFE_CAST(T,X)    (T) X
#endif
#endif
    
    // Log statement for debugging purpose
#if DEBUG
#define __RECEIPT_LOG(args...)    NSLog(args)
#else
#define __RECEIPT_LOG(args...)
#endif
    
    // Structure describing ASN.1 data
    typedef struct _ED_ASN1_DATA {
        size_t length;
        uint8 *data;
    } ED_ASN1_DATA;
    
    // Structure describing a receipt attribute
    //
    // ReceiptAttribute ::= SEQUENCE {
    //    type INTEGER,
    //    version INTEGER,
    //    value OCTET STRING
    // }
    typedef struct _ED_ReceiptAttribute {
        ED_ASN1_DATA type;
        ED_ASN1_DATA version;
        ED_ASN1_DATA value;
    } ED_ReceiptAttribute;
    
    // Structure describing a receipt
    //
    // Payload ::= SET OF ReceiptAttribute
    typedef struct _ED_Payload {
        ED_ReceiptAttribute **attributes;
    } ED_Payload;
    
    // ASN.1 template describing a receipt attribute or an InApp attribute
    const SecAsn1Template ED_kReceiptAttributeTemplate[] = {
        { SEC_ASN1_SEQUENCE, 0, NULL, sizeof(ED_ReceiptAttribute) },
        { SEC_ASN1_INTEGER, offsetof(ED_ReceiptAttribute, type), NULL, 0 },
        { SEC_ASN1_INTEGER, offsetof(ED_ReceiptAttribute, version), NULL, 0 },
        { SEC_ASN1_OCTET_STRING, offsetof(ED_ReceiptAttribute, value), NULL, 0 },
        { 0, 0, NULL, 0 }
    };
    
    //
    // ASN.1 template describing a receipt or an InApp receipt
    //
    const SecAsn1Template ED_kSetOfReceiptAttributeTemplate[] = {
        { SEC_ASN1_SET_OF, offsetof(ED_Payload, attributes), ED_kReceiptAttributeTemplate, sizeof(ED_Payload) },
        { 0, 0, NULL, 0 }
    };
    
    // Function pointer for string decryption
    typedef void (*ED_decrypt)(const char *, char *, int, int);
    
    // Keys for each receipt attribute
    typedef enum _ED_ReceiptAttributeType {
        // Bundle identifier
        ED_ReceiptAttributeTypeBundleId = 2,
        // Application version
        ED_ReceiptAttributeTypeBundleVersion = 3,
        // Opaque value
        ED_ReceiptAttributeTypeOpaqueValue = 4,
        // Hash value
        ED_ReceiptAttributeTypeHash = 5,
        // Storage key base value
        ED_DataStoreNone = -320,
        // Storage key for Bundle identifier
        ED_DataStoreBundleId = ED_DataStoreNone + (ED_ReceiptAttributeTypeBundleId << 2),
        // Storage key for Bundle identifier as raw data
        ED_DataStoreBundleIdData = ED_DataStoreBundleId + 1,
        // Storage key for Application version
        ED_DataStoreBundleVersion = ED_DataStoreNone + (ED_ReceiptAttributeTypeBundleVersion << 2),
        // Storage key for Application version as raw data
        ED_DataStoreBundleVersionData = ED_DataStoreBundleVersion + 1,
        // Storage key for Opaque value
        ED_DataStoreOpaqueValue = ED_DataStoreNone + (ED_ReceiptAttributeTypeOpaqueValue << 2),
        // Storage key for Hash value
        ED_DataStoreHash = ED_DataStoreNone + (ED_ReceiptAttributeTypeHash << 2),
    } ED_ReceiptAttributeType;
    
    // Shared context for receipt validation
    typedef struct _ED_Context {
        CFTypeRef dummy2;
        CFTypeRef mac_data;
        CFTypeRef dummy6;
        CFTypeRef dummy4;
        CFTypeRef dummy0;
        CFTypeRef receipt_data;
        CFTypeRef dummy3;
        CFTypeRef main_bundle;
        void * argv;
        CFTypeRef dummy1;
        CFTypeRef receipt_dict;
        CFTypeRef dummy5;
        int argc;
    } ED_Context;
    
    // Shared context for receipt parsing
    typedef struct _ED_Parsing {
        CFTypeRef dummy4;
        CFTypeRef dummy2;
        size_t length;
        CFTypeRef dictionary;
        CFTypeRef dummy0;
        ED_ReceiptAttribute ** pointer;
        CFTypeRef dummy3;
        const void * source;
        CFTypeRef dummy1;
    } ED_Parsing;
    
    // Function "CC_SHA1"
    typedef unsigned char *(*_ED_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
    // Function "CC_SHA1_Final"
    typedef int (*_ED_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
    // Function "CC_SHA1_Init"
    typedef int (*_ED_CC_SHA1_Init)(CC_SHA1_CTX *c);
    // Function "CC_SHA1_Update"
    typedef int (*_ED_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
    // Function "CFArrayAppendValue"
    typedef void (*_ED_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
    // Function "CFArrayCreateMutable"
    typedef CFMutableArrayRef (*_ED_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
    // Function "CFBundleCopyBundleURL"
    typedef CFURLRef (*_ED_CFBundleCopyBundleURL)(CFBundleRef bundle);
    // Function "CFBundleGetIdentifier"
    typedef CFStringRef (*_ED_CFBundleGetIdentifier)(CFBundleRef bundle);
    // Function "CFBundleGetMainBundle"
    typedef CFBundleRef (*_ED_CFBundleGetMainBundle)();
    // Function "CFBundleGetValueForInfoDictionaryKey"
    typedef CFTypeRef (*_ED_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
    // Function "CFBundleUnloadExecutable"
    typedef void (*_ED_CFBundleUnloadExecutable)(CFBundleRef bundle);
    // Function "CFDataAppendBytes"
    typedef void (*_ED_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
    // Function "CFDataCreate"
    typedef CFDataRef (*_ED_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
    // Function "CFDataCreateMutable"
    typedef CFMutableDataRef (*_ED_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
    // Function "CFDataGetBytePtr"
    typedef const UInt8 *(*_ED_CFDataGetBytePtr)(CFDataRef theData);
    // Function "CFDataGetLength"
    typedef CFIndex (*_ED_CFDataGetLength)(CFDataRef theData);
    // Function "CFDateFormatterCreate"
    typedef CFDateFormatterRef (*_ED_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
    // Function "CFDateFormatterCreateDateFromString"
    typedef CFDateRef (*_ED_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
    // Function "CFDateFormatterSetFormat"
    typedef void (*_ED_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
    // Function "CFDictionaryAddValue"
    typedef void (*_ED_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Function "CFDictionaryCreateMutable"
    typedef CFMutableDictionaryRef (*_ED_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
    // Function "CFDictionaryGetValue"
    typedef const void *(*_ED_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
    // Function "CFEqual"
    typedef Boolean (*_ED_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
    // Function "CFNumberCreate"
    typedef CFNumberRef (*_ED_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
    // Function "CFRelease"
    typedef void (*_ED_CFRelease)(CFTypeRef cf);
    // Function "CFStringCompare"
    typedef CFComparisonResult (*_ED_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
    // Function "CFStringCreateWithBytes"
    typedef CFStringRef (*_ED_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
    // Function "CFStringCreateWithCString"
    typedef CFStringRef (*_ED_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
    // Function "CFURLCreateCopyAppendingPathComponent"
    typedef CFURLRef (*_ED_CFURLCreateCopyAppendingPathComponent)(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);
    // Function "CFURLCreateDataAndPropertiesFromResource"
    typedef Boolean (*_ED_CFURLCreateDataAndPropertiesFromResource)(CFAllocatorRef alloc, CFURLRef url, CFDataRef *resourceData, CFDictionaryRef *properties, CFArrayRef desiredProperties, SInt32 *errorCode);
    // Function "CFURLCreateWithFileSystemPathRelativeToBase"
    typedef CFURLRef (*_ED_CFURLCreateWithFileSystemPathRelativeToBase)(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);
    // Function "CMSDecoderCopyContent"
    typedef OSStatus (*_ED_CMSDecoderCopyContent)(CMSDecoderRef cmsDecoder, CFDataRef *contentOut);
    // Function "CMSDecoderCopySignerStatus"
    typedef OSStatus (*_ED_CMSDecoderCopySignerStatus)(CMSDecoderRef cmsDecoder, size_t signerIndex, CFTypeRef policyOrArray, Boolean evaluateSecTrust, CMSSignerStatus *signerStatusOut, SecTrustRef *secTrustOut, OSStatus *certVerifyResultCodeOut);
    // Function "CMSDecoderCreate"
    typedef OSStatus (*_ED_CMSDecoderCreate)(CMSDecoderRef *cmsDecoderOut);
    // Function "CMSDecoderFinalizeMessage"
    typedef OSStatus (*_ED_CMSDecoderFinalizeMessage)(CMSDecoderRef cmsDecoder);
    // Function "CMSDecoderGetNumSigners"
    typedef OSStatus (*_ED_CMSDecoderGetNumSigners)(CMSDecoderRef cmsDecoder, size_t *numSignersOut);
    // Function "CMSDecoderUpdateMessage"
    typedef OSStatus (*_ED_CMSDecoderUpdateMessage)(CMSDecoderRef cmsDecoder, const void *msgBytes, size_t msgBytesLen);
    // Function "dlopen"
    typedef void *(*_ED_dlopen)(const char * __path, int __mode);
    // Function "dlsym"
    typedef void *(*_ED_dlsym)(void * __handle, const char * __symbol);
    // Function "exit"
    typedef void (*_ED_exit)(int status);
    // Function "freeifaddrs"
    typedef void (*_ED_freeifaddrs)(struct ifaddrs *ifp);
    // Function "getifaddrs"
    typedef int (*_ED_getifaddrs)(struct ifaddrs **ifap);
    // Function "IOBSDNameMatching"
    typedef CFMutableDictionaryRef (*_ED_IOBSDNameMatching)(mach_port_t masterPort, uint32_t options, const char * bsdName);
    // Function "IOIteratorNext"
    typedef io_object_t (*_ED_IOIteratorNext)(io_iterator_t iterator);
    // Function "IOMasterPort"
    typedef kern_return_t (*_ED_IOMasterPort)(mach_port_t bootstrapPort, mach_port_t *masterPort);
    // Function "IOObjectRelease"
    typedef kern_return_t (*_ED_IOObjectRelease)(io_object_t object);
    // Function "IORegistryEntryCreateCFProperty"
    typedef CFTypeRef (*_ED_IORegistryEntryCreateCFProperty)(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options);
    // Function "IORegistryEntryGetParentEntry"
    typedef kern_return_t (*_ED_IORegistryEntryGetParentEntry)(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t * parent);
    // Function "IOServiceGetMatchingServices"
    typedef kern_return_t (*_ED_IOServiceGetMatchingServices)(mach_port_t masterPort, CFDictionaryRef matching, io_iterator_t *existing);
    // Function "longjmp"
    typedef void (*_ED_longjmp)(jmp_buf buf, int ret);
    // Function "NSApplicationMain"
    typedef int (*_ED_NSApplicationMain)(int argc, const char *argv[]);
    // Function "SecAsn1CoderCreate"
    typedef OSStatus (*_ED_SecAsn1CoderCreate)(SecAsn1CoderRef *coder);
    // Function "SecAsn1CoderRelease"
    typedef OSStatus (*_ED_SecAsn1CoderRelease)(SecAsn1CoderRef coder);
    // Function "SecAsn1Decode"
    typedef OSStatus (*_ED_SecAsn1Decode)(SecAsn1CoderRef coder, const void *src, size_t len, const SecAsn1Template *templates, void *dest);
    // Function "SecCodeCheckValidity"
    typedef OSStatus (*_ED_SecCodeCheckValidity)(SecCodeRef code, SecCSFlags flags, SecRequirementRef requirement);
    // Function "SecCodeCheckValidityWithErrors"
    typedef OSStatus (*_ED_SecCodeCheckValidityWithErrors)(SecCodeRef code, SecCSFlags flags, SecRequirementRef requirement, CFErrorRef *errors);
    // Function "SecCodeCopySelf"
    typedef OSStatus (*_ED_SecCodeCopySelf)(SecCSFlags flags, SecCodeRef *self);
    // Function "SecPolicyCreateBasicX509"
    typedef SecPolicyRef (*_ED_SecPolicyCreateBasicX509)(void);
    // Function "SecStaticCodeCheckValidity"
    typedef OSStatus (*_ED_SecStaticCodeCheckValidity)(SecStaticCodeRef staticCode, SecCSFlags flags, SecRequirementRef requirement);
    // Function "SecStaticCodeCheckValidityWithErrors"
    typedef OSStatus (*_ED_SecStaticCodeCheckValidityWithErrors)(SecStaticCodeRef staticCode, SecCSFlags flags, SecRequirementRef requirement, CFErrorRef *errors);
    // Function "SecStaticCodeCreateWithPath"
    typedef OSStatus (*_ED_SecStaticCodeCreateWithPath)(CFURLRef path, SecCSFlags flags, SecStaticCodeRef *staticCode);
    // Function "setjmp"
    typedef int (*_ED_setjmp)(jmp_buf buf);
    // Function "strcmp"
    typedef int (*_ED_strcmp)(const char *s1, const char *s2);
    
    
    // Table for storing strings
    static const char *ED_strings[327] = {
        // "" / M(None) / S(0) / L(0)
        "\x0b\x20\x09\x91\xb5\xa5\xd7\x3c\x18\xf5\x14\x4e\xd7\xde\xad\xc1\xaa\x16\x7c\x96\x78\x61\xc2\x65\xf7\xba\xc6\x94\xeb\xef\xbf\x18",
        // "IORegistryEntryCreateCFProperty" / M(Xor3) / S(235) / L(31)
        "\x42\x44\x59\x6e\x6c\x62\x78\x7f\x79\x72\x4e\x65\x7f\x79\x72\x48\x79\x6e\x6a\x7f\x6e\x48\x4d\x5b\x79\x64\x7b\x6e\x79\x7f\x72\x0b",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor3) / S(1) / L(32)
        "\x5b\x5b\x5b\x5b\x05\x0f\x05\x6f\x6f\x05\x0f\x05\x46\x46\x05\x76\x05\x6a\x6a\x05\x18\x05\x4f\x4f\x05\x18\x05\x51\x51\x05\x78\x05\x22",
        // "IOMasterPort" / M(Rot) / S(152) / L(12)
        "\xe1\xe7\xe5\xf9\x0b\x0c\xfd\x0a\xe8\x07\x0a\x0c\x98\x0a\xda\x7a",
        // "CFStringCreateWithBytes" / M(Xor4) / S(16) / L(23)
        "\x43\x46\x53\x74\x72\x69\x6e\x67\x43\x72\x65\x61\x74\x65\x57\x69\x74\x68\x42\x79\x74\x65\x73\x00\xf3\x75\x1c\xfc\x0b\x6f\x19\x81",
        // "CC_SHA1" / M(Xor2) / S(225) / L(7)
        "\xb2\xb2\xae\xa2\xb9\xb0\xc0\xf1\x42\x5b\x57\xa1\x69\x14\xbd\x0e",
        // "CFDictionaryCreateMutable" / M(Xor2) / S(194) / L(25)
        "\xa3\xa6\xa4\x89\x83\x94\x89\x8f\x8e\x81\x92\x99\xa3\x92\x85\x81\x94\x85\xad\x95\x94\x81\x82\x8c\x85\xe0\xda\x2d\x43\x7b\x42\x33\xe7\x59",
        // "CFRelease" / M(Xor4) / S(212) / L(9)
        "\x03\x06\x12\x25\x2c\x25\x21\x33\x25\x40\x7d\xf9\x9a\xac\x6d\x80",
        // "CFStringCreateWithBytes" / M(Xor4) / S(229) / L(23)
        "\xe3\xe6\xf3\xd4\xd2\xc9\xce\xc7\xe3\xd2\xc5\xc1\xd4\xc5\xf7\xc9\xd4\xc8\xe2\xd9\xd4\xc5\xd3\xa0\xe5\x1f\x78\xb6\x90\x90\x96\x58",
        // "CFArrayCreateMutable" / M(Xor2) / S(227) / L(20)
        "\xb5\xb0\xb7\x84\x84\x97\x8f\xb5\x84\x93\x97\x82\x93\xbb\x83\x82\x97\x94\x9a\x93\xf6",
        // "CC_SHA1_Init" / M(Xor4) / S(147) / L(12)
        "\x73\x73\x6f\x63\x78\x71\x01\x6f\x79\x5e\x59\x44\x30\xf2\xc5\x7c",
        // "/usr/lib/libSystem.dylib" / M(Rot) / S(238) / L(24)
        "\x1d\x63\x61\x60\x1d\x5a\x57\x50\x1d\x5a\x57\x50\x41\x67\x61\x62\x53\x5b\x1c\x52\x67\x5a\x57\x50\xee\xf5\x43\x65\xae\x8f\x9e\xc2\x5b",
        // "CFBundleCopyBundleURL" / M(Xor3) / S(195) / L(21)
        "\x9a\x9f\x9b\xac\xb7\xbd\xb5\xbc\x9a\xb6\xa9\xa0\x9b\xac\xb7\xbd\xb5\xbc\x8c\x8b\x95\xd9",
        // "" / M(None) / S(0) / L(0)
        "\x63\xc7\xd6\x57\xbf\xec\x72\x34\x11\x2b\xa2\x2c\x82\x55\x7a\x53\x4c\x08\x99\x88\xb4\x42\x26\xf3\xbc\x42\xbb\x5d\xe5\xeb\xc9\xe4",
        // "" / M(None) / S(0) / L(0)
        "\xe3\xe8\xac\xaa\x5b\x58\x46\x57\xc9\x74\xfd\xf0\xac\x80\x3f\x04\xfd\x83\xd9\x8d\x09\xd4\x4e\x7f\xe3\xed\xaa\x14\x90\x1a\xee\xba",
        // "CFURLCreateDataAndPropertiesFromResource" / M(Rot) / S(164) / L(40)
        "\xe7\xea\xf9\xf6\xf0\xe7\x16\x09\x05\x18\x09\xe8\x05\x18\x05\xe5\x12\x08\xf4\x16\x13\x14\x09\x16\x18\x0d\x09\x17\xea\x16\x13\x11\xf6\x09\x17\x13\x19\x16\x07\x09\xa4\x45\x97\x0d\x91\xf5\x8f\x87\x50",
        // "CFArrayAppendValue" / M(Xor4) / S(255) / L(18)
        "\xae\xab\xac\x9f\x9f\x8c\x94\xac\x9d\x9d\x88\x83\x89\xbb\x8c\x81\x98\x88\xed",
        // "dlsym" / M(Xor3) / S(191) / L(5)
        "\xab\xa3\xbc\xb6\xa2\xcf\x2b\xd5\x67\x63\x54\x57\xa3\x09\x5a\x68",
        // "CFDictionaryGetValue" / M(Xor4) / S(14) / L(20)
        "\x65\x60\x62\x4f\x45\x52\x4f\x49\x48\x47\x54\x5f\x61\x43\x52\x70\x47\x4a\x53\x43\x26",
        // "" / M(None) / S(0) / L(0)
        "\x61\x2d\x2f\x91\xa8\xfa\x13\x47\x0a\x15\xae\x26\x38\x51\xa4\x3d\x5e\xcd\xb3\xd0\x5a\xaf\xf6\x29\x86\x7e\x7b\xca\xaf\x4b\x43\x82",
        // "" / M(None) / S(0) / L(0)
        "\x6a\xe8\x41\x86\x47\xed\x60\xc0\x25\x0c\xda\x38\x79\x9e\x89\xba\x66\x2c\x99\xc6\x6a\xa2\x77\xdf\xc3\x47\x50\x22\xb3\x26\xe7\x4a",
        // "SecStaticCodeCheckValidityWithErrors" / M(Xor3) / S(174) / L(36)
        "\x80\xb6\xb0\x80\xa7\xb2\xa7\xba\xb0\x90\xbc\xb7\xb6\x90\xbb\xb6\xb0\xb8\x85\xb2\xbf\xba\xb7\xba\xa7\xaa\x84\xba\xa7\xbb\x96\xa1\xa1\xbc\xa1\xa0\xd3",
        // "" / M(None) / S(0) / L(0)
        "\xf0\xa2\x4c\x00\xd8\x06\xb4\xa3\x66\x86\x37\x94\x45\x53\xb1\xa7\xba\x34\x79\x8d\x98\x1d\x9b\x20\xf7\x9f\x3a\x47\x15\x59\x0b\x81",
        // "CFDataCreateMutable" / M(Xor2) / S(96) / L(19)
        "\x37\x32\x30\x15\x00\x15\x37\x06\x11\x15\x00\x11\x39\x01\x00\x15\x16\x18\x11\x74",
        // "CFDictionaryCreateMutable" / M(Xor3) / S(211) / L(25)
        "\xb6\xb3\xb1\x9c\x96\x81\x9c\x9a\x9b\x94\x87\x8c\xb6\x87\x90\x94\x81\x90\xb8\x80\x81\x94\x97\x99\x90\xf5\xcf\xc9\x52\xe6\xc7\x2a\x46\xfe",
        // "CFStringCompare" / M(Rot) / S(175) / L(15)
        "\xf2\xf5\x02\x23\x21\x18\x1d\x16\xf2\x1e\x1c\x1f\x10\x21\x14\xaf",
        // "CFDateFormatterSetFormat" / M(Xor1) / S(231) / L(24)
        "\xa4\xa1\xa3\x86\x93\x82\xa1\x88\x95\x8a\x86\x93\x93\x82\x95\xb4\x82\x93\xa1\x88\x95\x8a\x86\x93\xe7\xa7\x7c\x22\x5d\xd0\x20\xd3\x74",
        // "" / M(None) / S(0) / L(0)
        "\xa5\x53\x01\xe5\x59\x35\x09\xbf\x71\x65\x4c\xdd\x0a\x5a\x44\xa3\x4f\xb1\xe8\x6c\x10\x8d\x3e\x6e\xfc\xf8\xfe\xf3\xac\x7e\x9a\xa7",
        // "CFEqual" / M(Xor2) / S(77) / L(7)
        "\x1e\x1b\x18\x2c\x28\x3c\x31\x5d\x8e\x0d\x65\xc4\xb5\xc9\x8b\x39",
        // "" / M(None) / S(0) / L(0)
        "\x15\xd1\x47\x68\x49\x57\x63\x17\xe4\xc8\xa5\x2c\x0c\x0d\xe2\x89\xa2\x41\x48\x22\xad\x8d\xe6\xfe\x3e\x30\x9d\xf1\xeb\xb1\x5c\x59",
        // "Contents/_MASReceipt/receipt" / M(Xor4) / S(19) / L(28)
        "\xfc\xd0\xd1\xcb\xda\xd1\xcb\xcc\x90\xe0\xf2\xfe\xec\xed\xda\xdc\xda\xd6\xcf\xcb\x90\xcd\xda\xdc\xda\xd6\xcf\xcb\xbf\x22\x7e\xe7\x6b\xe2\x4a\xdc\x0b",
        // "" / M(None) / S(0) / L(0)
        "\x80\x83\x37\xdd\x4e\x36\xc1\xc6\x0e\xa6\x23\xee\xdf\xb0\x88\xfe\xb9\xce\x55\xba\x92\xe9\x4b\xbb\x50\xc4\x30\x6c\x09\x2c\x56\x1e",
        // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Rot) / S(223) / L(43)
        "\x22\x25\x34\x31\x2b\x22\x51\x44\x40\x53\x44\x36\x48\x53\x47\x25\x48\x4b\x44\x32\x58\x52\x53\x44\x4c\x2f\x40\x53\x47\x31\x44\x4b\x40\x53\x48\x55\x44\x33\x4e\x21\x40\x52\x44\xdf\x9e\x4e\x83\x55\x57\xc6\xbd\xdb",
        // "CFDataAppendBytes" / M(Xor2) / S(211) / L(17)
        "\x82\x87\x85\xa0\xb5\xa0\x80\xb1\xb1\xa4\xaf\xa5\x83\xb8\xb5\xa4\xb2\xc1",
        // "_MASReceipt/receipt" / M(Xor4) / S(134) / L(19)
        "\x27\x35\x39\x2b\x2a\x1d\x1b\x1d\x11\x08\x0c\x57\x0a\x1d\x1b\x1d\x11\x08\x0c\x78",
        // "" / M(None) / S(0) / L(0)
        "\xb9\xfe\x08\x1d\x2d\x31\x01\xa3\x88\x79\xcc\xf2\xfa\xfd\xb3\x83\xdf\xd9\xc1\x7f\xa8\x2f\x03\x62\xca\x39\xd5\x30\x08\x8f\xc5\x6b",
        // "CFDataAppendBytes" / M(Xor3) / S(90) / L(17)
        "\x2f\x2a\x28\x0d\x18\x0d\x2d\x1c\x1c\x09\x02\x08\x2e\x15\x18\x09\x1f\x6c",
        // "IOObjectRelease" / M(Xor3) / S(148) / L(15)
        "\xed\xeb\xeb\xc6\xce\xc1\xc7\xd0\xf6\xc1\xc8\xc1\xc5\xd7\xc1\xa4",
        // "en0" / M(Xor2) / S(111) / L(3)
        "\x1a\x11\x4f\x7f\xcc\x91\xf0\x39\xc9\xfd\x4d\x54\x99\x0a\x99\x7d",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(213) / L(66)
        "\x90\xec\xc6\xcc\xcb\xda\xd2\x90\xf3\xd6\xdd\xcd\xde\xcd\xc6\x90\xf9\xcd\xde\xd2\xda\xc8\xd0\xcd\xd4\xcc\x90\xfc\xd0\xcd\xda\xf9\xd0\xca\xd1\xdb\xde\xcb\xd6\xd0\xd1\x91\xd9\xcd\xde\xd2\xda\xc8\xd0\xcd\xd4\x90\xfc\xd0\xcd\xda\xf9\xd0\xca\xd1\xdb\xde\xcb\xd6\xd0\xd1\xbf",
        // "_MASReceipt" / M(Xor2) / S(211) / L(11)
        "\x9c\x8e\x82\x90\x91\xa6\xa0\xa6\xaa\xb3\xb7\xc3\x27\x28\x26\xda",
        // "CMSDecoderGetNumSigners" / M(Xor4) / S(83) / L(23)
        "\x23\x2d\x33\x24\x05\x03\x0f\x04\x05\x12\x27\x05\x14\x2e\x15\x0d\x33\x09\x07\x0e\x05\x12\x13\x60\x5d\xf7\xa7\xb1\x6e\x77\x79\xe3",
        // "CMSDecoderGetNumSigners" / M(Xor4) / S(224) / L(23)
        "\x43\x4d\x53\x44\x65\x63\x6f\x64\x65\x72\x47\x65\x74\x4e\x75\x6d\x53\x69\x67\x6e\x65\x72\x73\x00\xbc\x6a\x48\x43\xb5\x92\x46\x87",
        // "CFBundleGetMainBundle" / M(Xor1) / S(239) / L(21)
        "\xac\xa9\xad\x9a\x81\x8b\x83\x8a\xa8\x8a\x9b\xa2\x8e\x86\x81\xad\x9a\x81\x8b\x83\x8a\xef",
        // "" / M(None) / S(0) / L(0)
        "\x1d\xaa\x22\xed\xb6\x8a\x4a\x35\xef\x7c\xf9\x13\x40\x1b\xb7\xee\xf9\xf6\x96\xd8\x24\xc6\x59\x4e\xe0\x5d\xfb\x40\x7a\x76\x59\x53",
        // "CMSDecoderUpdateMessage" / M(Xor4) / S(224) / L(23)
        "\x43\x4d\x53\x44\x65\x63\x6f\x64\x65\x72\x55\x70\x64\x61\x74\x65\x4d\x65\x73\x73\x61\x67\x65\x00\xa1\x17\x5a\xfa\xbd\xc9\xc5\xef",
        // "" / M(None) / S(0) / L(0)
        "\x89\x4f\xf8\xe6\xbc\x97\xcb\xf1\xdf\xca\xe8\xd0\x0a\x3c\x08\x7b\x58\x77\x35\xc7\x15\x4e\x12\xca\x20\xd2\xf4\xcf\xcd\xb3\x69\xfd",
        // "" / M(None) / S(0) / L(0)
        "\x9d\x2e\x2a\x70\x11\x7b\xe5\x7d\x9e\x1f\xa3\x5c\xb1\x0a\x3c\x16\x3d\x28\x4c\xaa\xa8\xa5\xe9\x8c\xb2\xca\xbc\x4c\x86\x50\x0c\x61",
        // "CFStringCreateWithBytes" / M(Rot) / S(50) / L(23)
        "\x75\x78\x85\xa6\xa4\x9b\xa0\x99\x75\xa4\x97\x93\xa6\x97\x89\x9b\xa6\x9a\x74\xab\xa6\x97\xa5\x32\x46\xce\x36\x7e\x78\x56\x31\xf8",
        // "info-plist" / M(Xor4) / S(90) / L(10)
        "\xc9\xce\xc6\xcf\x8d\xd0\xcc\xc9\xd3\xd4\xa0\xb2\xb7\x05\x82\xfd",
        // "Contents/_MASReceipt/receipt" / M(Xor1) / S(139) / L(28)
        "\xc8\xe4\xe5\xff\xee\xe5\xff\xf8\xa4\xd4\xc6\xca\xd8\xd9\xee\xe8\xee\xe2\xfb\xff\xa4\xf9\xee\xe8\xee\xe2\xfb\xff\x8b\x8b\xbe\x9f\x1a\xa8\x74\xf5\x02",
        // "" / M(None) / S(0) / L(0)
        "\x2b\xc9\x2d\xad\x8a\xfe\x3f\x41\x3a\x0c\x7b\x6a\xa6\x6c\xe0\x94\x20\x2a\x13\x81\x2c\x18\xf1\x3c\x02\x61\x43\x63\xf0\xe6\x3e\x5c",
        // "NSApplicationMain" / M(Xor1) / S(168) / L(17)
        "\xe6\xfb\xe9\xd8\xd8\xc4\xc1\xcb\xc9\xdc\xc1\xc7\xc6\xe5\xc9\xc1\xc6\xa8",
        // "CMSDecoderFinalizeMessage" / M(Xor3) / S(147) / L(25)
        "\xf6\xf8\xe6\xf1\xd0\xd6\xda\xd1\xd0\xc7\xf3\xdc\xdb\xd4\xd9\xdc\xcf\xd0\xf8\xd0\xc6\xc6\xd4\xd2\xd0\xb5\xed\xf3\x35\x03\x66\xe9\x03\xf4",
        // "" / M(None) / S(0) / L(0)
        "\xe5\x96\xe1\x47\x64\xd0\x36\xa8\x08\x21\x97\x27\x79\xd0\x9a\x75\xc7\x5b\x09\x22\x5f\x25\x22\xcf\xe3\x96\xcc\x43\x99\x6f\x0b\x91",
        // "CFDictionaryAddValue" / M(Xor1) / S(220) / L(20)
        "\x9f\x9a\x98\xb5\xbf\xa8\xb5\xb3\xb2\xbd\xae\xa5\x9d\xb8\xb8\x8a\xbd\xb0\xa9\xb9\xdc",
        // "" / M(None) / S(0) / L(0)
        "\x03\x59\xd2\x7f\xf2\x0f\xf9\xaa\x63\xb7\x78\x0a\xb9\xcb\x19\x33\x7d\xad\x96\xad\x4d\xcf\x51\x53\x93\x87\x74\xe5\xdd\x26\xae\x5e",
        // "CFDictionaryCreateMutable" / M(Xor4) / S(247) / L(25)
        "\x8d\x88\x8a\xa7\xad\xba\xa7\xa1\xa0\xaf\xbc\xb7\x8d\xbc\xab\xaf\xba\xab\x83\xbb\xba\xaf\xac\xa2\xab\xce\x08\x2e\xb3\xf7\x9f\x9d\x9d\x01",
        // "CFDataGetBytePtr" / M(Rot) / S(201) / L(16)
        "\x0c\x0f\x0d\x2a\x3d\x2a\x10\x2e\x3d\x0b\x42\x3d\x2e\x19\x3d\x3b\xc9",
        // "CFDictionaryGetValue" / M(Xor3) / S(89) / L(20)
        "\x2d\x28\x2a\x07\x0d\x1a\x07\x01\x00\x0f\x1c\x17\x29\x0b\x1a\x38\x0f\x02\x1b\x0b\x6e",
        // "en0" / M(Xor2) / S(119) / L(3)
        "\x02\x09\x57\x67\x95\x26\xf5\x17\xe9\x0b\x5a\xde\x70\x1e\xdb\xa1",
        // "SecCodeCheckValidityWithErrors" / M(Xor3) / S(179) / L(30)
        "\x89\xbf\xb9\x99\xb5\xbe\xbf\x99\xb2\xbf\xb9\xb1\x8c\xbb\xb6\xb3\xbe\xb3\xae\xa3\x8d\xb3\xae\xb2\x9f\xa8\xa8\xb5\xa8\xa9\xda\x48\x6d\x20\x43\x12\x35\xf4\xa0",
        // "CFDateFormatterCreateDateFromString" / M(Xor2) / S(92) / L(35)
        "\x3b\x3e\x3c\x19\x0c\x1d\x3e\x17\x0a\x15\x19\x0c\x0c\x1d\x0a\x3b\x0a\x1d\x19\x0c\x1d\x3c\x19\x0c\x1d\x3e\x0a\x17\x15\x2b\x0c\x0a\x11\x16\x1f\x78",
        // "SecAsn1Decode" / M(Xor3) / S(249) / L(13)
        "\x5a\x6c\x6a\x48\x7a\x67\x38\x4d\x6c\x6a\x66\x6d\x6c\x09\x4d\xfc",
        // "SecStaticCodeCheckValidityWithErrors" / M(Rot) / S(165) / L(36)
        "\xf8\x0a\x08\xf8\x19\x06\x19\x0e\x08\xe8\x14\x09\x0a\xe8\x0d\x0a\x08\x10\xfb\x06\x11\x0e\x09\x0e\x19\x1e\xfc\x0e\x19\x0d\xea\x17\x17\x14\x17\x18\xa5",
        // "" / M(None) / S(0) / L(0)
        "\xbe\xdf\xae\x6f\x17\xcf\x5c\x93\xdd\x5b\x8b\xb1\xd8\x53\x7d\x8f\x03\x45\xce\xb4\x91\xe5\xe2\xa5\x9a\xf3\xd0\x83\xf8\x2a\x4d\xd0",
        // "CFBundleIdentifier" / M(Xor1) / S(75) / L(18)
        "\x08\x0d\x09\x3e\x25\x2f\x27\x2e\x02\x2f\x2e\x25\x3f\x22\x2d\x22\x2e\x39\x4b",
        // "com.edcodia.graphpouch" / M(Xor4) / S(72) / L(22)
        "\x1b\x17\x15\x56\x1d\x1c\x1b\x17\x1c\x11\x19\x56\x1f\x0a\x19\x08\x10\x08\x17\x0d\x1b\x10\x78",
        // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor4) / S(89) / L(43)
        "\x57\x52\x41\x46\x58\x57\x66\x71\x75\x60\x71\x43\x7d\x60\x7c\x52\x7d\x78\x71\x47\x6d\x67\x60\x71\x79\x44\x75\x60\x7c\x46\x71\x78\x75\x60\x7d\x62\x71\x40\x7b\x56\x75\x67\x71\x14\x96\xf3\x7a\xd2\xae\xfe\xf3\x2a",
        // "1.0.4" / M(Xor1) / S(206) / L(5)
        "\xff\xe0\xfe\xe0\xfa\xce\x9d\xd3\xda\x38\x6e\xb2\x31\xd9\xb7\xbb",
        // "" / M(None) / S(0) / L(0)
        "\xda\x1c\x7e\x07\xf3\xc6\xb6\xed\xaa\x51\xdf\x99\x3d\x6b\x70\xed\xec\x81\x15\x59\x2e\x84\x10\xee\x05\x92\xf0\x0f\xdc\x96\xdd\xef",
        // "" / M(None) / S(0) / L(0)
        "\xb1\x3a\xd1\x3f\x15\x11\x1e\x15\x58\x4c\x9e\x38\xb7\x5e\x94\xac\xed\x3d\x93\xe8\x4e\xb7\xf2\xea\x6a\x44\x35\xb3\xb0\xa4\xcf\x94",
        // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Rot) / S(174) / L(50)
        "\xdd\x01\x27\x21\x22\x13\x1b\xdd\xfa\x17\x10\x20\x0f\x20\x27\xdd\xf4\x20\x0f\x1b\x13\x25\x1d\x20\x19\x21\xdd\xef\x1e\x1e\xf9\x17\x22\xdc\x14\x20\x0f\x1b\x13\x25\x1d\x20\x19\xdd\xef\x1e\x1e\xf9\x17\x22\xae",
        // "SecAsn1CoderCreate" / M(Xor1) / S(249) / L(18)
        "\xaa\x9c\x9a\xb8\x8a\x97\xc8\xba\x96\x9d\x9c\x8b\xba\x8b\x9c\x98\x8d\x9c\xf9",
        // "" / M(None) / S(0) / L(0)
        "\xf9\x93\xfa\x05\xb4\x12\x58\x40\x94\xd7\xc6\x45\x36\x59\xfb\x1b\x27\xac\xd9\x28\xe5\x39\x20\x1d\x40\x3e\x45\x0f\x5d\x0c\xbc\x18",
        // "SecStaticCodeCheckValidity" / M(Xor4) / S(56) / L(26)
        "\xfb\xcd\xcb\xfb\xdc\xc9\xdc\xc1\xcb\xeb\xc7\xcc\xcd\xeb\xc0\xcd\xcb\xc3\xfe\xc9\xc4\xc1\xcc\xc1\xdc\xd1\xa8\x51\xe1\x43\xd1\x25\x9b\x05\xa8",
        // "SecPolicyCreateBasicX509" / M(Xor3) / S(30) / L(24)
        "\x6c\x5a\x5c\x6f\x50\x53\x56\x5c\x46\x7c\x4d\x5a\x5e\x4b\x5a\x7d\x5e\x4c\x56\x5c\x67\x0a\x0f\x06\x3f\xd0\x8b\x16\x21\x5a\x43\x57\xa0",
        // "getifaddrs" / M(Rot) / S(190) / L(10)
        "\x25\x23\x32\x27\x24\x1f\x22\x22\x30\x31\xbe\x3b\xf6\xbb\xc5\x4c",
        // "SecCodeCheckValidityWithErrors" / M(Xor3) / S(203) / L(30)
        "\xa1\x97\x91\xb1\x9d\x96\x97\xb1\x9a\x97\x91\x99\xa4\x93\x9e\x9b\x96\x9b\x86\x8b\xa5\x9b\x86\x9a\xb7\x80\x80\x9d\x80\x81\xf2\x5d\xf5\x62\xc0\xfc\x83\x4d\x82",
        // "Contents/_MASReceipt/receipt" / M(Xor2) / S(158) / L(28)
        "\xf8\xd4\xd5\xcf\xde\xd5\xcf\xc8\x94\xe4\xf6\xfa\xe8\xe9\xde\xd8\xde\xd2\xcb\xcf\x94\xc9\xde\xd8\xde\xd2\xcb\xcf\xbb\x8a\xd6\xf7\xfd\xc3\x89\x67\x74",
        // "SecStaticCodeCheckValidityWithErrors" / M(Xor2) / S(13) / L(36)
        "\x7b\x4d\x4b\x7b\x5c\x49\x5c\x41\x4b\x6b\x47\x4c\x4d\x6b\x40\x4d\x4b\x43\x7e\x49\x44\x41\x4c\x41\x5c\x51\x7f\x41\x5c\x40\x6d\x5a\x5a\x47\x5a\x5b\x28",
        // "IOServiceGetMatchingServices" / M(Rot) / S(136) / L(28)
        "\xd1\xd7\xdb\xed\xfa\xfe\xf1\xeb\xed\xcf\xed\xfc\xd5\xe9\xfc\xeb\xf0\xf1\xf6\xef\xdb\xed\xfa\xfe\xf1\xeb\xed\xfb\x88\xb0\xf6\x28\x0e\xdf\xbb\x63\x08",
        // "CC_SHA1_Update" / M(Xor4) / S(147) / L(14)
        "\x73\x73\x6f\x63\x78\x71\x01\x6f\x65\x40\x54\x51\x44\x55\x30\x54",
        // "IOBSDNameMatching" / M(Xor4) / S(207) / L(17)
        "\xc7\xc1\xcc\xdd\xca\xc0\xef\xe3\xeb\xc3\xef\xfa\xed\xe6\xe7\xe0\xe9\x8e",
        // "CFStringCompare" / M(Xor2) / S(203) / L(15)
        "\x98\x9d\x88\xaf\xa9\xb2\xb5\xbc\x98\xb4\xb6\xab\xba\xa9\xbe\xdb",
        // "" / M(None) / S(0) / L(0)
        "\xb8\xc7\x71\x71\x28\x3b\xb0\xd2\x16\xe6\x0e\x25\xd1\xb9\xc9\x4d\x03\xf6\x6e\xa0\x46\xc2\xd8\xe0\xda\x33\x93\x42\xea\x1d\x8f\xc2",
        // "IOBSDNameMatching" / M(Rot) / S(76) / L(17)
        "\x95\x9b\x8e\x9f\x90\x9a\xad\xb9\xb1\x99\xad\xc0\xaf\xb4\xb5\xba\xb3\x4c",
        // "CFDataAppendBytes" / M(Xor4) / S(248) / L(17)
        "\x33\x36\x34\x11\x04\x11\x31\x00\x00\x15\x1e\x14\x32\x09\x04\x15\x03\x70",
        // "IOBSDNameMatching" / M(Xor1) / S(210) / L(17)
        "\x9b\x9d\x90\x81\x96\x9c\xb3\xbf\xb7\x9f\xb3\xa6\xb1\xba\xbb\xbc\xb5\xd2",
        // "" / M(None) / S(0) / L(0)
        "\xc1\xdf\x36\x10\x88\x41\x51\xd9\xa8\xe2\xba\x45\xf2\x5d\x45\x60\x64\x12\x7c\x1a\x22\x9f\x89\xf6\x05\x92\x3b\x17\xb3\x6e\x80\x3c",
        // "strcmp" / M(Rot) / S(222) / L(6)
        "\x51\x52\x50\x41\x4b\x4e\xde\x1f\x62\x81\xc5\xa4\x16\xd6\x00\xae",
        // "/System/Library/Frameworks/Security.framework/Security" / M(Rot) / S(201) / L(54)
        "\xf8\x1c\x42\x3c\x3d\x2e\x36\xf8\x15\x32\x2b\x3b\x2a\x3b\x42\xf8\x0f\x3b\x2a\x36\x2e\x40\x38\x3b\x34\x3c\xf8\x1c\x2e\x2c\x3e\x3b\x32\x3d\x42\xf7\x2f\x3b\x2a\x36\x2e\x40\x38\x3b\x34\xf8\x1c\x2e\x2c\x3e\x3b\x32\x3d\x42\xc9",
        // "CFURLCreateCopyAppendingPathComponent" / M(Rot) / S(10) / L(37)
        "\x4d\x50\x5f\x5c\x56\x4d\x7c\x6f\x6b\x7e\x6f\x4d\x79\x7a\x83\x4b\x7a\x7a\x6f\x78\x6e\x73\x78\x71\x5a\x6b\x7e\x72\x4d\x79\x77\x7a\x79\x78\x6f\x78\x7e\x0a",
        // "IORegistryEntryCreateCFProperty" / M(Xor2) / S(131) / L(31)
        "\xea\xec\xf1\xc6\xc4\xca\xd0\xd7\xd1\xda\xe6\xcd\xd7\xd1\xda\xe0\xd1\xc6\xc2\xd7\xc6\xe0\xe5\xf3\xd1\xcc\xd3\xc6\xd1\xd7\xda\xa3",
        // "" / M(None) / S(0) / L(0)
        "\x3e\x2b\x6b\x8c\xc7\x6b\x08\xa2\x92\x5c\x24\x2b\xa0\x39\x57\xe4\x2d\x00\x07\xd2\x6a\x20\x41\x85\xa1\x0a\xa5\xfc\x7a\xe5\xd1\x06",
        // "CFDateFormatterCreate" / M(Xor1) / S(175) / L(21)
        "\xec\xe9\xeb\xce\xdb\xca\xe9\xc0\xdd\xc2\xce\xdb\xdb\xca\xdd\xec\xdd\xca\xce\xdb\xca\xaf",
        // "CFStringCreateWithCString" / M(Xor4) / S(139) / L(25)
        "\x35\x30\x25\x02\x04\x1f\x18\x11\x35\x04\x13\x17\x02\x13\x21\x1f\x02\x1e\x35\x25\x02\x04\x1f\x18\x11\x76\xec\xf5\x0c\x1b\x4e\x29\x77\x44",
        // "CMSDecoderCopySignerStatus" / M(Xor4) / S(44) / L(26)
        "\x47\x49\x57\x40\x61\x67\x6b\x60\x61\x76\x47\x6b\x74\x7d\x57\x6d\x63\x6a\x61\x76\x57\x70\x65\x70\x71\x77\x04\x32\xb1\xb7\xe3\x2a\x40\x32\x7c",
        // "" / M(None) / S(0) / L(0)
        "\x50\x5d\x20\xc6\xbd\x0b\x09\x7f\xe5\x7b\x13\x4f\x34\x68\xb4\x80\xf1\x30\x71\xb7\xf4\x9a\x6a\x38\xdb\x0d\x6b\x01\xae\xfc\x99\x13",
        // "SecAsn1CoderRelease" / M(Xor1) / S(212) / L(19)
        "\x87\xb1\xb7\x95\xa7\xba\xe5\x97\xbb\xb0\xb1\xa6\x86\xb1\xb8\xb1\xb5\xa7\xb1\xd4",
        // "CFBundleShortVersionString" / M(Rot) / S(202) / L(26)
        "\x0d\x10\x0c\x3f\x38\x2e\x36\x2f\x1d\x32\x39\x3c\x3e\x20\x2f\x3c\x3d\x33\x39\x38\x1d\x3e\x3c\x33\x38\x31\xca\x27\xbd\x5b\x01\x36\x49\xf5\xc2",
        // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Rot) / S(247) / L(48)
        "\x26\x4a\x70\x6a\x6b\x5c\x64\x26\x43\x60\x59\x69\x58\x69\x70\x26\x3d\x69\x58\x64\x5c\x6e\x66\x69\x62\x6a\x26\x40\x46\x42\x60\x6b\x25\x5d\x69\x58\x64\x5c\x6e\x66\x69\x62\x26\x40\x46\x42\x60\x6b\xf7",
        // "" / M(None) / S(0) / L(0)
        "\x77\xa9\x18\x51\x04\xee\x30\xac\x0f\xd7\x60\xb2\x2b\xa6\x1a\x69\x2f\x97\x90\x78\x36\xd4\x6c\x3c\xe6\x77\xad\x6b\x07\x1a\x4e\x38",
        // "CFBundleGetMainBundle" / M(Xor4) / S(230) / L(21)
        "\x87\x82\x86\xb1\xaa\xa0\xa8\xa1\x83\xa1\xb0\x89\xa5\xad\xaa\x86\xb1\xaa\xa0\xa8\xa1\xc4",
        // "CFBundleIdentifier" / M(Xor3) / S(138) / L(18)
        "\xde\xdb\xdf\xe8\xf3\xf9\xf1\xf8\xd4\xf9\xf8\xf3\xe9\xf4\xfb\xf4\xf8\xef\x9d",
        // "" / M(None) / S(0) / L(0)
        "\x6b\x3b\xee\x81\x3d\x0d\x66\x88\x00\xd9\x26\x7c\x64\x96\xcb\x9e\x26\xf4\x53\x43\xf4\x7f\xc4\x3e\x3d\xdc\x62\x82\xb1\x23\x45\x86",
        // "CFBundleGetIdentifier" / M(Xor3) / S(26) / L(21)
        "\x73\x76\x72\x45\x5e\x54\x5c\x55\x77\x55\x44\x79\x54\x55\x5e\x44\x59\x56\x59\x55\x42\x30",
        // "CFBundleUnloadExecutable" / M(Rot) / S(201) / L(24)
        "\x0c\x0f\x0b\x3e\x37\x2d\x35\x2e\x1e\x37\x35\x38\x2a\x2d\x0e\x41\x2e\x2c\x3e\x3d\x2a\x2b\x35\x2e\xc9\xbf\x85\xc1\x8e\xd9\x63\x11\x8b",
        // "Contents/_MASReceipt" / M(Xor3) / S(76) / L(20)
        "\x22\x0e\x0f\x15\x04\x0f\x15\x12\x4e\x3e\x2c\x20\x32\x33\x04\x02\x04\x08\x11\x15\x61",
        // "CFDataCreate" / M(Xor2) / S(138) / L(12)
        "\xd9\xdc\xde\xfb\xee\xfb\xd9\xe8\xff\xfb\xee\xff\x9a\xc0\xb1\x34",
        // "CFDataCreate" / M(Rot) / S(233) / L(12)
        "\x2c\x2f\x2d\x4a\x5d\x4a\x2c\x5b\x4e\x4a\x5d\x4e\xe9\x73\x8a\x51",
        // "" / M(None) / S(0) / L(0)
        "\xd6\x86\x8c\xaf\x42\x83\x9d\x90\x71\x9b\x24\xf3\xdf\xec\x78\xa8\x39\xd0\x08\x85\x68\x2b\xf3\xe5\x65\x67\xf5\x8d\xca\xe3\xeb\x70",
        // "" / M(None) / S(0) / L(0)
        "\x68\x8a\x57\x70\xb6\xdf\x26\x7e\xba\x83\x3a\x6f\x16\x99\x4a\x58\x77\xfb\x8c\x23\x58\x61\x9b\x66\x1e\x01\x58\xd2\xcd\xbd\x69\xf2",
        // "CC_SHA1_Init" / M(Rot) / S(41) / L(12)
        "\x6c\x6c\x88\x7c\x71\x6a\x5a\x88\x72\x97\x92\x9d\x29\xc5\x9c\x57",
        // "" / M(None) / S(0) / L(0)
        "\xe0\xa1\xb9\x70\xd6\xde\x5d\xe0\x59\x0d\xf9\x45\xd2\x91\x49\xff\x49\xf4\x35\xf8\x15\x2d\x06\x76\xa9\xb5\xb7\x45\x09\x47\x21\xda",
        // "Contents/_MASReceipt" / M(Xor4) / S(143) / L(20)
        "\xf8\xd4\xd5\xcf\xde\xd5\xcf\xc8\x94\xe4\xf6\xfa\xe8\xe9\xde\xd8\xde\xd2\xcb\xcf\xbb",
        // "SecPolicyCreateBasicX509" / M(Xor4) / S(230) / L(24)
        "\xf5\xc3\xc5\xf6\xc9\xca\xcf\xc5\xdf\xe5\xd4\xc3\xc7\xd2\xc3\xe4\xc7\xd5\xcf\xc5\xfe\x93\x96\x9f\xa6\x57\x2e\x09\xf2\x85\xba\x5e\x20",
        // "CMSDecoderCreate" / M(Xor4) / S(90) / L(16)
        "\xb9\xb7\xa9\xbe\x9f\x99\x95\x9e\x9f\x88\xb9\x88\x9f\x9b\x8e\x9f\xfa",
        // "_MASReceipt/receipt" / M(Rot) / S(11) / L(19)
        "\x6a\x58\x4c\x5e\x5d\x70\x6e\x70\x74\x7b\x7f\x3a\x7d\x70\x6e\x70\x74\x7b\x7f\x0b",
        // "IOServiceGetMatchingServices" / M(Rot) / S(14) / L(28)
        "\x57\x5d\x61\x73\x80\x84\x77\x71\x73\x55\x73\x82\x5b\x6f\x82\x71\x76\x77\x7c\x75\x61\x73\x80\x84\x77\x71\x73\x81\x0e\x79\x04\x4c\xdc\xc4\x43\x9a\x7d",
        // "en0" / M(Rot) / S(137) / L(3)
        "\xee\xf7\xb9\x89\x35\x36\x02\x99\xb3\xc4\x26\xd1\x38\xb5\x57\xa5",
        // "CFDataCreateMutable" / M(Xor3) / S(127) / L(19)
        "\xd0\xd5\xd7\xf2\xe7\xf2\xd0\xe1\xf6\xf2\xe7\xf6\xde\xe6\xe7\xf2\xf1\xff\xf6\x93",
        // "SecCodeCopySelf" / M(Xor4) / S(184) / L(15)
        "\xd3\xe5\xe3\xc3\xef\xe4\xe5\xc3\xef\xf0\xf9\xd3\xe5\xec\xe6\x80",
        // "" / M(None) / S(0) / L(0)
        "\x29\x2c\x75\xd1\xc6\xb8\x0e\x78\xb1\x98\xee\x60\x4c\x6d\x5f\xa7\x57\xa2\x1a\x87\xb4\x21\xd1\x06\x78\x8c\xfa\x04\x18\xa4\xd2\xe1",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Rot) / S(24) / L(32)
        "\x91\x91\x91\x91\x3f\x45\x3f\x65\x65\x3f\x45\x3f\x7c\x7c\x3f\x6c\x3f\x60\x60\x3f\x52\x3f\x85\x85\x3f\x52\x3f\x8b\x8b\x3f\x72\x3f\x18",
        // "CMSDecoderCreate" / M(Xor1) / S(113) / L(16)
        "\x32\x3c\x22\x35\x14\x12\x1e\x15\x14\x03\x32\x03\x14\x10\x05\x14\x71",
        // "IOServiceGetMatchingServices" / M(Xor1) / S(245) / L(28)
        "\xbc\xba\xa6\x90\x87\x83\x9c\x96\x90\xb2\x90\x81\xb8\x94\x81\x96\x9d\x9c\x9b\x92\xa6\x90\x87\x83\x9c\x96\x90\x86\xf5\x9c\xf5\xd8\x99\x74\xd5\x8d\xd2",
        // "" / M(None) / S(0) / L(0)
        "\x5c\x60\x57\x72\x45\xdb\x9f\xa2\x9c\x93\xdd\x8e\x78\xe4\xa5\xa2\x3d\x2a\x4a\x04\x2f\x7c\x07\x48\xd0\x15\x7a\x53\x73\x33\xd8\x0f",
        // "Contents" / M(Xor4) / S(176) / L(8)
        "\x43\x6f\x6e\x74\x65\x6e\x74\x73\x00\x2e\xc3\x28\xf8\xfb\x2d\x97",
        // "CFDateFormatterCreate" / M(Xor3) / S(234) / L(21)
        "\x43\x46\x44\x61\x74\x65\x46\x6f\x72\x6d\x61\x74\x74\x65\x72\x43\x72\x65\x61\x74\x65\x00",
        // "IORegistryEntryCreateCFProperty" / M(Xor2) / S(146) / L(31)
        "\xfb\xfd\xe0\xd7\xd5\xdb\xc1\xc6\xc0\xcb\xf7\xdc\xc6\xc0\xcb\xf1\xc0\xd7\xd3\xc6\xd7\xf1\xf4\xe2\xc0\xdd\xc2\xd7\xc0\xc6\xcb\xb2",
        // "" / M(None) / S(0) / L(0)
        "\xfb\x5a\x82\xbd\xf5\x7a\x02\xb4\x65\xf0\x3d\xb0\xf2\x55\xff\x2f\xbc\xe5\x8a\xc4\x31\x9e\x09\x4c\x64\xfc\xf0\x87\xe6\x24\x9f\xe7",
        // "" / M(None) / S(0) / L(0)
        "\x2d\xed\x51\xc8\xf2\x50\xa3\x0d\x6e\x65\x7a\x6a\x4a\x69\x3f\x83\xb0\x7e\x63\xeb\x4c\xb3\x6f\x14\x2d\x95\x6c\x2d\x88\xb2\x11\x58",
        // "CC_SHA1_Final" / M(Rot) / S(30) / L(13)
        "\x61\x61\x7d\x71\x66\x5f\x4f\x7d\x64\x87\x8c\x7f\x8a\x1e\x12\x98",
        // "CFStringCreateWithCString" / M(Xor1) / S(156) / L(25)
        "\xdf\xda\xcf\xe8\xee\xf5\xf2\xfb\xdf\xee\xf9\xfd\xe8\xf9\xcb\xf5\xe8\xf4\xdf\xcf\xe8\xee\xf5\xf2\xfb\x9c\x98\xaf\x6a\x83\x39\x40\xac\xb5",
        // "CFDataGetBytePtr" / M(Xor3) / S(193) / L(16)
        "\x91\x94\x96\xb3\xa6\xb3\x95\xb7\xa6\x90\xab\xa6\xb7\x82\xa6\xa0\xd2",
        // "CC_SHA1" / M(Rot) / S(101) / L(7)
        "\xa8\xa8\xc4\xb8\xad\xa6\x96\x65\xda\xf3\xf0\x36\x77\xb4\x61\x8a",
        // "CFBundleGetMainBundle" / M(Xor3) / S(133) / L(21)
        "\xd8\xdd\xd9\xee\xf5\xff\xf7\xfe\xdc\xfe\xef\xd6\xfa\xf2\xf5\xd9\xee\xf5\xff\xf7\xfe\x9b",
        // "/usr/lib/libSystem.dylib" / M(Xor1) / S(18) / L(24)
        "\x3d\x67\x61\x60\x3d\x7e\x7b\x70\x3d\x7e\x7b\x70\x41\x6b\x61\x66\x77\x7f\x3c\x76\x6b\x7e\x7b\x70\x12\xa6\x5f\xf5\x2a\x5d\x57\x4e\x47",
        // "SecCodeCopySelf" / M(Rot) / S(27) / L(15)
        "\x6e\x80\x7e\x5e\x8a\x7f\x80\x5e\x8a\x8b\x94\x6e\x80\x87\x81\x1b",
        // "SecPolicyCreateBasicX509" / M(Xor2) / S(45) / L(24)
        "\x5f\x69\x6f\x5c\x63\x60\x65\x6f\x75\x4f\x7e\x69\x6d\x78\x69\x4e\x6d\x7f\x65\x6f\x54\x39\x3c\x35\x0c\x3d\x8c\x26\x67\x8e\x7b\xdc\x03",
        // "getifaddrs" / M(Xor3) / S(65) / L(10)
        "\x36\x34\x25\x38\x37\x30\x35\x35\x23\x22\x51\x40\x53\xc0\xe1\x44",
        // "CFBundleCopyBundleURL" / M(Xor3) / S(221) / L(21)
        "\xb0\xb5\xb1\x86\x9d\x97\x9f\x96\xb0\x9c\x83\x8a\xb1\x86\x9d\x97\x9f\x96\xa6\xa1\xbf\xf3",
        // "" / M(None) / S(0) / L(0)
        "\x82\xd7\x36\x87\x0a\x96\xf0\x39\x35\x0b\x61\x45\x51\x55\xdc\x50\xce\x5a\x1a\xb8\x9c\xec\xd6\xd5\x6b\x79\x91\x6a\x46\x0d\x1c\x35",
        // "" / M(None) / S(0) / L(0)
        "\x2f\x6e\x09\x05\x17\xe9\xa6\x5f\xaf\x08\xd0\x94\x17\x83\x3d\x58\x2a\xf3\x9b\x1e\x6c\x03\x3b\x4d\xa8\xc7\x7e\x04\x7e\x06\x92\xd5",
        // "CFDictionaryAddValue" / M(Xor1) / S(162) / L(20)
        "\xe1\xe4\xe6\xcb\xc1\xd6\xcb\xcd\xcc\xc3\xd0\xdb\xe3\xc6\xc6\xf4\xc3\xce\xd7\xc7\xa2",
        // "" / M(None) / S(0) / L(0)
        "\x5c\x58\x74\xbd\x3e\x59\x13\x76\x30\x27\x1d\x7e\x80\xd3\x99\x1e\xd1\xc9\xeb\x41\x8e\x15\xa2\x59\x12\xb0\x90\x59\xab\x4c\x4b\x39",
        // "CMSDecoderFinalizeMessage" / M(Xor1) / S(176) / L(25)
        "\xf3\xfd\xe3\xf4\xd5\xd3\xdf\xd4\xd5\xc2\xf6\xd9\xde\xd1\xdc\xd9\xca\xd5\xfd\xd5\xc3\xc3\xd1\xd7\xd5\xb0\xe9\x0f\xa2\x15\xd4\x18\x32\xd4",
        // "dlopen" / M(Rot) / S(114) / L(6)
        "\xd6\xde\xe1\xe2\xd7\xe0\x72\xed\x66\x46\xcc\xcc\xae\x51\xbf\x37",
        // "CFEqual" / M(Xor3) / S(13) / L(7)
        "\x5e\x5b\x58\x6c\x68\x7c\x71\x1d\x1f\x5f\xfd\xe7\x88\xb2\x92\xd9",
        // "" / M(None) / S(0) / L(0)
        "\xd8\xa9\x76\x99\x02\x69\xbe\x0b\x22\xd1\x32\x2b\x74\x25\xaa\x4e\xb5\xcd\x74\x25\x5b\x45\x89\x23\x80\xcb\x47\xa5\x57\xa9\xb7\x24",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor1) / S(70) / L(32)
        "\x3f\x3f\x3f\x3f\x61\x6b\x61\x0b\x0b\x61\x6b\x61\x22\x22\x61\x12\x61\x0e\x0e\x61\x7c\x61\x2b\x2b\x61\x7c\x61\x35\x35\x61\x1c\x61\x46",
        // "longjmp" / M(Rot) / S(206) / L(7)
        "\x3a\x3d\x3c\x35\x38\x3b\x3e\xce\x8d\x0b\x11\x70\x4a\xe7\x9f\xb7",
        // "" / M(None) / S(0) / L(0)
        "\x04\x4b\x4b\x55\x5f\x73\x73\x82\x14\x1d\xcc\x69\xba\x5d\xd0\xee\x30\xc5\x11\x06\xf5\xa2\x81\xb3\xa5\x2b\x4d\xad\x0a\x4a\x98\x9f",
        // "CMSDecoderCopyContent" / M(Xor3) / S(49) / L(21)
        "\x04\x0a\x14\x03\x22\x24\x28\x23\x22\x35\x04\x28\x37\x3e\x04\x28\x29\x33\x22\x29\x33\x47",
        // "CFDictionaryGetValue" / M(Rot) / S(127) / L(20)
        "\xc2\xc5\xc3\xe8\xe2\xf3\xe8\xee\xed\xe0\xf1\xf8\xc6\xe4\xf3\xd5\xe0\xeb\xf4\xe4\x7f",
        // "" / M(None) / S(0) / L(0)
        "\xbd\x14\x5e\x0b\x6b\x4d\x7e\xc6\x9d\xaf\x13\x55\x4f\xe7\xa1\xcc\x25\x1c\x58\xa9\x9e\x6d\x8c\x64\x8d\x37\xf6\x53\x07\x26\x04\x4d",
        // "SecAsn1CoderCreate" / M(Xor3) / S(31) / L(18)
        "\x61\x57\x51\x73\x41\x5c\x03\x71\x5d\x56\x57\x40\x71\x40\x57\x53\x46\x57\x32",
        // "SecStaticCodeCreateWithPath" / M(Xor4) / S(143) / L(27)
        "\x4f\x79\x7f\x4f\x68\x7d\x68\x75\x7f\x5f\x73\x78\x79\x5f\x6e\x79\x7d\x68\x79\x4b\x75\x68\x74\x4c\x7d\x68\x74\x1c\x27\xa2\xf7\xd7\x43\xdf\x77\xb5",
        // "CMSDecoderCopyContent" / M(Xor4) / S(178) / L(21)
        "\x0f\x01\x1f\x08\x29\x2f\x23\x28\x29\x3e\x0f\x23\x3c\x35\x0f\x23\x22\x38\x29\x22\x38\x4c",
        // "" / M(None) / S(0) / L(0)
        "\x80\x1d\x55\x64\x0d\xe8\x4d\x63\x9f\xf5\xae\x4b\x03\x14\x27\x40\x9d\x15\xb6\xb6\x42\x71\x9a\x70\x94\x40\xb6\x06\x3f\x95\x79\x39",
        // "anchor apple generic" / M(Rot) / S(34) / L(20)
        "\x83\x90\x85\x8a\x91\x94\x42\x83\x92\x92\x8e\x87\x42\x89\x87\x90\x87\x94\x8b\x85\x22",
        // "IORegistryEntryGetParentEntry" / M(Xor1) / S(170) / L(29)
        "\xe3\xe5\xf8\xcf\xcd\xc3\xd9\xde\xd8\xd3\xef\xc4\xde\xd8\xd3\xed\xcf\xde\xfa\xcb\xd8\xcf\xc4\xde\xef\xc4\xde\xd8\xd3\xaa\x32\x6b\x53\x61\x25\xea\x33\x3f",
        // "/System/Library/Frameworks/Security.framework/Security" / M(Xor1) / S(21) / L(54)
        "\x3a\x46\x6c\x66\x61\x70\x78\x3a\x59\x7c\x77\x67\x74\x67\x6c\x3a\x53\x67\x74\x78\x70\x62\x7a\x67\x7e\x66\x3a\x46\x70\x76\x60\x67\x7c\x61\x6c\x3b\x73\x67\x74\x78\x70\x62\x7a\x67\x7e\x3a\x46\x70\x76\x60\x67\x7c\x61\x6c\x15",
        // "" / M(None) / S(0) / L(0)
        "\x0f\x1e\xa7\x04\xe4\x8d\xa5\xe5\x7f\x42\xf3\xe8\x2a\x1a\xc9\x1d\xa3\xb6\x9d\x00\xe6\x6f\xd3\x46\x0e\x36\xbd\x09\x04\xbf\xbe\xba",
        // "NSApplicationMain" / M(Rot) / S(121) / L(17)
        "\xc7\xcc\xba\xe9\xe9\xe5\xe2\xdc\xda\xed\xe2\xe8\xe7\xc6\xda\xe2\xe7\x79",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor2) / S(173) / L(36)
        "\xcb\xce\xca\xfd\xe6\xec\xe4\xed\xcf\xed\xfc\xde\xe9\xe4\xfd\xed\xce\xe7\xfa\xc1\xe6\xee\xe7\xcc\xe1\xeb\xfc\xe1\xe7\xe6\xe9\xfa\xf1\xc3\xed\xf1\x88",
        // "" / M(None) / S(0) / L(0)
        "\x76\x6b\x58\x1b\xea\x0c\x76\x7f\x72\x00\x19\x41\x8b\x2b\x9d\x4d\x32\x7f\x49\x36\x90\xb9\x7b\x55\xa7\x3b\xab\xc8\xa3\x98\x6e\xff",
        // "CMSDecoderFinalizeMessage" / M(Rot) / S(173) / L(25)
        "\xf0\xfa\x00\xf1\x12\x10\x1c\x11\x12\x1f\xf3\x16\x1b\x0e\x19\x16\x27\x12\xfa\x12\x20\x20\x0e\x14\x12\xad\xd8\x76\x45\x97\x40\x84\x3b\x1f",
        // "" / M(None) / S(0) / L(0)
        "\xcf\xf2\xce\xe8\x8f\x9e\x80\x56\x83\x1e\xb7\xaf\xde\x19\xcb\xb8\x8e\x81\x5d\x3b\x1c\x25\x4b\x76\x9c\x65\x4c\x01\x7d\xd8\xff\x1c",
        // "CFStringCompare" / M(Rot) / S(90) / L(15)
        "\x9d\xa0\xad\xce\xcc\xc3\xc8\xc1\x9d\xc9\xc7\xca\xbb\xcc\xbf\x5a",
        // "" / M(None) / S(0) / L(0)
        "\x7d\xfa\x8a\xdb\x4c\x83\x81\x79\xf0\xc7\xd8\x54\x9d\x55\x09\x30\x9f\x45\x7c\xa1\x1b\x95\x00\xb3\x75\xd4\x5d\xb3\x51\xfd\xd4\x09",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(231) / L(66)
        "\x5a\x26\x0c\x06\x01\x10\x18\x5a\x39\x1c\x17\x07\x14\x07\x0c\x5a\x33\x07\x14\x18\x10\x02\x1a\x07\x1e\x06\x5a\x36\x1a\x07\x10\x33\x1a\x00\x1b\x11\x14\x01\x1c\x1a\x1b\x5b\x13\x07\x14\x18\x10\x02\x1a\x07\x1e\x5a\x36\x1a\x07\x10\x33\x1a\x00\x1b\x11\x14\x01\x1c\x1a\x1b\x75",
        // "com.edcodia.graphpouch" / M(Rot) / S(213) / L(22)
        "\x38\x44\x42\x03\x3a\x39\x38\x44\x39\x3e\x36\x03\x3c\x47\x36\x45\x3d\x45\x44\x4a\x38\x3d\xd5",
        // "CFDataGetLength" / M(Xor3) / S(211) / L(15)
        "\xa0\xa5\xa7\x82\x97\x82\xa4\x86\x97\xaf\x86\x8d\x84\x97\x8b\xe3",
        // "" / M(None) / S(0) / L(0)
        "\x2d\xef\xd6\x89\x7c\x76\xaf\x5e\xe2\x18\xbf\x7b\x0a\xb5\x76\xe9\xf0\x78\xa4\xc9\x87\x02\x47\x73\xcd\x9a\x04\xc3\x06\x0a\xca\x92",
        // "CFDictionaryAddValue" / M(Xor2) / S(2) / L(20)
        "\x54\x51\x53\x7e\x74\x63\x7e\x78\x79\x76\x65\x6e\x56\x73\x73\x41\x76\x7b\x62\x72\x17",
        // "SecAsn1CoderCreate" / M(Xor1) / S(200) / L(18)
        "\x9b\xad\xab\x89\xbb\xa6\xf9\x8b\xa7\xac\xad\xba\x8b\xba\xad\xa9\xbc\xad\xc8",
        // "receipt" / M(Xor4) / S(41) / L(7)
        "\xe2\xf5\xf3\xf5\xf9\xe0\xe4\x90\xcc\x64\x21\x36\x73\x9a\x33\x07",
        // "CFRelease" / M(Rot) / S(149) / L(9)
        "\xd8\xdb\xe7\xfa\x01\xfa\xf6\x08\xfa\x95\x7b\xb7\xbc\x6c\xad\x18",
        // "SecCodeCopySelf" / M(Xor4) / S(241) / L(15)
        "\x43\x75\x73\x53\x7f\x74\x75\x53\x7f\x60\x69\x43\x75\x7c\x76\x10",
        // "CFStringCreateWithCString" / M(Xor4) / S(71) / L(25)
        "\x2d\x28\x3d\x1a\x1c\x07\x00\x09\x2d\x1c\x0b\x0f\x1a\x0b\x39\x07\x1a\x06\x2d\x3d\x1a\x1c\x07\x00\x09\x6e\x2a\xe4\xa7\xb7\xfb\xce\xe4\xa8",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor2) / S(207) / L(36)
        "\xa9\xac\xa8\x9f\x84\x8e\x86\x8f\xad\x8f\x9e\xbc\x8b\x86\x9f\x8f\xac\x85\x98\xa3\x84\x8c\x85\xae\x83\x89\x9e\x83\x85\x84\x8b\x98\x93\xa1\x8f\x93\xea",
        // "" / M(None) / S(0) / L(0)
        "\xe5\xc0\x95\x22\x4b\x53\xba\xb6\x55\x03\xfd\x51\x0e\xfe\x6b\x02\x06\xc3\xae\x8e\xf6\xca\x3f\x9b\x0a\x16\xf4\x5a\x2b\x5c\xa3\x2b",
        // "SecAsn1Decode" / M(Xor2) / S(130) / L(13)
        "\xc1\xf7\xf1\xd3\xe1\xfc\xa3\xd6\xf7\xf1\xfd\xf6\xf7\x92\x51\x53",
        // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor3) / S(184) / L(48)
        "\xc6\xba\x90\x9a\x9d\x8c\x84\xc6\xa5\x80\x8b\x9b\x88\x9b\x90\xc6\xaf\x9b\x88\x84\x8c\x9e\x86\x9b\x82\x9a\xc6\xa0\xa6\xa2\x80\x9d\xc7\x8f\x9b\x88\x84\x8c\x9e\x86\x9b\x82\xc6\xa0\xa6\xa2\x80\x9d\xe9",
        // "CFNumberCreate" / M(Xor2) / S(102) / L(14)
        "\x35\x30\x38\x03\x1b\x14\x13\x04\x35\x04\x13\x17\x02\x13\x76\x75",
        // "" / M(None) / S(0) / L(0)
        "\xc3\xbb\x7d\xb8\xa7\x78\x7d\xed\x71\xe1\x1a\xf9\x0b\x7d\x33\x32\x90\xee\xce\xac\xde\x6d\xee\xb9\xfd\xd9\xa4\x92\xac\x41\x38\x67",
        // "" / M(None) / S(0) / L(0)
        "\x92\x1c\x36\x15\xf2\xed\xcf\xd4\x32\xc0\xbf\x49\xeb\xd1\xac\x50\x18\x1b\xb5\x99\xb0\x62\xf3\x5b\x29\x61\x82\x91\x86\x90\x1e\x9c",
        // "CFArrayCreateMutable" / M(Xor2) / S(85) / L(20)
        "\x03\x06\x01\x32\x32\x21\x39\x03\x32\x25\x21\x34\x25\x0d\x35\x34\x21\x22\x2c\x25\x40",
        // "com.edcodia.graphpouch" / M(Xor3) / S(219) / L(22)
        "\x91\x9d\x9f\xdc\x97\x96\x91\x9d\x96\x9b\x93\xdc\x95\x80\x93\x82\x9a\x82\x9d\x87\x91\x9a\xf2",
        // "exit" / M(Xor1) / S(252) / L(4)
        "\x99\x84\x95\x88\xfc\x66\x13\x53\x96\xc2\x1d\x59\xe8\xb1\xfe\xac",
        // "CFDataGetLength" / M(Xor4) / S(216) / L(15)
        "\xc3\xc6\xc4\xe1\xf4\xe1\xc7\xe5\xf4\xcc\xe5\xee\xe7\xf4\xe8\x80",
        // "NSApplicationMain" / M(Xor1) / S(68) / L(17)
        "\x0a\x17\x05\x34\x34\x28\x2d\x27\x25\x30\x2d\x2b\x2a\x09\x25\x2d\x2a\x44",
        // "" / M(None) / S(0) / L(0)
        "\xae\x5a\x39\xc2\x92\x61\x85\x3f\xd6\xb3\xf6\x45\xbd\x8c\xc6\xa1\xaf\x42\x0f\x1a\xba\xa8\x48\xf5\x6d\xdc\xdb\x2f\x5b\x6e\x4f\xf3",
        // "" / M(None) / S(0) / L(0)
        "\xea\x0b\x52\xa5\x14\x20\x8a\x76\x6b\x73\x89\x95\xa7\x4a\x13\x33\xf3\xa6\xb6\x56\x34\xb0\x4d\xbb\x70\x2d\x6f\xec\x4d\x64\xb5\x5f",
        // "" / M(None) / S(0) / L(0)
        "\x48\x83\xbb\x28\xe4\x7c\x8e\x7c\x4e\x69\x64\x63\x74\x98\xa8\xb2\x6b\xae\xc0\x6f\x21\xea\x3d\x8a\xc3\xcf\xea\xeb\x3b\x0d\xe7\xef",
        // "SecStaticCodeCheckValidity" / M(Xor3) / S(82) / L(26)
        "\x26\x10\x16\x26\x01\x14\x01\x1c\x16\x36\x1a\x11\x10\x36\x1d\x10\x16\x1e\x23\x14\x19\x1c\x11\x1c\x01\x0c\x75\x18\xc0\x33\x92\x5b\x84\xab\x73",
        // "info-plist" / M(Rot) / S(163) / L(10)
        "\x0c\x11\x09\x12\xd0\x13\x0f\x0c\x16\x17\xa3\xeb\x33\xba\xe9\xe9",
        // "CC_SHA1" / M(Xor3) / S(232) / L(7)
        "\xbb\xbb\xa7\xab\xb0\xb9\xc9\xf8\x9e\xc4\xab\xce\x87\x14\x38\x68",
        // "longjmp" / M(Rot) / S(115) / L(7)
        "\xdf\xe2\xe1\xda\xdd\xe0\xe3\x73\x58\x2a\xb2\x7e\x28\xc7\x37\x27",
        // "SecCodeCheckValidity" / M(Xor3) / S(46) / L(20)
        "\x10\x26\x20\x00\x2c\x27\x26\x00\x2b\x26\x20\x28\x15\x22\x2f\x2a\x27\x2a\x37\x3a\x43",
        // "" / M(None) / S(0) / L(0)
        "\x24\x20\x31\x43\xd6\x7a\x8b\x40\x3a\x08\x96\xc5\x8f\x63\x7d\xe5\x6a\xa0\x02\x61\x29\xa7\x78\x59\x5e\x9b\xf6\xa0\xa5\x14\xf0\x0d",
        // "anchor apple generic" / M(Rot) / S(81) / L(20)
        "\xb2\xbf\xb4\xb9\xc0\xc3\x71\xb2\xc1\xc1\xbd\xb6\x71\xb8\xb6\xbf\xb6\xc3\xba\xb4\x51",
        // "_MASReceipt" / M(Xor4) / S(17) / L(11)
        "\x4f\x5d\x51\x43\x42\x75\x73\x75\x79\x60\x64\x10\x34\x78\x9d\x98",
        // "info-plist" / M(Xor4) / S(58) / L(10)
        "\xc9\xce\xc6\xcf\x8d\xd0\xcc\xc9\xd3\xd4\xa0\x3c\x86\xf1\xaf\x59",
        // "CFDateFormatterCreateDateFromString" / M(Rot) / S(211) / L(35)
        "\x16\x19\x17\x34\x47\x38\x19\x42\x45\x40\x34\x47\x47\x38\x45\x16\x45\x38\x34\x47\x38\x17\x34\x47\x38\x19\x45\x42\x40\x26\x47\x45\x3c\x41\x3a\xd3",
        // "CMSDecoderGetNumSigners" / M(Rot) / S(172) / L(23)
        "\xef\xf9\xff\xf0\x11\x0f\x1b\x10\x11\x1e\xf3\x11\x20\xfa\x21\x19\xff\x15\x13\x1a\x11\x1e\x1f\xac\x45\xa8\xf6\x3f\x92\x88\x1b\x2e",
        // "SecAsn1CoderRelease" / M(Rot) / S(183) / L(19)
        "\x0a\x1c\x1a\xf8\x2a\x25\xe8\xfa\x26\x1b\x1c\x29\x09\x1c\x23\x1c\x18\x2a\x1c\xb7",
        // "IOMACAddress" / M(Xor2) / S(37) / L(12)
        "\x7c\x7a\x78\x74\x76\x74\x51\x51\x47\x50\x46\x46\x35\x7e\x98\xa6",
        // "" / M(None) / S(0) / L(0)
        "\x2f\x5c\xcd\xae\x09\x45\x35\x86\x43\x1f\x6c\xbf\xc1\x95\x12\x6a\x70\x4e\xf5\x9b\x68\xd3\xfe\x17\xf1\xd5\x76\x27\x71\x46\x0b\xb3",
        // "CC_SHA1_Final" / M(Xor1) / S(19) / L(13)
        "\x50\x50\x4c\x40\x5b\x52\x22\x4c\x55\x7a\x7d\x72\x7f\x13\x58\x7a",
        // "CFURLCreateCopyAppendingPathComponent" / M(Xor1) / S(253) / L(37)
        "\xbe\xbb\xa8\xaf\xb1\xbe\x8f\x98\x9c\x89\x98\xbe\x92\x8d\x84\xbc\x8d\x8d\x98\x93\x99\x94\x93\x9a\xad\x9c\x89\x95\xbe\x92\x90\x8d\x92\x93\x98\x93\x89\xfd",
        // "setjmp" / M(Xor1) / S(228) / L(6)
        "\x97\x81\x90\x8e\x89\x94\xe4\x3c\x2f\x1f\x66\x35\x2a\xc1\x1a\x8f",
        // "CFEqual" / M(Rot) / S(146) / L(7)
        "\xd5\xd8\xd7\x03\x07\xf3\xfe\x92\x6d\xc3\xb5\x65\x45\x56\x81\x1a",
        // "strcmp" / M(Rot) / S(18) / L(6)
        "\x85\x86\x84\x75\x7f\x82\x12\x16\xa9\x82\xf5\x8f\xe5\x7d\x81\x71",
        // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor1) / S(91) / L(50)
        "\x74\x08\x22\x28\x2f\x3e\x36\x74\x17\x32\x39\x29\x3a\x29\x22\x74\x1d\x29\x3a\x36\x3e\x2c\x34\x29\x30\x28\x74\x1a\x2b\x2b\x10\x32\x2f\x75\x3d\x29\x3a\x36\x3e\x2c\x34\x29\x30\x74\x1a\x2b\x2b\x10\x32\x2f\x5b",
        // "_MASReceipt/receipt" / M(Rot) / S(92) / L(19)
        "\xbb\xa9\x9d\xaf\xae\xc1\xbf\xc1\xc5\xcc\xd0\x8b\xce\xc1\xbf\xc1\xc5\xcc\xd0\x5c",
        // "CFDataCreate" / M(Xor4) / S(196) / L(12)
        "\x03\x06\x04\x21\x34\x21\x03\x32\x25\x21\x34\x25\x40\x55\xbe\x4c",
        // "CMSDecoderCreate" / M(Xor4) / S(120) / L(16)
        "\xbb\xb5\xab\xbc\x9d\x9b\x97\x9c\x9d\x8a\xbb\x8a\x9d\x99\x8c\x9d\xf8",
        // "" / M(None) / S(0) / L(0)
        "\xc4\x77\x58\xcf\xa1\xe8\xd2\x00\x2f\xb3\x6b\x8d\x3f\xa4\x5a\x47\xaa\x21\x2a\x7d\xa3\xa9\x01\x7b\x97\x56\x55\x3a\xa3\x4c\xb3\x43",
        // "CFArrayAppendValue" / M(Xor3) / S(190) / L(18)
        "\x92\x97\x90\xa3\xa3\xb0\xa8\x90\xa1\xa1\xb4\xbf\xb5\x87\xb0\xbd\xa4\xb4\xd1",
        // "SecStaticCodeCreateWithPath" / M(Xor2) / S(107) / L(27)
        "\x1c\x2a\x2c\x1c\x3b\x2e\x3b\x26\x2c\x0c\x20\x2b\x2a\x0c\x3d\x2a\x2e\x3b\x2a\x18\x26\x3b\x27\x1f\x2e\x3b\x27\x4f\x73\xd2\xf9\x4c\x4d\x5c\x05\x29",
        // "SecAsn1CoderRelease" / M(Xor1) / S(162) / L(19)
        "\xf1\xc7\xc1\xe3\xd1\xcc\x93\xe1\xcd\xc6\xc7\xd0\xf0\xc7\xce\xc7\xc3\xd1\xc7\xa2",
        // "SecStaticCodeCheckValidity" / M(Xor1) / S(118) / L(26)
        "\x25\x13\x15\x25\x02\x17\x02\x1f\x15\x35\x19\x12\x13\x35\x1e\x13\x15\x1d\x20\x17\x1a\x1f\x12\x1f\x02\x0f\x76\x85\x58\x44\x72\x17\xd6\x3d\xdf",
        // "CFNumberCreate" / M(Xor4) / S(32) / L(14)
        "\x43\x46\x4e\x75\x6d\x62\x65\x72\x43\x72\x65\x61\x74\x65\x00\x82",
        // "SecCodeCheckValidityWithErrors" / M(Xor2) / S(205) / L(30)
        "\xb9\x8f\x89\xa9\x85\x8e\x8f\xa9\x82\x8f\x89\x81\xbc\x8b\x86\x83\x8e\x83\x9e\x93\xbd\x83\x9e\x82\xaf\x98\x98\x85\x98\x99\xea\x9e\x02\x6a\x56\x80\xd4\xa8\x7b",
        // "IOIteratorNext" / M(Xor4) / S(225) / L(14)
        "\x59\x5f\x59\x64\x75\x62\x71\x64\x7f\x62\x5e\x75\x68\x64\x10\xc3",
        // "" / M(None) / S(0) / L(0)
        "\xf0\xb9\x53\x33\x55\x6d\x0f\x29\xa4\xd4\x70\xea\x2f\x55\x15\x75\x3d\x20\xd2\x36\xa3\xbe\x00\x80\x86\x9f\x7b\x6e\x92\x65\xf0\x05",
        // "receipt" / M(Xor2) / S(68) / L(7)
        "\x26\x31\x37\x31\x3d\x24\x20\x54\x50\xd3\x3f\x27\x55\x4b\x31\x53",
        // "CFBundleGetIdentifier" / M(Xor3) / S(1) / L(21)
        "\x54\x51\x55\x62\x79\x73\x7b\x72\x50\x72\x63\x5e\x73\x72\x79\x63\x7e\x71\x7e\x72\x65\x17",
        // "/System/Library/Frameworks/Security.framework/Security" / M(Rot) / S(234) / L(54)
        "\x19\x3d\x63\x5d\x5e\x4f\x57\x19\x36\x53\x4c\x5c\x4b\x5c\x63\x19\x30\x5c\x4b\x57\x4f\x61\x59\x5c\x55\x5d\x19\x3d\x4f\x4d\x5f\x5c\x53\x5e\x63\x18\x50\x5c\x4b\x57\x4f\x61\x59\x5c\x55\x19\x3d\x4f\x4d\x5f\x5c\x53\x5e\x63\xea",
        // "enumerateObjectsUsingBlock:" / M(Xor2) / S(168) / L(27)
        "\xe9\xe2\xf9\xe1\xe9\xfe\xed\xf8\xe9\xc3\xee\xe6\xe9\xef\xf8\xff\xd9\xff\xe5\xe2\xeb\xce\xe0\xe3\xef\xe7\xb6\x8c\x50\x87\x3e\xb4\x55\x8d\xe0\x0e",
        // "CFDateFormatterCreateDateFromString" / M(Rot) / S(73) / L(35)
        "\x8c\x8f\x8d\xaa\xbd\xae\x8f\xb8\xbb\xb6\xaa\xbd\xbd\xae\xbb\x8c\xbb\xae\xaa\xbd\xae\x8d\xaa\xbd\xae\x8f\xbb\xb8\xb6\x9c\xbd\xbb\xb2\xb7\xb0\x49",
        // "1.0.4" / M(Xor3) / S(226) / L(5)
        "\xc3\xdc\xc2\xdc\xc6\xf2\x30\xd9\x74\x07\x56\x71\x1d\x06\xc4\x0b",
        // "CFURLCreateDataAndPropertiesFromResource" / M(Xor4) / S(63) / L(40)
        "\x4c\x49\x5a\x5d\x43\x4c\x7d\x6a\x6e\x7b\x6a\x4b\x6e\x7b\x6e\x4e\x61\x6b\x5f\x7d\x60\x7f\x6a\x7d\x7b\x66\x6a\x7c\x49\x7d\x60\x62\x5d\x6a\x7c\x60\x7a\x7d\x6c\x6a\x0f\x19\x05\x4e\xf9\x4b\xb2\x04\xda",
        // "IORegistryEntryGetParentEntry" / M(Rot) / S(132) / L(29)
        "\xcd\xd3\xd6\xe9\xeb\xed\xf7\xf8\xf6\xfd\xc9\xf2\xf8\xf6\xfd\xcb\xe9\xf8\xd4\xe5\xf6\xe9\xf2\xf8\xc9\xf2\xf8\xf6\xfd\x84\xcf\xec\xed\xfb\x82\xfb\x8a\xf8",
        // "CFDataCreateMutable" / M(Xor2) / S(141) / L(19)
        "\xda\xdf\xdd\xf8\xed\xf8\xda\xeb\xfc\xf8\xed\xfc\xd4\xec\xed\xf8\xfb\xf5\xfc\x99",
        // "CFArrayCreateMutable" / M(Xor2) / S(238) / L(20)
        "\xb8\xbd\xba\x89\x89\x9a\x82\xb8\x89\x9e\x9a\x8f\x9e\xb6\x8e\x8f\x9a\x99\x97\x9e\xfb",
        // "" / M(None) / S(0) / L(0)
        "\x0e\x97\x1d\x55\x75\x05\x32\x34\xe3\x09\xab\x6c\x06\x43\x7a\x17\xcf\xb6\xbe\x35\xba\x4e\x53\xea\xaa\xbc\x16\x00\xf8\x0a\xf6\x70",
        // "exit" / M(Rot) / S(220) / L(4)
        "\x41\x54\x45\x50\xdc\xfa\xf2\x5e\x6d\xc2\x3b\x05\x28\x00\xfe\x4b",
        // "1.0.4" / M(Rot) / S(230) / L(5)
        "\x17\x14\x16\x14\x1a\xe6\xa9\xfd\xd7\xda\x67\x22\x25\xbf\xc5\xae",
        // "CFBundleUnloadExecutable" / M(Rot) / S(164) / L(24)
        "\xe7\xea\xe6\x19\x12\x08\x10\x09\xf9\x12\x10\x13\x05\x08\xe9\x1c\x09\x07\x19\x18\x05\x06\x10\x09\xa4\xbf\x5e\x1c\x87\xe0\x2c\x1d\xcb",
        // "freeifaddrs" / M(Xor2) / S(251) / L(11)
        "\x8d\x99\x8e\x8e\x82\x8d\x8a\x8f\x8f\x99\x98\xeb\x24\x26\x72\xea",
        // "" / M(None) / S(0) / L(0)
        "\xf0\x66\x3e\xc3\x4e\xd1\xfb\x26\x51\x1b\x78\x6e\x04\xb2\x2d\x9c\xf5\xbe\x57\x91\x6c\xe5\x0e\x9e\xa6\xb6\x16\xb1\xb6\x60\x38\xbd",
        // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor1) / S(181) / L(43)
        "\xf6\xf3\xe0\xe7\xf9\xf6\xc7\xd0\xd4\xc1\xd0\xe2\xdc\xc1\xdd\xf3\xdc\xd9\xd0\xe6\xcc\xc6\xc1\xd0\xd8\xe5\xd4\xc1\xdd\xe7\xd0\xd9\xd4\xc1\xdc\xc3\xd0\xe1\xda\xf7\xd4\xc6\xd0\xb5\x67\x8e\x5b\x27\x97\xe4\xe7\xf7",
        // "CMSDecoderUpdateMessage" / M(Xor2) / S(175) / L(23)
        "\xcc\xc2\xdc\xcb\xea\xec\xe0\xeb\xea\xfd\xda\xff\xeb\xee\xfb\xea\xc2\xea\xfc\xfc\xee\xe8\xea\x8f\x26\x0d\x36\xf8\x14\xff\xbb\x16",
        // "CFDataGetLength" / M(Xor2) / S(254) / L(15)
        "\xad\xa8\xaa\x8f\x9a\x8f\xa9\x8b\x9a\xa2\x8b\x80\x89\x9a\x86\xee",
        // "SecStaticCodeCreateWithPath" / M(Xor2) / S(116) / L(27)
        "\x03\x35\x33\x03\x24\x31\x24\x39\x33\x13\x3f\x34\x35\x13\x22\x35\x31\x24\x35\x07\x39\x24\x38\x00\x31\x24\x38\x50\x56\xba\xac\x02\x74\xdc\x55\x51",
        // "setjmp" / M(Xor3) / S(209) / L(6)
        "\x92\x84\x95\x8b\x8c\x91\xe1\x31\xb9\x1c\xff\xf9\x5b\x68\x4f\x2f",
        // "" / M(None) / S(0) / L(0)
        "\xb8\x8f\xf4\x97\x3f\xc8\xea\x33\xc0\xff\xdd\x29\xe1\x6d\xdb\x0b\x15\x60\xe9\x46\x54\x96\x37\x33\xae\xae\xcf\xb7\x92\x33\x3b\x1d",
        // "" / M(None) / S(0) / L(0)
        "\x5b\x78\x91\xda\xd1\xbf\xc0\xe9\xa9\xf7\xa7\x25\x91\x78\x66\x73\x08\x67\xe2\xff\xcd\x05\x81\x9b\x34\x7b\x06\x64\xf6\x2a\x72\xd7",
        // "SecAsn1Decode" / M(Xor2) / S(78) / L(13)
        "\x0d\x3b\x3d\x1f\x2d\x30\x6f\x1a\x3b\x3d\x31\x3a\x3b\x5e\x0f\xb4",
        // "longjmp" / M(Xor4) / S(57) / L(7)
        "\xfc\xff\xfe\xf7\xfa\xfd\xe0\x90\x42\xb0\xeb\xd2\x15\xa0\xe2\x00",
        // "freeifaddrs" / M(Xor3) / S(116) / L(11)
        "\xe2\xf6\xe1\xe1\xed\xe2\xe5\xe0\xe0\xf6\xf7\x84\x89\xe6\x2c\xec",
        // "" / M(None) / S(0) / L(0)
        "\x56\xe5\x81\xbb\xdb\x63\xa4\xa1\x58\x81\x63\x54\xc8\x32\xb1\x12\x7a\x53\xb0\x2e\x3c\x11\xab\x84\x22\xab\x58\x15\xe3\x5d\x44\x07",
        // "" / M(None) / S(0) / L(0)
        "\x9f\x25\xc2\x3c\xaf\x34\xc2\xf5\xed\x8f\x4e\x9f\xc9\x70\xef\xb0\x59\x5b\x0b\xe1\x46\x14\x92\x4e\x45\x5c\xf9\x9f\xb3\x6f\xdf\x62",
        // "CFBundleGetIdentifier" / M(Xor2) / S(172) / L(21)
        "\xf9\xfc\xf8\xcf\xd4\xde\xd6\xdf\xfd\xdf\xce\xf3\xde\xdf\xd4\xce\xd3\xdc\xd3\xdf\xc8\xba",
        // "CFArrayAppendValue" / M(Rot) / S(202) / L(18)
        "\x0d\x10\x0b\x3c\x3c\x2b\x43\x0b\x3a\x3a\x2f\x38\x2e\x20\x2b\x36\x3f\x2f\xca",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Rot) / S(76) / L(66)
        "\x7b\x9f\xc5\xbf\xc0\xb1\xb9\x7b\x98\xb5\xae\xbe\xad\xbe\xc5\x7b\x92\xbe\xad\xb9\xb1\xc3\xbb\xbe\xb7\xbf\x7b\x8f\xbb\xbe\xb1\x92\xbb\xc1\xba\xb0\xad\xc0\xb5\xbb\xba\x7a\xb2\xbe\xad\xb9\xb1\xc3\xbb\xbe\xb7\x7b\x8f\xbb\xbe\xb1\x92\xbb\xc1\xba\xb0\xad\xc0\xb5\xbb\xba\x4c",
        // "exit" / M(Xor3) / S(36) / L(4)
        "\x51\x4c\x5d\x40\x34\x25\x7d\x78\x5b\xde\xf5\x4d\x39\x26\xb7\xb9",
        // "_MASReceipt" / M(Xor4) / S(146) / L(11)
        "\x7f\x6d\x61\x73\x72\x45\x43\x45\x49\x50\x54\x20\x90\xf8\x13\xe7",
        // "CMSDecoderCopySignerStatus" / M(Xor1) / S(107) / L(26)
        "\x28\x26\x38\x2f\x0e\x08\x04\x0f\x0e\x19\x28\x04\x1b\x12\x38\x02\x0c\x05\x0e\x19\x38\x1f\x0a\x1f\x1e\x18\x6b\xb7\xa2\xca\x36\xaa\xc3\xfc\x2d",
        // "" / M(None) / S(0) / L(0)
        "\x94\xd4\x05\x29\x68\x40\x23\xc9\xf9\x55\x23\x5b\xca\x96\xf2\xd3\x65\xfc\x1c\x44\xaa\xd4\x27\x3c\x91\xed\x36\x85\xcc\x81\xd1\x24",
        // "CFBundleShortVersionString" / M(Xor1) / S(179) / L(26)
        "\xf0\xf5\xf1\xc6\xdd\xd7\xdf\xd6\xe0\xdb\xdc\xc1\xc7\xe5\xd6\xc1\xc0\xda\xdc\xdd\xe0\xc7\xc1\xda\xdd\xd4\xb3\x58\x72\x90\x36\xa1\x1f\x0b\xd3",
        // "IOObjectRelease" / M(Xor3) / S(49) / L(15)
        "\x08\x0e\x0e\x23\x2b\x24\x22\x35\x13\x24\x2d\x24\x20\x32\x24\x41",
        // "CC_SHA1_Init" / M(Xor3) / S(75) / L(12)
        "\x18\x18\x04\x08\x13\x1a\x6a\x04\x12\x35\x32\x2f\x5b\x43\x41\x5e",
        // "Contents/_MASReceipt" / M(Rot) / S(12) / L(20)
        "\x4f\x7b\x7a\x80\x71\x7a\x80\x7f\x3b\x6b\x59\x4d\x5f\x5e\x71\x6f\x71\x75\x7c\x80\x0c",
        // "CFDateFormatterSetFormat" / M(Rot) / S(250) / L(24)
        "\x3d\x40\x3e\x5b\x6e\x5f\x40\x69\x6c\x67\x5b\x6e\x6e\x5f\x6c\x4d\x5f\x6e\x40\x69\x6c\x67\x5b\x6e\xfa\x16\x2a\x03\x49\xa8\xc6\xc4\xc2",
        // "IOObjectRelease" / M(Xor4) / S(118) / L(15)
        "\x29\x2f\x2f\x02\x0a\x05\x03\x14\x32\x05\x0c\x05\x01\x13\x05\x60",
        // "CMSDecoderCopySignerStatus" / M(Xor1) / S(121) / L(26)
        "\x3a\x34\x2a\x3d\x1c\x1a\x16\x1d\x1c\x0b\x3a\x16\x09\x00\x2a\x10\x1e\x17\x1c\x0b\x2a\x0d\x18\x0d\x0c\x0a\x79\x75\xed\x23\xe0\x2d\xe6\x82\x78",
        // "SecCodeCheckValidity" / M(Rot) / S(155) / L(20)
        "\xee\x00\xfe\xde\x0a\xff\x00\xde\x03\x00\xfe\x06\xf1\xfc\x07\x04\xff\x04\x0f\x14\x9b",
        // "Contents" / M(Xor2) / S(231) / L(8)
        "\xb4\x98\x99\x83\x92\x99\x83\x84\xf7\x35\x8d\x39\x18\xdd\x69\x04",
        // "" / M(None) / S(0) / L(0)
        "\x96\xf9\x7b\x6e\xa6\x59\xbe\x86\xf5\x0e\xc4\x02\x6a\xbd\x26\x09\xca\x0b\x68\x2d\xa3\x5e\x90\x70\x3e\x0c\xad\xfa\x9a\xc9\x0b\x73",
        // "" / M(None) / S(0) / L(0)
        "\x5f\x14\x96\xc7\x2b\x34\xac\x5c\x31\x10\xdc\x7c\x31\xc9\xab\x21\xaf\x2a\xd7\xd1\xe6\x07\x18\x22\x99\x67\xd7\xde\x2d\x89\xd9\x98",
        // "" / M(None) / S(0) / L(0)
        "\xdc\xb3\x26\xee\x8c\x5d\x5d\xa9\x5c\x3d\x56\xd2\x77\x88\x57\x1b\x72\x46\x22\xbc\x9c\x82\x99\xc7\x37\xe2\xa1\x3d\xa8\x4f\xff\x88",
        // "" / M(None) / S(0) / L(0)
        "\xb4\x9e\x26\x5e\x51\x22\xc9\x93\xb8\x91\xaf\x2a\x6b\x96\x89\xd2\x2f\xf5\x3c\xef\xe0\x8a\x98\x54\xff\x87\xc7\x2d\x0b\x3a\xe0\xc8",
        // "dlsym" / M(Xor2) / S(29) / L(5)
        "\x69\x61\x7e\x74\x60\x0d\x27\xdb\x94\x1c\x94\xec\x7a\x4f\x00\x4d",
        // "" / M(None) / S(0) / L(0)
        "\x85\xc5\x22\x4d\x1d\xc1\x91\x9f\x17\x2c\x7f\xac\xa1\x0e\x2e\xe3\xe3\x19\x75\x7b\x43\xc5\xa8\xec\x18\x61\x3b\x04\x05\x07\x02\x18",
        // "anchor apple generic" / M(Xor1) / S(41) / L(20)
        "\x48\x47\x4a\x41\x46\x5b\x09\x48\x59\x59\x45\x4c\x09\x4e\x4c\x47\x4c\x5b\x40\x4a\x29",
        // "dlopen" / M(Rot) / S(161) / L(6)
        "\x05\x0d\x10\x11\x06\x0f\xa1\xa9\x64\x52\x97\x0b\x73\x98\x6f\xda",
        // "IORegistryEntryGetParentEntry" / M(Xor4) / S(84) / L(29)
        "\x31\x37\x2a\x1d\x1f\x11\x0b\x0c\x0a\x01\x3d\x16\x0c\x0a\x01\x3f\x1d\x0c\x28\x19\x0a\x1d\x16\x0c\x3d\x16\x0c\x0a\x01\x78\xe1\x52\x79\x3b\x59\xcb\x7e\xf1",
        // "" / M(None) / S(0) / L(0)
        "\x79\x82\xab\xbf\xf4\x7b\xa3\x4b\x12\x23\x7a\x64\x47\xd3\xac\x12\x6e\x66\xf1\x07\x34\xd8\xc5\x6d\x4b\xa0\xa1\x5e\xcc\x16\xfc\xcb",
        // "CMSDecoderCopyContent" / M(Xor4) / S(201) / L(21)
        "\x05\x0b\x15\x02\x23\x25\x29\x22\x23\x34\x05\x29\x36\x3f\x05\x29\x28\x32\x23\x28\x32\x46",
        // "CFDateFormatterSetFormat" / M(Xor1) / S(228) / L(24)
        "\xa7\xa2\xa0\x85\x90\x81\xa2\x8b\x96\x89\x85\x90\x90\x81\x96\xb7\x81\x90\xa2\x8b\x96\x89\x85\x90\xe4\x3a\x3d\x83\xa5\x30\x5e\x50\x6f",
        // "Contents" / M(Xor4) / S(48) / L(8)
        "\x43\x6f\x6e\x74\x65\x6e\x74\x73\x00\x95\x63\xf0\x95\xc9\x72\xe5",
        // "IOMasterPort" / M(Xor4) / S(121) / L(12)
        "\xd9\xdf\xdd\xf1\xe3\xe4\xf5\xe2\xc0\xff\xe2\xe4\x90\xf5\xed\x02",
        // "" / M(None) / S(0) / L(0)
        "\x1a\x5b\x32\x3d\xc7\x5b\x37\xd0\xaa\x0e\x8a\x3c\x90\xcf\x26\xab\x15\x9b\x62\xa7\x3a\xeb\x1c\xae\x67\x4f\x8c\xb7\xb3\x48\x14\x41",
        // "" / M(None) / S(0) / L(0)
        "\x78\x6b\xda\x0a\x42\xdc\xeb\xc3\x50\x56\xa4\x8d\x9d\xda\x50\x9d\x39\x52\xd1\x15\x62\xb4\xb7\xd9\xe3\xc6\x63\xbc\x18\x5a\xe4\xe7",
        // "IOIteratorNext" / M(Rot) / S(229) / L(14)
        "\x2e\x34\x2e\x59\x4a\x57\x46\x59\x54\x57\x33\x4a\x5d\x59\xe5\xcf",
        // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor2) / S(44) / L(48)
        "\x32\x4e\x64\x6e\x69\x78\x70\x32\x51\x74\x7f\x6f\x7c\x6f\x64\x32\x5b\x6f\x7c\x70\x78\x6a\x72\x6f\x76\x6e\x32\x54\x52\x56\x74\x69\x33\x7b\x6f\x7c\x70\x78\x6a\x72\x6f\x76\x32\x54\x52\x56\x74\x69\x1d",
        // "setjmp" / M(Xor2) / S(210) / L(6)
        "\xb1\xa7\xb6\xa8\xaf\xb2\xc2\x36\xb2\x54\x98\x1b\x74\xa3\xc6\xc2",
        // "getifaddrs" / M(Rot) / S(173) / L(10)
        "\x14\x12\x21\x16\x13\x0e\x11\x11\x1f\x20\xad\x90\x2b\xd8\x79\x03",
        // "strcmp" / M(Xor1) / S(137) / L(6)
        "\xfa\xfd\xfb\xea\xe4\xf9\x89\xf7\xbc\xeb\x39\x92\x83\xa5\x56\x67",
        // "SecCodeCheckValidity" / M(Xor3) / S(55) / L(20)
        "\x1f\x29\x2f\x0f\x23\x28\x29\x0f\x24\x29\x2f\x27\x1a\x2d\x20\x25\x28\x25\x38\x35\x4c",
        // "IOIteratorNext" / M(Xor2) / S(13) / L(14)
        "\x54\x52\x54\x69\x78\x6f\x7c\x69\x72\x6f\x53\x78\x65\x69\x1d\x99",
        // "IOMACAddress" / M(Xor2) / S(248) / L(12)
        "\xa1\xa7\xa5\xa9\xab\xa9\x8c\x8c\x9a\x8d\x9b\x9b\xe8\xfd\x19\xa4",
        // "" / M(None) / S(0) / L(0)
        "\xbd\x34\x97\x02\x32\x4c\x5a\x78\x61\x0f\xd5\x25\x89\x67\xf6\x8d\x6b\xc6\x53\xf7\x2f\xb9\x5c\x90\xad\xa5\x72\x3f\xaa\x9f\x68\xd8",
        // "" / M(None) / S(0) / L(0)
        "\xf4\x94\xb7\x78\x50\xe8\xa6\xab\xe6\x0a\xc1\x6b\x84\xfd\x7d\x53\x18\xbd\x4a\xd8\xb0\x45\x7f\xe5\x40\x03\x4a\xba\xfb\x72\xd2\xb6",
        // "dlsym" / M(Xor4) / S(73) / L(5)
        "\xf4\xfc\xe3\xe9\xfd\x90\x69\xf5\x8b\x1b\xbb\x34\xca\x1d\xdc\x1c",
        // "/usr/lib/libSystem.dylib" / M(Xor4) / S(128) / L(24)
        "\xaf\xf5\xf3\xf2\xaf\xec\xe9\xe2\xaf\xec\xe9\xe2\xd3\xf9\xf3\xf4\xe5\xed\xae\xe4\xf9\xec\xe9\xe2\x80\xe7\xc0\x24\x4b\x34\x4f\xdf\x4a",
        // "CC_SHA1_Update" / M(Xor3) / S(106) / L(14)
        "\x39\x39\x25\x29\x32\x3b\x4b\x25\x2f\x0a\x1e\x1b\x0e\x1f\x7a\x5f",
        // "CFURLCreateDataAndPropertiesFromResource" / M(Xor4) / S(96) / L(40)
        "\x23\x26\x35\x32\x2c\x23\x12\x05\x01\x14\x05\x24\x01\x14\x01\x21\x0e\x04\x30\x12\x0f\x10\x05\x12\x14\x09\x05\x13\x26\x12\x0f\x0d\x32\x05\x13\x0f\x15\x12\x03\x05\x60\x3b\x59\xc2\xf7\x93\x44\x65\xed",
        // "CMSDecoderUpdateMessage" / M(Xor4) / S(202) / L(23)
        "\x03\x0d\x13\x04\x25\x23\x2f\x24\x25\x32\x15\x30\x24\x21\x34\x25\x0d\x25\x33\x33\x21\x27\x25\x40\x8e\x58\xa7\xa0\x2c\xdf\x5c\xb6",
        // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor3) / S(91) / L(50)
        "\xa1\xdd\xf7\xfd\xfa\xeb\xe3\xa1\xc2\xe7\xec\xfc\xef\xfc\xf7\xa1\xc8\xfc\xef\xe3\xeb\xf9\xe1\xfc\xe5\xfd\xa1\xcf\xfe\xfe\xc5\xe7\xfa\xa0\xe8\xfc\xef\xe3\xeb\xf9\xe1\xfc\xe5\xa1\xcf\xfe\xfe\xc5\xe7\xfa\x8e",
        // "" / M(None) / S(0) / L(0)
        "\x28\xca\x63\x1d\xe2\xf8\x10\x18\xad\x96\xac\x56\x08\x17\x10\xc8\x65\x6f\xf4\xef\xa4\xf6\x06\x3d\x6b\xec\x14\x33\x05\xad\x9a\xce",
        // "CFBundleShortVersionString" / M(Xor2) / S(183) / L(26)
        "\xd7\xd2\xd6\xe1\xfa\xf0\xf8\xf1\xc7\xfc\xfb\xe6\xe0\xc2\xf1\xe6\xe7\xfd\xfb\xfa\xc7\xe0\xe6\xfd\xfa\xf3\x94\x83\x2d\x73\x14\xe7\x13\x25\x9b",
        // "CFRelease" / M(Xor3) / S(145) / L(9)
        "\xe2\xe7\xf3\xc4\xcd\xc4\xc0\xd2\xc4\xa1\x78\x06\x6f\x6d\x20\x0b",
        // "CFURLCreateCopyAppendingPathComponent" / M(Xor1) / S(163) / L(37)
        "\xe0\xe5\xf6\xf1\xef\xe0\xd1\xc6\xc2\xd7\xc6\xe0\xcc\xd3\xda\xe2\xd3\xd3\xc6\xcd\xc7\xca\xcd\xc4\xf3\xc2\xd7\xcb\xe0\xcc\xce\xd3\xcc\xcd\xc6\xcd\xd7\xa3",
        // "enumerateObjectsUsingBlock:" / M(Xor3) / S(78) / L(27)
        "\x17\x1c\x07\x1f\x17\x00\x13\x06\x17\x3d\x10\x18\x17\x11\x06\x01\x27\x01\x1b\x1c\x15\x30\x1e\x1d\x11\x19\x48\x72\x76\x4c\x0d\x71\x47\xae\x77\xd2",
        // "CFNumberCreate" / M(Xor1) / S(79) / L(14)
        "\x0c\x09\x01\x3a\x22\x2d\x2a\x3d\x0c\x3d\x2a\x2e\x3b\x2a\x4f\xc8",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor3) / S(211) / L(36)
        "\xbb\xbe\xba\x8d\x96\x9c\x94\x9d\xbf\x9d\x8c\xae\x99\x94\x8d\x9d\xbe\x97\x8a\xb1\x96\x9e\x97\xbc\x91\x9b\x8c\x91\x97\x96\x99\x8a\x81\xb3\x9d\x81\xf8",
        // "" / M(None) / S(0) / L(0)
        "\x5d\x2b\xbe\x2e\xf5\x65\x42\x50\x58\xdb\xe3\xc1\xa0\x89\xdf\x02\x97\x5e\xa5\xc8\x6c\x24\x1c\x5a\x6d\x37\x5e\xb4\x03\xab\xd5\x5d",
        // "IOMasterPort" / M(Xor1) / S(28) / L(12)
        "\x55\x53\x51\x7d\x6f\x68\x79\x6e\x4c\x73\x6e\x68\x1c\xe1\x83\xed",
        // "CFDateFormatterCreate" / M(Xor4) / S(207) / L(21)
        "\x89\x8c\x8e\xab\xbe\xaf\x8c\xa5\xb8\xa7\xab\xbe\xbe\xaf\xb8\x89\xb8\xaf\xab\xbe\xaf\xca",
        // "IOMACAddress" / M(Xor1) / S(80) / L(12)
        "\x19\x1f\x1d\x11\x13\x11\x34\x34\x22\x35\x23\x23\x50\x0a\xde\xf4",
        // "CFBundleIdentifier" / M(Xor2) / S(26) / L(18)
        "\x4a\x4f\x4b\x7c\x67\x6d\x65\x6c\x40\x6d\x6c\x67\x7d\x60\x6f\x60\x6c\x7b\x09",
        // "" / M(None) / S(0) / L(0)
        "\x3d\xd1\x72\x47\x76\x86\xe8\x62\xd7\x96\x4a\xdc\x8a\xe1\x21\x11\x7f\xdd\xd4\x51\xa9\xef\xf9\x00\xee\xed\xbc\xad\xef\xbb\x67\xf6",
        // "receipt" / M(Xor2) / S(107) / L(7)
        "\x09\x1e\x18\x1e\x12\x0b\x0f\x7b\x83\xb4\x79\x2c\x92\x41\x63\x6b",
        // "freeifaddrs" / M(Xor2) / S(254) / L(11)
        "\x88\x9c\x8b\x8b\x87\x88\x8f\x8a\x8a\x9c\x9d\xee\x2e\x25\xfa\x07",
        // "dlopen" / M(Xor4) / S(86) / L(6)
        "\x04\x0c\x0f\x10\x05\x0e\x60\x86\x3d\xf8\x11\x86\x3c\x42\x60\xdd",
        // "CFBundleCopyBundleURL" / M(Xor3) / S(229) / L(21)
        "\xb8\xbd\xb9\x8e\x95\x9f\x97\x9e\xb8\x94\x8b\x82\xb9\x8e\x95\x9f\x97\x9e\xae\xa9\xb7\xfb",
        // "CC_SHA1_Final" / M(Xor1) / S(249) / L(13)
        "\xba\xba\xa6\xaa\xb1\xb8\xc8\xa6\xbf\x90\x97\x98\x95\xf9\x18\x8c",
        // "CFDataGetBytePtr" / M(Xor1) / S(43) / L(16)
        "\x68\x6d\x6f\x4a\x5f\x4a\x6c\x4e\x5f\x69\x52\x5f\x4e\x7b\x5f\x59\x2b",
        // "CC_SHA1_Update" / M(Xor1) / S(177) / L(14)
        "\xf2\xf2\xee\xe2\xf9\xf0\x80\xee\xe4\xc1\xd5\xd0\xc5\xd4\xb1\xcd",
        // "CFBundleUnloadExecutable" / M(Xor2) / S(247) / L(24)
        "\x95\x90\x94\xa3\xb8\xb2\xba\xb3\x83\xb8\xba\xb9\xb7\xb2\x93\xae\xb3\xb5\xa3\xa2\xb7\xb4\xba\xb3\xd6\x1c\x9c\xac\x5f\x10\xa5\xcf\x2a",
        // "enumerateObjectsUsingBlock:" / M(Xor4) / S(56) / L(27)
        "\x85\x8e\x95\x8d\x85\x92\x81\x94\x85\xaf\x82\x8a\x85\x83\x94\x93\xb5\x93\x89\x8e\x87\xa2\x8c\x8f\x83\x8b\xda\xe0\xe4\xe8\x2f\x1f\x36\x4e\x82\xf3",
    };
    
    // Table for storing pointers
    static void *ED_pointers[327] = {
        NULL,
        NULL,
        NULL,
        NULL,
        ((void *) CFStringCreateWithBytes),
        NULL,
        NULL,
        NULL,
        ((void *) CFStringCreateWithBytes),
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        ((void *) dlsym),
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        ((void *) CFStringCreateWithBytes),
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        ((void *) CFStringCreateWithCString),
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        ((void *) CFStringCreateWithCString),
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        ((void *) dlopen),
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        ((void *) CFStringCreateWithCString),
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        ((void *) dlsym),
        NULL,
        NULL,
        ((void *) dlopen),
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        ((void *) dlsym),
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        ((void *) dlopen),
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
    };
    
    // Function as macros
#define ED_CC_SHA1_000B0005    ((_ED_CC_SHA1) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction2, 5, 225, 16))
#define ED_CC_SHA1_000B0088    ((_ED_CC_SHA1) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction3, 136, 101, 16))
#define ED_CC_SHA1_000B00C7    ((_ED_CC_SHA1) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction4, 199, 232, 16))
#define ED_CC_SHA1_008A0005    ((_ED_CC_SHA1) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction2, 5, 225, 16))
#define ED_CC_SHA1_008A0088    ((_ED_CC_SHA1) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction3, 136, 101, 16))
#define ED_CC_SHA1_008A00C7    ((_ED_CC_SHA1) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction4, 199, 232, 16))
#define ED_CC_SHA1_012C0005    ((_ED_CC_SHA1) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction2, 5, 225, 16))
#define ED_CC_SHA1_012C0088    ((_ED_CC_SHA1) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction3, 136, 101, 16))
#define ED_CC_SHA1_012C00C7    ((_ED_CC_SHA1) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction4, 199, 232, 16))
#define ED_CC_SHA1_Final_000B0085    ((_ED_CC_SHA1_Final) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction3, 133, 30, 16))
#define ED_CC_SHA1_Final_000B00D3    ((_ED_CC_SHA1_Final) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction5, 211, 19, 16))
#define ED_CC_SHA1_Final_000B0142    ((_ED_CC_SHA1_Final) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction5, 322, 249, 16))
#define ED_CC_SHA1_Final_008A0085    ((_ED_CC_SHA1_Final) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction3, 133, 30, 16))
#define ED_CC_SHA1_Final_008A00D3    ((_ED_CC_SHA1_Final) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction5, 211, 19, 16))
#define ED_CC_SHA1_Final_008A0142    ((_ED_CC_SHA1_Final) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction5, 322, 249, 16))
#define ED_CC_SHA1_Final_012C0085    ((_ED_CC_SHA1_Final) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction3, 133, 30, 16))
#define ED_CC_SHA1_Final_012C00D3    ((_ED_CC_SHA1_Final) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction5, 211, 19, 16))
#define ED_CC_SHA1_Final_012C0142    ((_ED_CC_SHA1_Final) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction5, 322, 249, 16))
#define ED_CC_SHA1_Init_000B000A    ((_ED_CC_SHA1_Init) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction6, 10, 147, 16))
#define ED_CC_SHA1_Init_000B0071    ((_ED_CC_SHA1_Init) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction3, 113, 41, 16))
#define ED_CC_SHA1_Init_000B010A    ((_ED_CC_SHA1_Init) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction7, 266, 75, 16))
#define ED_CC_SHA1_Init_008A000A    ((_ED_CC_SHA1_Init) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction6, 10, 147, 16))
#define ED_CC_SHA1_Init_008A0071    ((_ED_CC_SHA1_Init) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction3, 113, 41, 16))
#define ED_CC_SHA1_Init_008A010A    ((_ED_CC_SHA1_Init) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction7, 266, 75, 16))
#define ED_CC_SHA1_Init_012C000A    ((_ED_CC_SHA1_Init) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction6, 10, 147, 16))
#define ED_CC_SHA1_Init_012C0071    ((_ED_CC_SHA1_Init) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction3, 113, 41, 16))
#define ED_CC_SHA1_Init_012C010A    ((_ED_CC_SHA1_Init) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction7, 266, 75, 16))
#define ED_CC_SHA1_Update_000B0052    ((_ED_CC_SHA1_Update) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction8, 82, 147, 16))
#define ED_CC_SHA1_Update_000B012D    ((_ED_CC_SHA1_Update) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction7, 301, 106, 16))
#define ED_CC_SHA1_Update_000B0144    ((_ED_CC_SHA1_Update) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction9, 324, 177, 16))
#define ED_CC_SHA1_Update_008A0052    ((_ED_CC_SHA1_Update) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction8, 82, 147, 16))
#define ED_CC_SHA1_Update_008A012D    ((_ED_CC_SHA1_Update) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction7, 301, 106, 16))
#define ED_CC_SHA1_Update_008A0144    ((_ED_CC_SHA1_Update) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction9, 324, 177, 16))
#define ED_CC_SHA1_Update_012C0052    ((_ED_CC_SHA1_Update) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction8, 82, 147, 16))
#define ED_CC_SHA1_Update_012C012D    ((_ED_CC_SHA1_Update) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction7, 301, 106, 16))
#define ED_CC_SHA1_Update_012C0144    ((_ED_CC_SHA1_Update) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction9, 324, 177, 16))
#define ED_CFArrayAppendValue_00270010    ((_ED_CFArrayAppendValue) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction8, 16, 255, 19))
#define ED_CFArrayAppendValue_002700DD    ((_ED_CFArrayAppendValue) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction7, 221, 190, 19))
#define ED_CFArrayAppendValue_00270102    ((_ED_CFArrayAppendValue) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction1, 258, 202, 19))
#define ED_CFArrayAppendValue_00AC0010    ((_ED_CFArrayAppendValue) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction8, 16, 255, 19))
#define ED_CFArrayAppendValue_00AC00DD    ((_ED_CFArrayAppendValue) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction7, 221, 190, 19))
#define ED_CFArrayAppendValue_00AC0102    ((_ED_CFArrayAppendValue) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction1, 258, 202, 19))
#define ED_CFArrayAppendValue_01030010    ((_ED_CFArrayAppendValue) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction8, 16, 255, 19))
#define ED_CFArrayAppendValue_010300DD    ((_ED_CFArrayAppendValue) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction7, 221, 190, 19))
#define ED_CFArrayAppendValue_01030102    ((_ED_CFArrayAppendValue) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction1, 258, 202, 19))
#define ED_CFArrayCreateMutable_00270009    ((_ED_CFArrayCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction10, 9, 227, 21))
#define ED_CFArrayCreateMutable_002700BD    ((_ED_CFArrayCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction10, 189, 85, 21))
#define ED_CFArrayCreateMutable_002700EE    ((_ED_CFArrayCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction2, 238, 238, 21))
#define ED_CFArrayCreateMutable_00AC0009    ((_ED_CFArrayCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction10, 9, 227, 21))
#define ED_CFArrayCreateMutable_00AC00BD    ((_ED_CFArrayCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction10, 189, 85, 21))
#define ED_CFArrayCreateMutable_00AC00EE    ((_ED_CFArrayCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction2, 238, 238, 21))
#define ED_CFArrayCreateMutable_01030009    ((_ED_CFArrayCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction10, 9, 227, 21))
#define ED_CFArrayCreateMutable_010300BD    ((_ED_CFArrayCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction10, 189, 85, 21))
#define ED_CFArrayCreateMutable_010300EE    ((_ED_CFArrayCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction2, 238, 238, 21))
#define ED_CFBundleCopyBundleURL_0027000C    ((_ED_CFBundleCopyBundleURL) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction4, 12, 195, 22))
#define ED_CFBundleCopyBundleURL_0027008E    ((_ED_CFBundleCopyBundleURL) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction4, 142, 221, 22))
#define ED_CFBundleCopyBundleURL_00270141    ((_ED_CFBundleCopyBundleURL) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction4, 321, 229, 22))
#define ED_CFBundleCopyBundleURL_00AC000C    ((_ED_CFBundleCopyBundleURL) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction4, 12, 195, 22))
#define ED_CFBundleCopyBundleURL_00AC008E    ((_ED_CFBundleCopyBundleURL) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction4, 142, 221, 22))
#define ED_CFBundleCopyBundleURL_00AC0141    ((_ED_CFBundleCopyBundleURL) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction4, 321, 229, 22))
#define ED_CFBundleCopyBundleURL_0103000C    ((_ED_CFBundleCopyBundleURL) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction4, 12, 195, 22))
#define ED_CFBundleCopyBundleURL_0103008E    ((_ED_CFBundleCopyBundleURL) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction4, 142, 221, 22))
#define ED_CFBundleCopyBundleURL_01030141    ((_ED_CFBundleCopyBundleURL) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction4, 321, 229, 22))
#define ED_CFBundleGetIdentifier_0027006A    ((_ED_CFBundleGetIdentifier) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction7, 106, 26, 22))
#define ED_CFBundleGetIdentifier_002700E6    ((_ED_CFBundleGetIdentifier) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction4, 230, 1, 22))
#define ED_CFBundleGetIdentifier_00270101    ((_ED_CFBundleGetIdentifier) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction2, 257, 172, 22))
#define ED_CFBundleGetIdentifier_00AC006A    ((_ED_CFBundleGetIdentifier) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction7, 106, 26, 22))
#define ED_CFBundleGetIdentifier_00AC00E6    ((_ED_CFBundleGetIdentifier) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction4, 230, 1, 22))
#define ED_CFBundleGetIdentifier_00AC0101    ((_ED_CFBundleGetIdentifier) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction2, 257, 172, 22))
#define ED_CFBundleGetIdentifier_0103006A    ((_ED_CFBundleGetIdentifier) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction7, 106, 26, 22))
#define ED_CFBundleGetIdentifier_010300E6    ((_ED_CFBundleGetIdentifier) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction4, 230, 1, 22))
#define ED_CFBundleGetIdentifier_01030101    ((_ED_CFBundleGetIdentifier) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction2, 257, 172, 22))
#define ED_CFBundleGetMainBundle_0027002B    ((_ED_CFBundleGetMainBundle) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction9, 43, 239, 22))
#define ED_CFBundleGetMainBundle_00270067    ((_ED_CFBundleGetMainBundle) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction6, 103, 230, 22))
#define ED_CFBundleGetMainBundle_00270089    ((_ED_CFBundleGetMainBundle) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction7, 137, 133, 22))
#define ED_CFBundleGetMainBundle_00AC002B    ((_ED_CFBundleGetMainBundle) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction9, 43, 239, 22))
#define ED_CFBundleGetMainBundle_00AC0067    ((_ED_CFBundleGetMainBundle) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction6, 103, 230, 22))
#define ED_CFBundleGetMainBundle_00AC0089    ((_ED_CFBundleGetMainBundle) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction7, 137, 133, 22))
#define ED_CFBundleGetMainBundle_0103002B    ((_ED_CFBundleGetMainBundle) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction9, 43, 239, 22))
#define ED_CFBundleGetMainBundle_01030067    ((_ED_CFBundleGetMainBundle) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction6, 103, 230, 22))
#define ED_CFBundleGetMainBundle_01030089    ((_ED_CFBundleGetMainBundle) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction7, 137, 133, 22))
#define ED_CFBundleGetValueForInfoDictionaryKey_002700A6    ((_ED_CFBundleGetValueForInfoDictionaryKey) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction10, 166, 173, 37))
#define ED_CFBundleGetValueForInfoDictionaryKey_002700B6    ((_ED_CFBundleGetValueForInfoDictionaryKey) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction10, 182, 207, 37))
#define ED_CFBundleGetValueForInfoDictionaryKey_00270137    ((_ED_CFBundleGetValueForInfoDictionaryKey) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction7, 311, 211, 37))
#define ED_CFBundleGetValueForInfoDictionaryKey_00AC00A6    ((_ED_CFBundleGetValueForInfoDictionaryKey) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction10, 166, 173, 37))
#define ED_CFBundleGetValueForInfoDictionaryKey_00AC00B6    ((_ED_CFBundleGetValueForInfoDictionaryKey) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction10, 182, 207, 37))
#define ED_CFBundleGetValueForInfoDictionaryKey_00AC0137    ((_ED_CFBundleGetValueForInfoDictionaryKey) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction7, 311, 211, 37))
#define ED_CFBundleGetValueForInfoDictionaryKey_010300A6    ((_ED_CFBundleGetValueForInfoDictionaryKey) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction10, 166, 173, 37))
#define ED_CFBundleGetValueForInfoDictionaryKey_010300B6    ((_ED_CFBundleGetValueForInfoDictionaryKey) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction10, 182, 207, 37))
#define ED_CFBundleGetValueForInfoDictionaryKey_01030137    ((_ED_CFBundleGetValueForInfoDictionaryKey) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction7, 311, 211, 37))
#define ED_CFBundleUnloadExecutable_0027006B    ((_ED_CFBundleUnloadExecutable) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction1, 107, 201, 33))
#define ED_CFBundleUnloadExecutable_002700F2    ((_ED_CFBundleUnloadExecutable) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction3, 242, 164, 33))
#define ED_CFBundleUnloadExecutable_00270145    ((_ED_CFBundleUnloadExecutable) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction2, 325, 247, 33))
#define ED_CFBundleUnloadExecutable_00AC006B    ((_ED_CFBundleUnloadExecutable) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction1, 107, 201, 33))
#define ED_CFBundleUnloadExecutable_00AC00F2    ((_ED_CFBundleUnloadExecutable) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction3, 242, 164, 33))
#define ED_CFBundleUnloadExecutable_00AC0145    ((_ED_CFBundleUnloadExecutable) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction2, 325, 247, 33))
#define ED_CFBundleUnloadExecutable_0103006B    ((_ED_CFBundleUnloadExecutable) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction1, 107, 201, 33))
#define ED_CFBundleUnloadExecutable_010300F2    ((_ED_CFBundleUnloadExecutable) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction3, 242, 164, 33))
#define ED_CFBundleUnloadExecutable_01030145    ((_ED_CFBundleUnloadExecutable) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction2, 325, 247, 33))
#define ED_CFDataAppendBytes_00270021    ((_ED_CFDataAppendBytes) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction2, 33, 211, 18))
#define ED_CFDataAppendBytes_00270024    ((_ED_CFDataAppendBytes) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction4, 36, 90, 18))
#define ED_CFDataAppendBytes_00270057    ((_ED_CFDataAppendBytes) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction8, 87, 248, 18))
#define ED_CFDataAppendBytes_00AC0021    ((_ED_CFDataAppendBytes) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction2, 33, 211, 18))
#define ED_CFDataAppendBytes_00AC0024    ((_ED_CFDataAppendBytes) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction4, 36, 90, 18))
#define ED_CFDataAppendBytes_00AC0057    ((_ED_CFDataAppendBytes) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction8, 87, 248, 18))
#define ED_CFDataAppendBytes_01030021    ((_ED_CFDataAppendBytes) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction2, 33, 211, 18))
#define ED_CFDataAppendBytes_01030024    ((_ED_CFDataAppendBytes) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction4, 36, 90, 18))
#define ED_CFDataAppendBytes_01030057    ((_ED_CFDataAppendBytes) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction8, 87, 248, 18))
#define ED_CFDataCreate_0027006D    ((_ED_CFDataCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction2, 109, 138, 16))
#define ED_CFDataCreate_0027006E    ((_ED_CFDataCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction3, 110, 233, 16))
#define ED_CFDataCreate_002700DA    ((_ED_CFDataCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction8, 218, 196, 16))
#define ED_CFDataCreate_00AC006D    ((_ED_CFDataCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction2, 109, 138, 16))
#define ED_CFDataCreate_00AC006E    ((_ED_CFDataCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction3, 110, 233, 16))
#define ED_CFDataCreate_00AC00DA    ((_ED_CFDataCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction8, 218, 196, 16))
#define ED_CFDataCreate_0103006D    ((_ED_CFDataCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction2, 109, 138, 16))
#define ED_CFDataCreate_0103006E    ((_ED_CFDataCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction3, 110, 233, 16))
#define ED_CFDataCreate_010300DA    ((_ED_CFDataCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction8, 218, 196, 16))
#define ED_CFDataCreateMutable_00270017    ((_ED_CFDataCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction2, 23, 96, 20))
#define ED_CFDataCreateMutable_00270079    ((_ED_CFDataCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction7, 121, 127, 20))
#define ED_CFDataCreateMutable_002700ED    ((_ED_CFDataCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction2, 237, 141, 20))
#define ED_CFDataCreateMutable_00AC0017    ((_ED_CFDataCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction2, 23, 96, 20))
#define ED_CFDataCreateMutable_00AC0079    ((_ED_CFDataCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction7, 121, 127, 20))
#define ED_CFDataCreateMutable_00AC00ED    ((_ED_CFDataCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction2, 237, 141, 20))
#define ED_CFDataCreateMutable_01030017    ((_ED_CFDataCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction2, 23, 96, 20))
#define ED_CFDataCreateMutable_01030079    ((_ED_CFDataCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction7, 121, 127, 20))
#define ED_CFDataCreateMutable_010300ED    ((_ED_CFDataCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction2, 237, 141, 20))
#define ED_CFDataGetBytePtr_0027003A    ((_ED_CFDataGetBytePtr) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction3, 58, 201, 17))
#define ED_CFDataGetBytePtr_00270087    ((_ED_CFDataGetBytePtr) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction7, 135, 193, 17))
#define ED_CFDataGetBytePtr_00270143    ((_ED_CFDataGetBytePtr) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction5, 323, 43, 17))
#define ED_CFDataGetBytePtr_00AC003A    ((_ED_CFDataGetBytePtr) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction3, 58, 201, 17))
#define ED_CFDataGetBytePtr_00AC0087    ((_ED_CFDataGetBytePtr) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction7, 135, 193, 17))
#define ED_CFDataGetBytePtr_00AC0143    ((_ED_CFDataGetBytePtr) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction5, 323, 43, 17))
#define ED_CFDataGetBytePtr_0103003A    ((_ED_CFDataGetBytePtr) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction3, 58, 201, 17))
#define ED_CFDataGetBytePtr_01030087    ((_ED_CFDataGetBytePtr) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction7, 135, 193, 17))
#define ED_CFDataGetBytePtr_01030143    ((_ED_CFDataGetBytePtr) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction5, 323, 43, 17))
#define ED_CFDataGetLength_002700AE    ((_ED_CFDataGetLength) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction7, 174, 211, 16))
#define ED_CFDataGetLength_002700C0    ((_ED_CFDataGetLength) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction6, 192, 216, 16))
#define ED_CFDataGetLength_002700F7    ((_ED_CFDataGetLength) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction2, 247, 254, 16))
#define ED_CFDataGetLength_00AC00AE    ((_ED_CFDataGetLength) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction7, 174, 211, 16))
#define ED_CFDataGetLength_00AC00C0    ((_ED_CFDataGetLength) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction6, 192, 216, 16))
#define ED_CFDataGetLength_00AC00F7    ((_ED_CFDataGetLength) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction2, 247, 254, 16))
#define ED_CFDataGetLength_010300AE    ((_ED_CFDataGetLength) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction7, 174, 211, 16))
#define ED_CFDataGetLength_010300C0    ((_ED_CFDataGetLength) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction6, 192, 216, 16))
#define ED_CFDataGetLength_010300F7    ((_ED_CFDataGetLength) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction2, 247, 254, 16))
#define ED_CFDateFormatterCreate_0027005F    ((_ED_CFDateFormatterCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction5, 95, 175, 22))
#define ED_CFDateFormatterCreate_00270081    ((_ED_CFDateFormatterCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction7, 129, 234, 22))
#define ED_CFDateFormatterCreate_0027013A    ((_ED_CFDateFormatterCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction8, 314, 207, 22))
#define ED_CFDateFormatterCreate_00AC005F    ((_ED_CFDateFormatterCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction5, 95, 175, 22))
#define ED_CFDateFormatterCreate_00AC0081    ((_ED_CFDateFormatterCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction7, 129, 234, 22))
#define ED_CFDateFormatterCreate_00AC013A    ((_ED_CFDateFormatterCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction8, 314, 207, 22))
#define ED_CFDateFormatterCreate_0103005F    ((_ED_CFDateFormatterCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction5, 95, 175, 22))
#define ED_CFDateFormatterCreate_01030081    ((_ED_CFDateFormatterCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction7, 129, 234, 22))
#define ED_CFDateFormatterCreate_0103013A    ((_ED_CFDateFormatterCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction8, 314, 207, 22))
#define ED_CFDateFormatterCreateDateFromString_0027003E    ((_ED_CFDateFormatterCreateDateFromString) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction10, 62, 92, 36))
#define ED_CFDateFormatterCreateDateFromString_002700CE    ((_ED_CFDateFormatterCreateDateFromString) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction3, 206, 211, 36))
#define ED_CFDateFormatterCreateDateFromString_002700E9    ((_ED_CFDateFormatterCreateDateFromString) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction1, 233, 73, 36))
#define ED_CFDateFormatterCreateDateFromString_00AC003E    ((_ED_CFDateFormatterCreateDateFromString) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction10, 62, 92, 36))
#define ED_CFDateFormatterCreateDateFromString_00AC00CE    ((_ED_CFDateFormatterCreateDateFromString) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction3, 206, 211, 36))
#define ED_CFDateFormatterCreateDateFromString_00AC00E9    ((_ED_CFDateFormatterCreateDateFromString) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction1, 233, 73, 36))
#define ED_CFDateFormatterCreateDateFromString_0103003E    ((_ED_CFDateFormatterCreateDateFromString) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction10, 62, 92, 36))
#define ED_CFDateFormatterCreateDateFromString_010300CE    ((_ED_CFDateFormatterCreateDateFromString) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction3, 206, 211, 36))
#define ED_CFDateFormatterCreateDateFromString_010300E9    ((_ED_CFDateFormatterCreateDateFromString) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction1, 233, 73, 36))
#define ED_CFDateFormatterSetFormat_0027001A    ((_ED_CFDateFormatterSetFormat) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction9, 26, 231, 33))
#define ED_CFDateFormatterSetFormat_0027010C    ((_ED_CFDateFormatterSetFormat) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction3, 268, 250, 33))
#define ED_CFDateFormatterSetFormat_0027011C    ((_ED_CFDateFormatterSetFormat) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction9, 284, 228, 33))
#define ED_CFDateFormatterSetFormat_00AC001A    ((_ED_CFDateFormatterSetFormat) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction9, 26, 231, 33))
#define ED_CFDateFormatterSetFormat_00AC010C    ((_ED_CFDateFormatterSetFormat) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction3, 268, 250, 33))
#define ED_CFDateFormatterSetFormat_00AC011C    ((_ED_CFDateFormatterSetFormat) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction9, 284, 228, 33))
#define ED_CFDateFormatterSetFormat_0103001A    ((_ED_CFDateFormatterSetFormat) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction9, 26, 231, 33))
#define ED_CFDateFormatterSetFormat_0103010C    ((_ED_CFDateFormatterSetFormat) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction3, 268, 250, 33))
#define ED_CFDateFormatterSetFormat_0103011C    ((_ED_CFDateFormatterSetFormat) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction9, 284, 228, 33))
#define ED_CFDictionaryAddValue_00270037    ((_ED_CFDictionaryAddValue) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction5, 55, 220, 21))
#define ED_CFDictionaryAddValue_00270091    ((_ED_CFDictionaryAddValue) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction5, 145, 162, 21))
#define ED_CFDictionaryAddValue_002700B0    ((_ED_CFDictionaryAddValue) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction10, 176, 2, 21))
#define ED_CFDictionaryAddValue_00AC0037    ((_ED_CFDictionaryAddValue) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction5, 55, 220, 21))
#define ED_CFDictionaryAddValue_00AC0091    ((_ED_CFDictionaryAddValue) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction5, 145, 162, 21))
#define ED_CFDictionaryAddValue_00AC00B0    ((_ED_CFDictionaryAddValue) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction10, 176, 2, 21))
#define ED_CFDictionaryAddValue_01030037    ((_ED_CFDictionaryAddValue) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction5, 55, 220, 21))
#define ED_CFDictionaryAddValue_01030091    ((_ED_CFDictionaryAddValue) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction5, 145, 162, 21))
#define ED_CFDictionaryAddValue_010300B0    ((_ED_CFDictionaryAddValue) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction10, 176, 2, 21))
#define ED_CFDictionaryCreateMutable_00270006    ((_ED_CFDictionaryCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction2, 6, 194, 34))
#define ED_CFDictionaryCreateMutable_00270018    ((_ED_CFDictionaryCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction7, 24, 211, 34))
#define ED_CFDictionaryCreateMutable_00270039    ((_ED_CFDictionaryCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction8, 57, 247, 34))
#define ED_CFDictionaryCreateMutable_00AC0006    ((_ED_CFDictionaryCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction2, 6, 194, 34))
#define ED_CFDictionaryCreateMutable_00AC0018    ((_ED_CFDictionaryCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction7, 24, 211, 34))
#define ED_CFDictionaryCreateMutable_00AC0039    ((_ED_CFDictionaryCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction8, 57, 247, 34))
#define ED_CFDictionaryCreateMutable_01030006    ((_ED_CFDictionaryCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction2, 6, 194, 34))
#define ED_CFDictionaryCreateMutable_01030018    ((_ED_CFDictionaryCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction7, 24, 211, 34))
#define ED_CFDictionaryCreateMutable_01030039    ((_ED_CFDictionaryCreateMutable) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction8, 57, 247, 34))
#define ED_CFDictionaryGetValue_00270012    ((_ED_CFDictionaryGetValue) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction8, 18, 14, 21))
#define ED_CFDictionaryGetValue_0027003B    ((_ED_CFDictionaryGetValue) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction4, 59, 89, 21))
#define ED_CFDictionaryGetValue_0027009B    ((_ED_CFDictionaryGetValue) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction1, 155, 127, 21))
#define ED_CFDictionaryGetValue_00AC0012    ((_ED_CFDictionaryGetValue) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction8, 18, 14, 21))
#define ED_CFDictionaryGetValue_00AC003B    ((_ED_CFDictionaryGetValue) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction4, 59, 89, 21))
#define ED_CFDictionaryGetValue_00AC009B    ((_ED_CFDictionaryGetValue) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction1, 155, 127, 21))
#define ED_CFDictionaryGetValue_01030012    ((_ED_CFDictionaryGetValue) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction8, 18, 14, 21))
#define ED_CFDictionaryGetValue_0103003B    ((_ED_CFDictionaryGetValue) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction4, 59, 89, 21))
#define ED_CFDictionaryGetValue_0103009B    ((_ED_CFDictionaryGetValue) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction1, 155, 127, 21))
#define ED_CFEqual_0027001C    ((_ED_CFEqual) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction10, 28, 77, 16))
#define ED_CFEqual_00270095    ((_ED_CFEqual) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction7, 149, 13, 16))
#define ED_CFEqual_002700D6    ((_ED_CFEqual) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction1, 214, 146, 16))
#define ED_CFEqual_00AC001C    ((_ED_CFEqual) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction10, 28, 77, 16))
#define ED_CFEqual_00AC0095    ((_ED_CFEqual) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction7, 149, 13, 16))
#define ED_CFEqual_00AC00D6    ((_ED_CFEqual) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction1, 214, 146, 16))
#define ED_CFEqual_0103001C    ((_ED_CFEqual) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction10, 28, 77, 16))
#define ED_CFEqual_01030095    ((_ED_CFEqual) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction7, 149, 13, 16))
#define ED_CFEqual_010300D6    ((_ED_CFEqual) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction1, 214, 146, 16))
#define ED_CFNumberCreate_002700BA    ((_ED_CFNumberCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction10, 186, 102, 16))
#define ED_CFNumberCreate_002700E1    ((_ED_CFNumberCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction8, 225, 32, 16))
#define ED_CFNumberCreate_00270136    ((_ED_CFNumberCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction9, 310, 79, 16))
#define ED_CFNumberCreate_00AC00BA    ((_ED_CFNumberCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction10, 186, 102, 16))
#define ED_CFNumberCreate_00AC00E1    ((_ED_CFNumberCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction8, 225, 32, 16))
#define ED_CFNumberCreate_00AC0136    ((_ED_CFNumberCreate) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction9, 310, 79, 16))
#define ED_CFNumberCreate_010300BA    ((_ED_CFNumberCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction10, 186, 102, 16))
#define ED_CFNumberCreate_010300E1    ((_ED_CFNumberCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction8, 225, 32, 16))
#define ED_CFNumberCreate_01030136    ((_ED_CFNumberCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction9, 310, 79, 16))
#define ED_CFRelease_00270007    ((_ED_CFRelease) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction8, 7, 212, 16))
#define ED_CFRelease_002700B3    ((_ED_CFRelease) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction3, 179, 149, 16))
#define ED_CFRelease_00270133    ((_ED_CFRelease) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction7, 307, 145, 16))
#define ED_CFRelease_00AC0007    ((_ED_CFRelease) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction8, 7, 212, 16))
#define ED_CFRelease_00AC00B3    ((_ED_CFRelease) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction3, 179, 149, 16))
#define ED_CFRelease_00AC0133    ((_ED_CFRelease) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction7, 307, 145, 16))
#define ED_CFRelease_01030007    ((_ED_CFRelease) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction8, 7, 212, 16))
#define ED_CFRelease_010300B3    ((_ED_CFRelease) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction3, 179, 149, 16))
#define ED_CFRelease_01030133    ((_ED_CFRelease) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction7, 307, 145, 16))
#define ED_CFStringCompare_00270019    ((_ED_CFStringCompare) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction3, 25, 175, 16))
#define ED_CFStringCompare_00270054    ((_ED_CFStringCompare) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction2, 84, 203, 16))
#define ED_CFStringCompare_002700AA    ((_ED_CFStringCompare) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction1, 170, 90, 16))
#define ED_CFStringCompare_00AC0019    ((_ED_CFStringCompare) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction3, 25, 175, 16))
#define ED_CFStringCompare_00AC0054    ((_ED_CFStringCompare) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction2, 84, 203, 16))
#define ED_CFStringCompare_00AC00AA    ((_ED_CFStringCompare) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction1, 170, 90, 16))
#define ED_CFStringCompare_01030019    ((_ED_CFStringCompare) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction3, 25, 175, 16))
#define ED_CFStringCompare_01030054    ((_ED_CFStringCompare) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction2, 84, 203, 16))
#define ED_CFStringCompare_010300AA    ((_ED_CFStringCompare) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction1, 170, 90, 16))
#define ED_CFStringCreateWithBytes_00270004    ((_ED_CFStringCreateWithBytes) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction6, 4, 16, 32))
#define ED_CFStringCreateWithBytes_00270008    ((_ED_CFStringCreateWithBytes) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction6, 8, 229, 32))
#define ED_CFStringCreateWithBytes_00270030    ((_ED_CFStringCreateWithBytes) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction1, 48, 50, 32))
#define ED_CFStringCreateWithBytes_00AC0004    ((_ED_CFStringCreateWithBytes) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction6, 4, 16, 32))
#define ED_CFStringCreateWithBytes_00AC0008    ((_ED_CFStringCreateWithBytes) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction6, 8, 229, 32))
#define ED_CFStringCreateWithBytes_00AC0030    ((_ED_CFStringCreateWithBytes) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction1, 48, 50, 32))
#define ED_CFStringCreateWithBytes_01030004    ((_ED_CFStringCreateWithBytes) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction6, 4, 16, 32))
#define ED_CFStringCreateWithBytes_01030008    ((_ED_CFStringCreateWithBytes) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction6, 8, 229, 32))
#define ED_CFStringCreateWithBytes_01030030    ((_ED_CFStringCreateWithBytes) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction1, 48, 50, 32))
#define ED_CFStringCreateWithCString_00270060    ((_ED_CFStringCreateWithCString) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction8, 96, 139, 34))
#define ED_CFStringCreateWithCString_00270086    ((_ED_CFStringCreateWithCString) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction5, 134, 156, 34))
#define ED_CFStringCreateWithCString_002700B5    ((_ED_CFStringCreateWithCString) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction8, 181, 71, 34))
#define ED_CFStringCreateWithCString_00AC0060    ((_ED_CFStringCreateWithCString) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction8, 96, 139, 34))
#define ED_CFStringCreateWithCString_00AC0086    ((_ED_CFStringCreateWithCString) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction5, 134, 156, 34))
#define ED_CFStringCreateWithCString_00AC00B5    ((_ED_CFStringCreateWithCString) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction8, 181, 71, 34))
#define ED_CFStringCreateWithCString_01030060    ((_ED_CFStringCreateWithCString) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction8, 96, 139, 34))
#define ED_CFStringCreateWithCString_01030086    ((_ED_CFStringCreateWithCString) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction5, 134, 156, 34))
#define ED_CFStringCreateWithCString_010300B5    ((_ED_CFStringCreateWithCString) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction8, 181, 71, 34))
#define ED_CFURLCreateCopyAppendingPathComponent_0027005C    ((_ED_CFURLCreateCopyAppendingPathComponent) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction1, 92, 10, 38))
#define ED_CFURLCreateCopyAppendingPathComponent_002700D4    ((_ED_CFURLCreateCopyAppendingPathComponent) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction9, 212, 253, 38))
#define ED_CFURLCreateCopyAppendingPathComponent_00270134    ((_ED_CFURLCreateCopyAppendingPathComponent) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction9, 308, 163, 38))
#define ED_CFURLCreateCopyAppendingPathComponent_00AC005C    ((_ED_CFURLCreateCopyAppendingPathComponent) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction1, 92, 10, 38))
#define ED_CFURLCreateCopyAppendingPathComponent_00AC00D4    ((_ED_CFURLCreateCopyAppendingPathComponent) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction9, 212, 253, 38))
#define ED_CFURLCreateCopyAppendingPathComponent_00AC0134    ((_ED_CFURLCreateCopyAppendingPathComponent) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction9, 308, 163, 38))
#define ED_CFURLCreateCopyAppendingPathComponent_0103005C    ((_ED_CFURLCreateCopyAppendingPathComponent) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction1, 92, 10, 38))
#define ED_CFURLCreateCopyAppendingPathComponent_010300D4    ((_ED_CFURLCreateCopyAppendingPathComponent) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction9, 212, 253, 38))
#define ED_CFURLCreateCopyAppendingPathComponent_01030134    ((_ED_CFURLCreateCopyAppendingPathComponent) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction9, 308, 163, 38))
#define ED_CFURLCreateDataAndPropertiesFromResource_0027000F    ((_ED_CFURLCreateDataAndPropertiesFromResource) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction3, 15, 164, 49))
#define ED_CFURLCreateDataAndPropertiesFromResource_002700EB    ((_ED_CFURLCreateDataAndPropertiesFromResource) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction8, 235, 63, 49))
#define ED_CFURLCreateDataAndPropertiesFromResource_0027012E    ((_ED_CFURLCreateDataAndPropertiesFromResource) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction8, 302, 96, 49))
#define ED_CFURLCreateDataAndPropertiesFromResource_00AC000F    ((_ED_CFURLCreateDataAndPropertiesFromResource) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction3, 15, 164, 49))
#define ED_CFURLCreateDataAndPropertiesFromResource_00AC00EB    ((_ED_CFURLCreateDataAndPropertiesFromResource) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction8, 235, 63, 49))
#define ED_CFURLCreateDataAndPropertiesFromResource_00AC012E    ((_ED_CFURLCreateDataAndPropertiesFromResource) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction8, 302, 96, 49))
#define ED_CFURLCreateDataAndPropertiesFromResource_0103000F    ((_ED_CFURLCreateDataAndPropertiesFromResource) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction3, 15, 164, 49))
#define ED_CFURLCreateDataAndPropertiesFromResource_010300EB    ((_ED_CFURLCreateDataAndPropertiesFromResource) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction8, 235, 63, 49))
#define ED_CFURLCreateDataAndPropertiesFromResource_0103012E    ((_ED_CFURLCreateDataAndPropertiesFromResource) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction8, 302, 96, 49))
#define ED_CFURLCreateWithFileSystemPathRelativeToBase_00270020    ((_ED_CFURLCreateWithFileSystemPathRelativeToBase) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction3, 32, 223, 52))
#define ED_CFURLCreateWithFileSystemPathRelativeToBase_00270044    ((_ED_CFURLCreateWithFileSystemPathRelativeToBase) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction6, 68, 89, 52))
#define ED_CFURLCreateWithFileSystemPathRelativeToBase_002700F5    ((_ED_CFURLCreateWithFileSystemPathRelativeToBase) ED_LookupFunction1(ED_ObfuscationFunction8, 39, 213, 67, ED_ObfuscationFunction9, 245, 181, 52))
#define ED_CFURLCreateWithFileSystemPathRelativeToBase_00AC0020    ((_ED_CFURLCreateWithFileSystemPathRelativeToBase) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction3, 32, 223, 52))
#define ED_CFURLCreateWithFileSystemPathRelativeToBase_00AC0044    ((_ED_CFURLCreateWithFileSystemPathRelativeToBase) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction6, 68, 89, 52))
#define ED_CFURLCreateWithFileSystemPathRelativeToBase_00AC00F5    ((_ED_CFURLCreateWithFileSystemPathRelativeToBase) ED_LookupFunction1(ED_ObfuscationFunction8, 172, 231, 67, ED_ObfuscationFunction9, 245, 181, 52))
#define ED_CFURLCreateWithFileSystemPathRelativeToBase_01030020    ((_ED_CFURLCreateWithFileSystemPathRelativeToBase) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction3, 32, 223, 52))
#define ED_CFURLCreateWithFileSystemPathRelativeToBase_01030044    ((_ED_CFURLCreateWithFileSystemPathRelativeToBase) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction6, 68, 89, 52))
#define ED_CFURLCreateWithFileSystemPathRelativeToBase_010300F5    ((_ED_CFURLCreateWithFileSystemPathRelativeToBase) ED_LookupFunction1(ED_ObfuscationFunction1, 259, 76, 67, ED_ObfuscationFunction9, 245, 181, 52))
#define ED_CMSDecoderCopyContent_005B009A    ((_ED_CMSDecoderCopyContent) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction4, 154, 49, 22))
#define ED_CMSDecoderCopyContent_005B009F    ((_ED_CMSDecoderCopyContent) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction6, 159, 178, 22))
#define ED_CMSDecoderCopyContent_005B011B    ((_ED_CMSDecoderCopyContent) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction8, 283, 201, 22))
#define ED_CMSDecoderCopyContent_00A3009A    ((_ED_CMSDecoderCopyContent) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction4, 154, 49, 22))
#define ED_CMSDecoderCopyContent_00A3009F    ((_ED_CMSDecoderCopyContent) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction6, 159, 178, 22))
#define ED_CMSDecoderCopyContent_00A3011B    ((_ED_CMSDecoderCopyContent) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction8, 283, 201, 22))
#define ED_CMSDecoderCopyContent_00E7009A    ((_ED_CMSDecoderCopyContent) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction4, 154, 49, 22))
#define ED_CMSDecoderCopyContent_00E7009F    ((_ED_CMSDecoderCopyContent) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction6, 159, 178, 22))
#define ED_CMSDecoderCopyContent_00E7011B    ((_ED_CMSDecoderCopyContent) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction8, 283, 201, 22))
#define ED_CMSDecoderCopySignerStatus_005B0061    ((_ED_CMSDecoderCopySignerStatus) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction6, 97, 44, 35))
#define ED_CMSDecoderCopySignerStatus_005B0106    ((_ED_CMSDecoderCopySignerStatus) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction9, 262, 107, 35))
#define ED_CMSDecoderCopySignerStatus_005B010E    ((_ED_CMSDecoderCopySignerStatus) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction9, 270, 121, 35))
#define ED_CMSDecoderCopySignerStatus_00A30061    ((_ED_CMSDecoderCopySignerStatus) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction6, 97, 44, 35))
#define ED_CMSDecoderCopySignerStatus_00A30106    ((_ED_CMSDecoderCopySignerStatus) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction9, 262, 107, 35))
#define ED_CMSDecoderCopySignerStatus_00A3010E    ((_ED_CMSDecoderCopySignerStatus) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction9, 270, 121, 35))
#define ED_CMSDecoderCopySignerStatus_00E70061    ((_ED_CMSDecoderCopySignerStatus) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction6, 97, 44, 35))
#define ED_CMSDecoderCopySignerStatus_00E70106    ((_ED_CMSDecoderCopySignerStatus) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction9, 262, 107, 35))
#define ED_CMSDecoderCopySignerStatus_00E7010E    ((_ED_CMSDecoderCopySignerStatus) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction9, 270, 121, 35))
#define ED_CMSDecoderCreate_005B0075    ((_ED_CMSDecoderCreate) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction8, 117, 90, 17))
#define ED_CMSDecoderCreate_005B007D    ((_ED_CMSDecoderCreate) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction5, 125, 113, 17))
#define ED_CMSDecoderCreate_005B00DB    ((_ED_CMSDecoderCreate) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction8, 219, 120, 17))
#define ED_CMSDecoderCreate_00A30075    ((_ED_CMSDecoderCreate) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction8, 117, 90, 17))
#define ED_CMSDecoderCreate_00A3007D    ((_ED_CMSDecoderCreate) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction5, 125, 113, 17))
#define ED_CMSDecoderCreate_00A300DB    ((_ED_CMSDecoderCreate) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction8, 219, 120, 17))
#define ED_CMSDecoderCreate_00E70075    ((_ED_CMSDecoderCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction8, 117, 90, 17))
#define ED_CMSDecoderCreate_00E7007D    ((_ED_CMSDecoderCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction5, 125, 113, 17))
#define ED_CMSDecoderCreate_00E700DB    ((_ED_CMSDecoderCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction8, 219, 120, 17))
#define ED_CMSDecoderFinalizeMessage_005B0035    ((_ED_CMSDecoderFinalizeMessage) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction7, 53, 147, 34))
#define ED_CMSDecoderFinalizeMessage_005B0093    ((_ED_CMSDecoderFinalizeMessage) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction9, 147, 176, 34))
#define ED_CMSDecoderFinalizeMessage_005B00A8    ((_ED_CMSDecoderFinalizeMessage) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction1, 168, 173, 34))
#define ED_CMSDecoderFinalizeMessage_00A30035    ((_ED_CMSDecoderFinalizeMessage) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction7, 53, 147, 34))
#define ED_CMSDecoderFinalizeMessage_00A30093    ((_ED_CMSDecoderFinalizeMessage) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction9, 147, 176, 34))
#define ED_CMSDecoderFinalizeMessage_00A300A8    ((_ED_CMSDecoderFinalizeMessage) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction1, 168, 173, 34))
#define ED_CMSDecoderFinalizeMessage_00E70035    ((_ED_CMSDecoderFinalizeMessage) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction7, 53, 147, 34))
#define ED_CMSDecoderFinalizeMessage_00E70093    ((_ED_CMSDecoderFinalizeMessage) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction9, 147, 176, 34))
#define ED_CMSDecoderFinalizeMessage_00E700A8    ((_ED_CMSDecoderFinalizeMessage) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction1, 168, 173, 34))
#define ED_CMSDecoderGetNumSigners_005B0029    ((_ED_CMSDecoderGetNumSigners) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction6, 41, 83, 32))
#define ED_CMSDecoderGetNumSigners_005B002A    ((_ED_CMSDecoderGetNumSigners) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction8, 42, 224, 32))
#define ED_CMSDecoderGetNumSigners_005B00CF    ((_ED_CMSDecoderGetNumSigners) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction3, 207, 172, 32))
#define ED_CMSDecoderGetNumSigners_00A30029    ((_ED_CMSDecoderGetNumSigners) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction6, 41, 83, 32))
#define ED_CMSDecoderGetNumSigners_00A3002A    ((_ED_CMSDecoderGetNumSigners) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction8, 42, 224, 32))
#define ED_CMSDecoderGetNumSigners_00A300CF    ((_ED_CMSDecoderGetNumSigners) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction3, 207, 172, 32))
#define ED_CMSDecoderGetNumSigners_00E70029    ((_ED_CMSDecoderGetNumSigners) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction6, 41, 83, 32))
#define ED_CMSDecoderGetNumSigners_00E7002A    ((_ED_CMSDecoderGetNumSigners) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction8, 42, 224, 32))
#define ED_CMSDecoderGetNumSigners_00E700CF    ((_ED_CMSDecoderGetNumSigners) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction3, 207, 172, 32))
#define ED_CMSDecoderUpdateMessage_005B002D    ((_ED_CMSDecoderUpdateMessage) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction8, 45, 224, 32))
#define ED_CMSDecoderUpdateMessage_005B00F6    ((_ED_CMSDecoderUpdateMessage) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction10, 246, 175, 32))
#define ED_CMSDecoderUpdateMessage_005B012F    ((_ED_CMSDecoderUpdateMessage) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction6, 303, 202, 32))
#define ED_CMSDecoderUpdateMessage_00A3002D    ((_ED_CMSDecoderUpdateMessage) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction8, 45, 224, 32))
#define ED_CMSDecoderUpdateMessage_00A300F6    ((_ED_CMSDecoderUpdateMessage) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction10, 246, 175, 32))
#define ED_CMSDecoderUpdateMessage_00A3012F    ((_ED_CMSDecoderUpdateMessage) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction6, 303, 202, 32))
#define ED_CMSDecoderUpdateMessage_00E7002D    ((_ED_CMSDecoderUpdateMessage) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction8, 45, 224, 32))
#define ED_CMSDecoderUpdateMessage_00E700F6    ((_ED_CMSDecoderUpdateMessage) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction10, 246, 175, 32))
#define ED_CMSDecoderUpdateMessage_00E7012F    ((_ED_CMSDecoderUpdateMessage) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction6, 303, 202, 32))
#define ED_dlopen_000B0094    ((_ED_dlopen) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction3, 148, 114, 16))
#define ED_dlopen_000B0118    ((_ED_dlopen) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction1, 280, 161, 16))
#define ED_dlopen_000B0140    ((_ED_dlopen) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction8, 320, 86, 16))
#define ED_dlopen_008A0094    ((_ED_dlopen) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction3, 148, 114, 16))
#define ED_dlopen_008A0118    ((_ED_dlopen) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction1, 280, 161, 16))
#define ED_dlopen_008A0140    ((_ED_dlopen) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction8, 320, 86, 16))
#define ED_dlopen_012C0094    ((_ED_dlopen) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction3, 148, 114, 16))
#define ED_dlopen_012C0118    ((_ED_dlopen) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction1, 280, 161, 16))
#define ED_dlopen_012C0140    ((_ED_dlopen) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction8, 320, 86, 16))
#define ED_dlsym_000B0011    ((_ED_dlsym) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction4, 17, 191, 16))
#define ED_dlsym_000B0115    ((_ED_dlsym) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction10, 277, 29, 16))
#define ED_dlsym_000B012B    ((_ED_dlsym) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction8, 299, 73, 16))
#define ED_dlsym_008A0011    ((_ED_dlsym) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction4, 17, 191, 16))
#define ED_dlsym_008A0115    ((_ED_dlsym) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction10, 277, 29, 16))
#define ED_dlsym_008A012B    ((_ED_dlsym) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction8, 299, 73, 16))
#define ED_dlsym_012C0011    ((_ED_dlsym) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction4, 17, 191, 16))
#define ED_dlsym_012C0115    ((_ED_dlsym) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction10, 277, 29, 16))
#define ED_dlsym_012C012B    ((_ED_dlsym) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction8, 299, 73, 16))
#define ED_exit_000B00BF    ((_ED_exit) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction9, 191, 252, 16))
#define ED_exit_000B00F0    ((_ED_exit) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction1, 240, 220, 16))
#define ED_exit_000B0104    ((_ED_exit) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction4, 260, 36, 16))
#define ED_exit_008A00BF    ((_ED_exit) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction9, 191, 252, 16))
#define ED_exit_008A00F0    ((_ED_exit) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction1, 240, 220, 16))
#define ED_exit_008A0104    ((_ED_exit) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction4, 260, 36, 16))
#define ED_exit_012C00BF    ((_ED_exit) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction9, 191, 252, 16))
#define ED_exit_012C00F0    ((_ED_exit) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction1, 240, 220, 16))
#define ED_exit_012C0104    ((_ED_exit) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction4, 260, 36, 16))
#define ED_freeifaddrs_000B00F3    ((_ED_freeifaddrs) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction2, 243, 251, 16))
#define ED_freeifaddrs_000B00FE    ((_ED_freeifaddrs) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction7, 254, 116, 16))
#define ED_freeifaddrs_000B013F    ((_ED_freeifaddrs) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction2, 319, 254, 16))
#define ED_freeifaddrs_008A00F3    ((_ED_freeifaddrs) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction2, 243, 251, 16))
#define ED_freeifaddrs_008A00FE    ((_ED_freeifaddrs) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction7, 254, 116, 16))
#define ED_freeifaddrs_008A013F    ((_ED_freeifaddrs) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction2, 319, 254, 16))
#define ED_freeifaddrs_012C00F3    ((_ED_freeifaddrs) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction2, 243, 251, 16))
#define ED_freeifaddrs_012C00FE    ((_ED_freeifaddrs) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction7, 254, 116, 16))
#define ED_freeifaddrs_012C013F    ((_ED_freeifaddrs) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction2, 319, 254, 16))
#define ED_getifaddrs_000B004D    ((_ED_getifaddrs) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction1, 77, 190, 16))
#define ED_getifaddrs_000B008D    ((_ED_getifaddrs) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction7, 141, 65, 16))
#define ED_getifaddrs_000B0124    ((_ED_getifaddrs) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction3, 292, 173, 16))
#define ED_getifaddrs_008A004D    ((_ED_getifaddrs) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction1, 77, 190, 16))
#define ED_getifaddrs_008A008D    ((_ED_getifaddrs) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction7, 141, 65, 16))
#define ED_getifaddrs_008A0124    ((_ED_getifaddrs) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction3, 292, 173, 16))
#define ED_getifaddrs_012C004D    ((_ED_getifaddrs) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction1, 77, 190, 16))
#define ED_getifaddrs_012C008D    ((_ED_getifaddrs) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction7, 141, 65, 16))
#define ED_getifaddrs_012C0124    ((_ED_getifaddrs) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction3, 292, 173, 16))
#define ED_IOBSDNameMatching_00650053    ((_ED_IOBSDNameMatching) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction8, 83, 207, 18))
#define ED_IOBSDNameMatching_00650056    ((_ED_IOBSDNameMatching) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction1, 86, 76, 18))
#define ED_IOBSDNameMatching_00650058    ((_ED_IOBSDNameMatching) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction9, 88, 210, 18))
#define ED_IOBSDNameMatching_00B90053    ((_ED_IOBSDNameMatching) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction8, 83, 207, 18))
#define ED_IOBSDNameMatching_00B90056    ((_ED_IOBSDNameMatching) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction1, 86, 76, 18))
#define ED_IOBSDNameMatching_00B90058    ((_ED_IOBSDNameMatching) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction9, 88, 210, 18))
#define ED_IOBSDNameMatching_01220053    ((_ED_IOBSDNameMatching) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction8, 83, 207, 18))
#define ED_IOBSDNameMatching_01220056    ((_ED_IOBSDNameMatching) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction1, 86, 76, 18))
#define ED_IOBSDNameMatching_01220058    ((_ED_IOBSDNameMatching) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction9, 88, 210, 18))
#define ED_IOIteratorNext_006500E3    ((_ED_IOIteratorNext) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction8, 227, 225, 16))
#define ED_IOIteratorNext_00650121    ((_ED_IOIteratorNext) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction1, 289, 229, 16))
#define ED_IOIteratorNext_00650127    ((_ED_IOIteratorNext) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction2, 295, 13, 16))
#define ED_IOIteratorNext_00B900E3    ((_ED_IOIteratorNext) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction8, 227, 225, 16))
#define ED_IOIteratorNext_00B90121    ((_ED_IOIteratorNext) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction1, 289, 229, 16))
#define ED_IOIteratorNext_00B90127    ((_ED_IOIteratorNext) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction2, 295, 13, 16))
#define ED_IOIteratorNext_012200E3    ((_ED_IOIteratorNext) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction8, 227, 225, 16))
#define ED_IOIteratorNext_01220121    ((_ED_IOIteratorNext) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction1, 289, 229, 16))
#define ED_IOIteratorNext_01220127    ((_ED_IOIteratorNext) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction2, 295, 13, 16))
#define ED_IOMasterPort_00650003    ((_ED_IOMasterPort) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction3, 3, 152, 16))
#define ED_IOMasterPort_0065011E    ((_ED_IOMasterPort) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction6, 286, 121, 16))
#define ED_IOMasterPort_00650139    ((_ED_IOMasterPort) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction9, 313, 28, 16))
#define ED_IOMasterPort_00B90003    ((_ED_IOMasterPort) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction3, 3, 152, 16))
#define ED_IOMasterPort_00B9011E    ((_ED_IOMasterPort) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction6, 286, 121, 16))
#define ED_IOMasterPort_00B90139    ((_ED_IOMasterPort) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction9, 313, 28, 16))
#define ED_IOMasterPort_01220003    ((_ED_IOMasterPort) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction3, 3, 152, 16))
#define ED_IOMasterPort_0122011E    ((_ED_IOMasterPort) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction6, 286, 121, 16))
#define ED_IOMasterPort_01220139    ((_ED_IOMasterPort) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction9, 313, 28, 16))
#define ED_IOObjectRelease_00650025    ((_ED_IOObjectRelease) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction7, 37, 148, 16))
#define ED_IOObjectRelease_00650109    ((_ED_IOObjectRelease) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction4, 265, 49, 16))
#define ED_IOObjectRelease_0065010D    ((_ED_IOObjectRelease) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction6, 269, 118, 16))
#define ED_IOObjectRelease_00B90025    ((_ED_IOObjectRelease) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction7, 37, 148, 16))
#define ED_IOObjectRelease_00B90109    ((_ED_IOObjectRelease) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction4, 265, 49, 16))
#define ED_IOObjectRelease_00B9010D    ((_ED_IOObjectRelease) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction6, 269, 118, 16))
#define ED_IOObjectRelease_01220025    ((_ED_IOObjectRelease) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction7, 37, 148, 16))
#define ED_IOObjectRelease_01220109    ((_ED_IOObjectRelease) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction4, 265, 49, 16))
#define ED_IOObjectRelease_0122010D    ((_ED_IOObjectRelease) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction6, 269, 118, 16))
#define ED_IORegistryEntryCreateCFProperty_00650001    ((_ED_IORegistryEntryCreateCFProperty) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction4, 1, 235, 32))
#define ED_IORegistryEntryCreateCFProperty_0065005D    ((_ED_IORegistryEntryCreateCFProperty) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction10, 93, 131, 32))
#define ED_IORegistryEntryCreateCFProperty_00650082    ((_ED_IORegistryEntryCreateCFProperty) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction2, 130, 146, 32))
#define ED_IORegistryEntryCreateCFProperty_00B90001    ((_ED_IORegistryEntryCreateCFProperty) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction4, 1, 235, 32))
#define ED_IORegistryEntryCreateCFProperty_00B9005D    ((_ED_IORegistryEntryCreateCFProperty) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction10, 93, 131, 32))
#define ED_IORegistryEntryCreateCFProperty_00B90082    ((_ED_IORegistryEntryCreateCFProperty) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction2, 130, 146, 32))
#define ED_IORegistryEntryCreateCFProperty_01220001    ((_ED_IORegistryEntryCreateCFProperty) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction4, 1, 235, 32))
#define ED_IORegistryEntryCreateCFProperty_0122005D    ((_ED_IORegistryEntryCreateCFProperty) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction10, 93, 131, 32))
#define ED_IORegistryEntryCreateCFProperty_01220082    ((_ED_IORegistryEntryCreateCFProperty) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction2, 130, 146, 32))
#define ED_IORegistryEntryGetParentEntry_006500A2    ((_ED_IORegistryEntryGetParentEntry) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction9, 162, 170, 38))
#define ED_IORegistryEntryGetParentEntry_006500EC    ((_ED_IORegistryEntryGetParentEntry) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction3, 236, 132, 38))
#define ED_IORegistryEntryGetParentEntry_00650119    ((_ED_IORegistryEntryGetParentEntry) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction6, 281, 84, 38))
#define ED_IORegistryEntryGetParentEntry_00B900A2    ((_ED_IORegistryEntryGetParentEntry) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction9, 162, 170, 38))
#define ED_IORegistryEntryGetParentEntry_00B900EC    ((_ED_IORegistryEntryGetParentEntry) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction3, 236, 132, 38))
#define ED_IORegistryEntryGetParentEntry_00B90119    ((_ED_IORegistryEntryGetParentEntry) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction6, 281, 84, 38))
#define ED_IORegistryEntryGetParentEntry_012200A2    ((_ED_IORegistryEntryGetParentEntry) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction9, 162, 170, 38))
#define ED_IORegistryEntryGetParentEntry_012200EC    ((_ED_IORegistryEntryGetParentEntry) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction3, 236, 132, 38))
#define ED_IORegistryEntryGetParentEntry_01220119    ((_ED_IORegistryEntryGetParentEntry) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction6, 281, 84, 38))
#define ED_IOServiceGetMatchingServices_00650051    ((_ED_IOServiceGetMatchingServices) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction1, 81, 136, 37))
#define ED_IOServiceGetMatchingServices_00650077    ((_ED_IOServiceGetMatchingServices) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction1, 119, 14, 37))
#define ED_IOServiceGetMatchingServices_0065007E    ((_ED_IOServiceGetMatchingServices) ED_LookupFunction1(ED_ObfuscationFunction3, 101, 247, 49, ED_ObfuscationFunction5, 126, 245, 37))
#define ED_IOServiceGetMatchingServices_00B90051    ((_ED_IOServiceGetMatchingServices) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction1, 81, 136, 37))
#define ED_IOServiceGetMatchingServices_00B90077    ((_ED_IOServiceGetMatchingServices) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction1, 119, 14, 37))
#define ED_IOServiceGetMatchingServices_00B9007E    ((_ED_IOServiceGetMatchingServices) ED_LookupFunction1(ED_ObfuscationFunction4, 185, 184, 49, ED_ObfuscationFunction5, 126, 245, 37))
#define ED_IOServiceGetMatchingServices_01220051    ((_ED_IOServiceGetMatchingServices) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction1, 81, 136, 37))
#define ED_IOServiceGetMatchingServices_01220077    ((_ED_IOServiceGetMatchingServices) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction1, 119, 14, 37))
#define ED_IOServiceGetMatchingServices_0122007E    ((_ED_IOServiceGetMatchingServices) ED_LookupFunction1(ED_ObfuscationFunction10, 290, 44, 49, ED_ObfuscationFunction5, 126, 245, 37))
#define ED_longjmp_000B0098    ((_ED_longjmp) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction1, 152, 206, 16))
#define ED_longjmp_000B00C8    ((_ED_longjmp) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction1, 200, 115, 16))
#define ED_longjmp_000B00FD    ((_ED_longjmp) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction6, 253, 57, 16))
#define ED_longjmp_008A0098    ((_ED_longjmp) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction1, 152, 206, 16))
#define ED_longjmp_008A00C8    ((_ED_longjmp) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction1, 200, 115, 16))
#define ED_longjmp_008A00FD    ((_ED_longjmp) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction6, 253, 57, 16))
#define ED_longjmp_012C0098    ((_ED_longjmp) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction1, 152, 206, 16))
#define ED_longjmp_012C00C8    ((_ED_longjmp) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction1, 200, 115, 16))
#define ED_longjmp_012C00FD    ((_ED_longjmp) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction6, 253, 57, 16))
#define ED_NSApplicationMain_00480034    ((_ED_NSApplicationMain) ED_LookupFunction1(ED_ObfuscationFunction1, 72, 174, 51, ED_ObfuscationFunction9, 52, 168, 18))
#define ED_NSApplicationMain_004800A5    ((_ED_NSApplicationMain) ED_LookupFunction1(ED_ObfuscationFunction1, 72, 174, 51, ED_ObfuscationFunction3, 165, 121, 18))
#define ED_NSApplicationMain_004800C1    ((_ED_NSApplicationMain) ED_LookupFunction1(ED_ObfuscationFunction1, 72, 174, 51, ED_ObfuscationFunction5, 193, 68, 18))
#define ED_NSApplicationMain_00D80034    ((_ED_NSApplicationMain) ED_LookupFunction1(ED_ObfuscationFunction9, 216, 91, 51, ED_ObfuscationFunction9, 52, 168, 18))
#define ED_NSApplicationMain_00D800A5    ((_ED_NSApplicationMain) ED_LookupFunction1(ED_ObfuscationFunction9, 216, 91, 51, ED_ObfuscationFunction3, 165, 121, 18))
#define ED_NSApplicationMain_00D800C1    ((_ED_NSApplicationMain) ED_LookupFunction1(ED_ObfuscationFunction9, 216, 91, 51, ED_ObfuscationFunction5, 193, 68, 18))
#define ED_NSApplicationMain_01300034    ((_ED_NSApplicationMain) ED_LookupFunction1(ED_ObfuscationFunction7, 304, 91, 51, ED_ObfuscationFunction9, 52, 168, 18))
#define ED_NSApplicationMain_013000A5    ((_ED_NSApplicationMain) ED_LookupFunction1(ED_ObfuscationFunction7, 304, 91, 51, ED_ObfuscationFunction3, 165, 121, 18))
#define ED_NSApplicationMain_013000C1    ((_ED_NSApplicationMain) ED_LookupFunction1(ED_ObfuscationFunction7, 304, 91, 51, ED_ObfuscationFunction5, 193, 68, 18))
#define ED_SecAsn1CoderCreate_005B0049    ((_ED_SecAsn1CoderCreate) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction5, 73, 249, 19))
#define ED_SecAsn1CoderCreate_005B009D    ((_ED_SecAsn1CoderCreate) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction4, 157, 31, 19))
#define ED_SecAsn1CoderCreate_005B00B1    ((_ED_SecAsn1CoderCreate) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction5, 177, 200, 19))
#define ED_SecAsn1CoderCreate_00A30049    ((_ED_SecAsn1CoderCreate) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction5, 73, 249, 19))
#define ED_SecAsn1CoderCreate_00A3009D    ((_ED_SecAsn1CoderCreate) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction4, 157, 31, 19))
#define ED_SecAsn1CoderCreate_00A300B1    ((_ED_SecAsn1CoderCreate) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction5, 177, 200, 19))
#define ED_SecAsn1CoderCreate_00E70049    ((_ED_SecAsn1CoderCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction5, 73, 249, 19))
#define ED_SecAsn1CoderCreate_00E7009D    ((_ED_SecAsn1CoderCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction4, 157, 31, 19))
#define ED_SecAsn1CoderCreate_00E700B1    ((_ED_SecAsn1CoderCreate) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction5, 177, 200, 19))
#define ED_SecAsn1CoderRelease_005B0063    ((_ED_SecAsn1CoderRelease) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction9, 99, 212, 20))
#define ED_SecAsn1CoderRelease_005B00D0    ((_ED_SecAsn1CoderRelease) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction3, 208, 183, 20))
#define ED_SecAsn1CoderRelease_005B00DF    ((_ED_SecAsn1CoderRelease) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction9, 223, 162, 20))
#define ED_SecAsn1CoderRelease_00A30063    ((_ED_SecAsn1CoderRelease) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction9, 99, 212, 20))
#define ED_SecAsn1CoderRelease_00A300D0    ((_ED_SecAsn1CoderRelease) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction3, 208, 183, 20))
#define ED_SecAsn1CoderRelease_00A300DF    ((_ED_SecAsn1CoderRelease) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction9, 223, 162, 20))
#define ED_SecAsn1CoderRelease_00E70063    ((_ED_SecAsn1CoderRelease) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction9, 99, 212, 20))
#define ED_SecAsn1CoderRelease_00E700D0    ((_ED_SecAsn1CoderRelease) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction3, 208, 183, 20))
#define ED_SecAsn1CoderRelease_00E700DF    ((_ED_SecAsn1CoderRelease) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction9, 223, 162, 20))
#define ED_SecAsn1Decode_005B003F    ((_ED_SecAsn1Decode) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction4, 63, 249, 16))
#define ED_SecAsn1Decode_005B00B8    ((_ED_SecAsn1Decode) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction2, 184, 130, 16))
#define ED_SecAsn1Decode_005B00FC    ((_ED_SecAsn1Decode) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction10, 252, 78, 16))
#define ED_SecAsn1Decode_00A3003F    ((_ED_SecAsn1Decode) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction4, 63, 249, 16))
#define ED_SecAsn1Decode_00A300B8    ((_ED_SecAsn1Decode) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction2, 184, 130, 16))
#define ED_SecAsn1Decode_00A300FC    ((_ED_SecAsn1Decode) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction10, 252, 78, 16))
#define ED_SecAsn1Decode_00E7003F    ((_ED_SecAsn1Decode) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction4, 63, 249, 16))
#define ED_SecAsn1Decode_00E700B8    ((_ED_SecAsn1Decode) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction2, 184, 130, 16))
#define ED_SecAsn1Decode_00E700FC    ((_ED_SecAsn1Decode) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction10, 252, 78, 16))
#define ED_SecCodeCheckValidity_005B00C9    ((_ED_SecCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction4, 201, 46, 21))
#define ED_SecCodeCheckValidity_005B010F    ((_ED_SecCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction3, 271, 155, 21))
#define ED_SecCodeCheckValidity_005B0126    ((_ED_SecCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction7, 294, 55, 21))
#define ED_SecCodeCheckValidity_00A300C9    ((_ED_SecCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction4, 201, 46, 21))
#define ED_SecCodeCheckValidity_00A3010F    ((_ED_SecCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction3, 271, 155, 21))
#define ED_SecCodeCheckValidity_00A30126    ((_ED_SecCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction7, 294, 55, 21))
#define ED_SecCodeCheckValidity_00E700C9    ((_ED_SecCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction4, 201, 46, 21))
#define ED_SecCodeCheckValidity_00E7010F    ((_ED_SecCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction3, 271, 155, 21))
#define ED_SecCodeCheckValidity_00E70126    ((_ED_SecCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction7, 294, 55, 21))
#define ED_SecCodeCheckValidityWithErrors_005B003D    ((_ED_SecCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction4, 61, 179, 39))
#define ED_SecCodeCheckValidityWithErrors_005B004E    ((_ED_SecCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction4, 78, 203, 39))
#define ED_SecCodeCheckValidityWithErrors_005B00E2    ((_ED_SecCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction2, 226, 205, 39))
#define ED_SecCodeCheckValidityWithErrors_00A3003D    ((_ED_SecCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction4, 61, 179, 39))
#define ED_SecCodeCheckValidityWithErrors_00A3004E    ((_ED_SecCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction4, 78, 203, 39))
#define ED_SecCodeCheckValidityWithErrors_00A300E2    ((_ED_SecCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction2, 226, 205, 39))
#define ED_SecCodeCheckValidityWithErrors_00E7003D    ((_ED_SecCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction4, 61, 179, 39))
#define ED_SecCodeCheckValidityWithErrors_00E7004E    ((_ED_SecCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction4, 78, 203, 39))
#define ED_SecCodeCheckValidityWithErrors_00E700E2    ((_ED_SecCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction2, 226, 205, 39))
#define ED_SecCodeCopySelf_005B007A    ((_ED_SecCodeCopySelf) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction8, 122, 184, 16))
#define ED_SecCodeCopySelf_005B008B    ((_ED_SecCodeCopySelf) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction1, 139, 27, 16))
#define ED_SecCodeCopySelf_005B00B4    ((_ED_SecCodeCopySelf) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction8, 180, 241, 16))
#define ED_SecCodeCopySelf_00A3007A    ((_ED_SecCodeCopySelf) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction8, 122, 184, 16))
#define ED_SecCodeCopySelf_00A3008B    ((_ED_SecCodeCopySelf) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction1, 139, 27, 16))
#define ED_SecCodeCopySelf_00A300B4    ((_ED_SecCodeCopySelf) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction8, 180, 241, 16))
#define ED_SecCodeCopySelf_00E7007A    ((_ED_SecCodeCopySelf) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction8, 122, 184, 16))
#define ED_SecCodeCopySelf_00E7008B    ((_ED_SecCodeCopySelf) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction1, 139, 27, 16))
#define ED_SecCodeCopySelf_00E700B4    ((_ED_SecCodeCopySelf) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction8, 180, 241, 16))
#define ED_SecPolicyCreateBasicX509_005B004C    ((_ED_SecPolicyCreateBasicX509) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction4, 76, 30, 33))
#define ED_SecPolicyCreateBasicX509_005B0074    ((_ED_SecPolicyCreateBasicX509) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction6, 116, 230, 33))
#define ED_SecPolicyCreateBasicX509_005B008C    ((_ED_SecPolicyCreateBasicX509) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction2, 140, 45, 33))
#define ED_SecPolicyCreateBasicX509_00A3004C    ((_ED_SecPolicyCreateBasicX509) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction4, 76, 30, 33))
#define ED_SecPolicyCreateBasicX509_00A30074    ((_ED_SecPolicyCreateBasicX509) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction6, 116, 230, 33))
#define ED_SecPolicyCreateBasicX509_00A3008C    ((_ED_SecPolicyCreateBasicX509) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction2, 140, 45, 33))
#define ED_SecPolicyCreateBasicX509_00E7004C    ((_ED_SecPolicyCreateBasicX509) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction4, 76, 30, 33))
#define ED_SecPolicyCreateBasicX509_00E70074    ((_ED_SecPolicyCreateBasicX509) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction6, 116, 230, 33))
#define ED_SecPolicyCreateBasicX509_00E7008C    ((_ED_SecPolicyCreateBasicX509) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction2, 140, 45, 33))
#define ED_SecStaticCodeCheckValidity_005B004B    ((_ED_SecStaticCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction8, 75, 56, 35))
#define ED_SecStaticCodeCheckValidity_005B00C5    ((_ED_SecStaticCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction4, 197, 82, 35))
#define ED_SecStaticCodeCheckValidity_005B00E0    ((_ED_SecStaticCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction9, 224, 118, 35))
#define ED_SecStaticCodeCheckValidity_00A3004B    ((_ED_SecStaticCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction8, 75, 56, 35))
#define ED_SecStaticCodeCheckValidity_00A300C5    ((_ED_SecStaticCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction4, 197, 82, 35))
#define ED_SecStaticCodeCheckValidity_00A300E0    ((_ED_SecStaticCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction9, 224, 118, 35))
#define ED_SecStaticCodeCheckValidity_00E7004B    ((_ED_SecStaticCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction8, 75, 56, 35))
#define ED_SecStaticCodeCheckValidity_00E700C5    ((_ED_SecStaticCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction4, 197, 82, 35))
#define ED_SecStaticCodeCheckValidity_00E700E0    ((_ED_SecStaticCodeCheckValidity) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction9, 224, 118, 35))
#define ED_SecStaticCodeCheckValidityWithErrors_005B0015    ((_ED_SecStaticCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction7, 21, 174, 37))
#define ED_SecStaticCodeCheckValidityWithErrors_005B0040    ((_ED_SecStaticCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction1, 64, 165, 37))
#define ED_SecStaticCodeCheckValidityWithErrors_005B0050    ((_ED_SecStaticCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction10, 80, 13, 37))
#define ED_SecStaticCodeCheckValidityWithErrors_00A30015    ((_ED_SecStaticCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction7, 21, 174, 37))
#define ED_SecStaticCodeCheckValidityWithErrors_00A30040    ((_ED_SecStaticCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction1, 64, 165, 37))
#define ED_SecStaticCodeCheckValidityWithErrors_00A30050    ((_ED_SecStaticCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction10, 80, 13, 37))
#define ED_SecStaticCodeCheckValidityWithErrors_00E70015    ((_ED_SecStaticCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction7, 21, 174, 37))
#define ED_SecStaticCodeCheckValidityWithErrors_00E70040    ((_ED_SecStaticCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction1, 64, 165, 37))
#define ED_SecStaticCodeCheckValidityWithErrors_00E70050    ((_ED_SecStaticCodeCheckValidityWithErrors) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction10, 80, 13, 37))
#define ED_SecStaticCodeCreateWithPath_005B009E    ((_ED_SecStaticCodeCreateWithPath) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction6, 158, 143, 36))
#define ED_SecStaticCodeCreateWithPath_005B00DE    ((_ED_SecStaticCodeCreateWithPath) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction10, 222, 107, 36))
#define ED_SecStaticCodeCreateWithPath_005B00F8    ((_ED_SecStaticCodeCreateWithPath) ED_LookupFunction1(ED_ObfuscationFunction3, 91, 201, 55, ED_ObfuscationFunction2, 248, 116, 36))
#define ED_SecStaticCodeCreateWithPath_00A3009E    ((_ED_SecStaticCodeCreateWithPath) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction6, 158, 143, 36))
#define ED_SecStaticCodeCreateWithPath_00A300DE    ((_ED_SecStaticCodeCreateWithPath) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction10, 222, 107, 36))
#define ED_SecStaticCodeCreateWithPath_00A300F8    ((_ED_SecStaticCodeCreateWithPath) ED_LookupFunction1(ED_ObfuscationFunction9, 163, 21, 55, ED_ObfuscationFunction2, 248, 116, 36))
#define ED_SecStaticCodeCreateWithPath_00E7009E    ((_ED_SecStaticCodeCreateWithPath) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction6, 158, 143, 36))
#define ED_SecStaticCodeCreateWithPath_00E700DE    ((_ED_SecStaticCodeCreateWithPath) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction10, 222, 107, 36))
#define ED_SecStaticCodeCreateWithPath_00E700F8    ((_ED_SecStaticCodeCreateWithPath) ED_LookupFunction1(ED_ObfuscationFunction1, 231, 234, 55, ED_ObfuscationFunction2, 248, 116, 36))
#define ED_setjmp_000B00D5    ((_ED_setjmp) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction9, 213, 228, 16))
#define ED_setjmp_000B00F9    ((_ED_setjmp) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction4, 249, 209, 16))
#define ED_setjmp_000B0123    ((_ED_setjmp) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction2, 291, 210, 16))
#define ED_setjmp_008A00D5    ((_ED_setjmp) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction9, 213, 228, 16))
#define ED_setjmp_008A00F9    ((_ED_setjmp) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction4, 249, 209, 16))
#define ED_setjmp_008A0123    ((_ED_setjmp) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction2, 291, 210, 16))
#define ED_setjmp_012C00D5    ((_ED_setjmp) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction9, 213, 228, 16))
#define ED_setjmp_012C00F9    ((_ED_setjmp) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction4, 249, 209, 16))
#define ED_setjmp_012C0123    ((_ED_setjmp) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction2, 291, 210, 16))
#define ED_strcmp_000B005A    ((_ED_strcmp) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction1, 90, 222, 16))
#define ED_strcmp_000B00D7    ((_ED_strcmp) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction3, 215, 18, 16))
#define ED_strcmp_000B0125    ((_ED_strcmp) ED_LookupFunction1(ED_ObfuscationFunction1, 11, 238, 33, ED_ObfuscationFunction9, 293, 137, 16))
#define ED_strcmp_008A005A    ((_ED_strcmp) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction1, 90, 222, 16))
#define ED_strcmp_008A00D7    ((_ED_strcmp) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction3, 215, 18, 16))
#define ED_strcmp_008A0125    ((_ED_strcmp) ED_LookupFunction1(ED_ObfuscationFunction5, 138, 18, 33, ED_ObfuscationFunction9, 293, 137, 16))
#define ED_strcmp_012C005A    ((_ED_strcmp) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction1, 90, 222, 16))
#define ED_strcmp_012C00D7    ((_ED_strcmp) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction3, 215, 18, 16))
#define ED_strcmp_012C0125    ((_ED_strcmp) ED_LookupFunction1(ED_ObfuscationFunction6, 300, 128, 33, ED_ObfuscationFunction9, 293, 137, 16))
    
    
    // CodeBlock LookupFunction
    inline static void *ED_LookupFunction1(ED_decrypt func1, int index1, int val1, int len1, ED_decrypt func2, int index2, int val2, int len2) {
        char tmp[80];
        // Load the library if needed
        if (ED_pointers[index1] == NULL) {
            func1(ED_strings[index1], tmp, val1, len1);
            ED_pointers[index1] = ((_ED_dlopen) ED_pointers[280])(tmp, RTLD_NOW);
        }
        // Locate the function if needed
        if (ED_pointers[index2] == NULL) {
            func2(ED_strings[index2], tmp, val2, len2);
            ED_pointers[index2] = ((_ED_dlsym) ED_pointers[17])(ED_pointers[index1], tmp);
        }
        return ED_pointers[index2];
    }
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void ED_ObfuscationFunction1(const char *p1, char *p2, int p3, int p4) {
        int i1 = 0;
        while(i1 < p4) { p2[i1] = (char) (p1[i1] - p3); i1++; }
    }
    
    inline static CFStringRef ED_ObfuscationFunction1CF(const char *p1, int p3, int p4) {
        char tmp1[80];
        char *tmp2 = tmp1;
        ED_ObfuscationFunction1(p1, tmp1, p3, p4);
        while(*tmp2) { tmp2++; }
        CFStringRef str1 = ((_ED_CFStringCreateWithBytes) ED_pointers[8])(kCFAllocatorDefault, (const UInt8 *) tmp1, (CFIndex) (tmp2 - tmp1), kCFStringEncodingUTF8, false);
        return str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void ED_ObfuscationFunction3(const char *p1, char *p2, int p3, int p4) {
        int i1 = 0;
        while(i1 < p4) { p2[i1] = (char) (p1[i1] - p3); i1++; }
    }
    
    inline static CFStringRef ED_ObfuscationFunction3CF(const char *p1, int p3, int p4) {
        char tmp1[80];
        ED_ObfuscationFunction3(p1, tmp1, p3, p4);
        CFStringRef str1 = ((_ED_CFStringCreateWithCString) ED_pointers[134])(kCFAllocatorDefault, tmp1, kCFStringEncodingUTF8);
        return str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void ED_ObfuscationFunction9(const char *p1, char *p2, int p3, int p4) {
        int i1 = 0;
        while(i1 < p4) { p2[i1] = p1[i1] ^ (char) p3; i1++; }
    }
    
    inline static CFStringRef ED_ObfuscationFunction9CF(const char *p1, int p3, int p4) {
        char tmp1[80];
        char *tmp2 = tmp1;
        ED_ObfuscationFunction9(p1, tmp1, p3, p4);
        while(*tmp2) { tmp2++; }
        CFStringRef str1 = ((_ED_CFStringCreateWithBytes) ED_pointers[8])(kCFAllocatorDefault, (const UInt8 *) tmp1, (CFIndex) (tmp2 - tmp1), kCFStringEncodingUTF8, false);
        return str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void ED_ObfuscationFunction5(const char *p1, char *p2, int p3, int p4) {
        int i1 = 0;
        while(i1 < p4) { p2[i1] = p1[i1] ^ (char) p3; i1++; }
    }
    
    inline static CFStringRef ED_ObfuscationFunction5CF(const char *p1, int p3, int p4) {
        char tmp1[80];
        ED_ObfuscationFunction5(p1, tmp1, p3, p4);
        CFStringRef str1 = ((_ED_CFStringCreateWithCString) ED_pointers[96])(kCFAllocatorDefault, tmp1, kCFStringEncodingUTF8);
        return str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void ED_ObfuscationFunction2(const char *p1, char *p2, int p3, int p4) {
        int i1 = 0;
        while(i1 < p4) { p2[i1] = (char) (p1[i1] ^ p3 ^ p4); i1++; }
    }
    
    inline static CFStringRef ED_ObfuscationFunction2CF(const char *p1, int p3, int p4) {
        char tmp1[80];
        char *tmp2 = tmp1;
        ED_ObfuscationFunction2(p1, tmp1, p3, p4);
        while(*tmp2) { tmp2++; }
        CFStringRef str1 = ((_ED_CFStringCreateWithBytes) ED_pointers[8])(kCFAllocatorDefault, (const UInt8 *) tmp1, (CFIndex) (tmp2 - tmp1), kCFStringEncodingUTF8, false);
        return str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void ED_ObfuscationFunction10(const char *p1, char *p2, int p3, int p4) {
        int i1 = 0;
        while(i1 < p4) { p2[i1] = (char) (p1[i1] ^ p3 ^ p4); i1++; }
    }
    
    inline static CFStringRef ED_ObfuscationFunction10CF(const char *p1, int p3, int p4) {
        char tmp1[80];
        ED_ObfuscationFunction10(p1, tmp1, p3, p4);
        CFStringRef str1 = ((_ED_CFStringCreateWithCString) ED_pointers[134])(kCFAllocatorDefault, tmp1, kCFStringEncodingUTF8);
        return str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void ED_ObfuscationFunction7(const char *p1, char *p2, int p3, int p4) {
        int i1 = 0;
        while(i1 < p4) { p2[i1] = (char) (p1[i1] ^ (p3 + p4)); i1++; }
    }
    
    inline static CFStringRef ED_ObfuscationFunction7CF(const char *p1, int p3, int p4) {
        char tmp1[80];
        char *tmp2 = tmp1;
        ED_ObfuscationFunction7(p1, tmp1, p3, p4);
        while(*tmp2) { tmp2++; }
        CFStringRef str1 = ((_ED_CFStringCreateWithBytes) ED_pointers[48])(kCFAllocatorDefault, (const UInt8 *) tmp1, (CFIndex) (tmp2 - tmp1), kCFStringEncodingUTF8, false);
        return str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void ED_ObfuscationFunction4(const char *p1, char *p2, int p3, int p4) {
        int i1 = 0;
        while(i1 < p4) { p2[i1] = (char) (p1[i1] ^ (p3 + p4)); i1++; }
    }
    
    inline static CFStringRef ED_ObfuscationFunction4CF(const char *p1, int p3, int p4) {
        char tmp1[80];
        ED_ObfuscationFunction4(p1, tmp1, p3, p4);
        CFStringRef str1 = ((_ED_CFStringCreateWithCString) ED_pointers[134])(kCFAllocatorDefault, tmp1, kCFStringEncodingUTF8);
        return str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void ED_ObfuscationFunction6(const char *p1, char *p2, int p3, int p4) {
        int i1 = 0;
        while(i1 < p4) { p2[i1] = (char) (p1[i1] ^ (p3 * p4)); i1++; }
    }
    
    inline static CFStringRef ED_ObfuscationFunction6CF(const char *p1, int p3, int p4) {
        char tmp1[80];
        char *tmp2 = tmp1;
        ED_ObfuscationFunction6(p1, tmp1, p3, p4);
        while(*tmp2) { tmp2++; }
        CFStringRef str1 = ((_ED_CFStringCreateWithBytes) ED_pointers[48])(kCFAllocatorDefault, (const UInt8 *) tmp1, (CFIndex) (tmp2 - tmp1), kCFStringEncodingUTF8, false);
        return str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void ED_ObfuscationFunction8(const char *p1, char *p2, int p3, int p4) {
        int i1 = 0;
        while(i1 < p4) { p2[i1] = (char) (p1[i1] ^ (p3 * p4)); i1++; }
    }
    
    inline static CFStringRef ED_ObfuscationFunction8CF(const char *p1, int p3, int p4) {
        char tmp1[80];
        ED_ObfuscationFunction8(p1, tmp1, p3, p4);
        CFStringRef str1 = ((_ED_CFStringCreateWithCString) ED_pointers[96])(kCFAllocatorDefault, tmp1, kCFStringEncodingUTF8);
        return str1;
    }
    
    
    // CodeBlock GetMainBundle
#if DEBUG
    inline static void ED_GetMainBundle1(ED_Context *ED_ctx) {
        __RECEIPT_LOG(@"ReceiptValidation - Retrieving main bundle");
        // Retrieve the main bundle
        CFTypeRef bundle = ED_CFBundleGetMainBundle_00270089();
        if (!bundle) {
            // Dead code
            ED_CFRelease_01030133(bundle);
            ED_CFBundleUnloadExecutable_0103006B((CFBundleRef) bundle);
        }
        ED_ctx->main_bundle = (CFBundleRef) bundle;
    }
#else
#define ED_GetMainBundle1(ED_ctx) { \
__RECEIPT_LOG(@"ReceiptValidation - Retrieving main bundle"); \
CFTypeRef bundle = ED_CFBundleGetMainBundle_00270089(); \
if (!bundle) { \
ED_CFRelease_01030133(bundle); \
ED_CFBundleUnloadExecutable_0103006B((CFBundleRef) bundle); \
} \
ED_ctx->main_bundle = (CFBundleRef) bundle; \
}
#endif
    
    
    // CodeBlock LoadReceipt
#if DEBUG
    inline static void ED_LoadReceipt1(ED_Context *ED_ctx) {
        CFStringRef str1;
        CFURLRef url1, url2;
        SInt32 error_code;
        volatile int code = 133; code -= 76; code *= 3; code += 2;
        __RECEIPT_LOG(@"ReceiptValidation - Loading receipt");
        // Compute the path to the receipt
        url1 = ED_CFBundleCopyBundleURL_00AC000C((CFBundleRef) ED_ctx->main_bundle);
        str1 = ED_ObfuscationFunction9CF((ED_strings[50]), 139, 37);
        url2 = ED_CFURLCreateWithFileSystemPathRelativeToBase_01030020(kCFAllocatorDefault, str1, kCFURLPOSIXPathStyle, false, url1);
        ED_CFRelease_00270007(str1);
        ED_CFRelease_00270007(url1);
        // Load the receipt data
        if (ED_ctx->receipt_data) ED_CFRelease_00270007(ED_ctx->receipt_data);
        ED_CFURLCreateDataAndPropertiesFromResource_00AC012E(kCFAllocatorDefault, url2, (CFDataRef *) &(ED_ctx->receipt_data), NULL, NULL, &error_code);
        if (error_code) {
            __RECEIPT_LOG(@"ReceiptValidation - Error while loading receipt");
            ED_exit_008A00BF(code);
            // Dead code
            ED_CFRelease_00270007(url1);
            ED_CFRelease_00270007(url2);
            ED_CFRelease_00270007(url1);
        }
        ED_CFRelease_00270007(url2);
    }
#else
#define ED_LoadReceipt1(ED_ctx) { \
CFStringRef str1; \
CFURLRef url1, url2; \
SInt32 error_code; \
volatile int code = 133; code -= 76; code *= 3; code += 2; \
__RECEIPT_LOG(@"ReceiptValidation - Loading receipt"); \
url1 = ED_CFBundleCopyBundleURL_00AC000C((CFBundleRef) ED_ctx->main_bundle); \
str1 = ED_ObfuscationFunction9CF((ED_strings[50]), 139, 37); \
url2 = ED_CFURLCreateWithFileSystemPathRelativeToBase_01030020(kCFAllocatorDefault, str1, kCFURLPOSIXPathStyle, false, url1); \
ED_CFRelease_00270007(str1); \
ED_CFRelease_00270007(url1); \
if (ED_ctx->receipt_data) ED_CFRelease_00270007(ED_ctx->receipt_data); \
ED_CFURLCreateDataAndPropertiesFromResource_00AC012E(kCFAllocatorDefault, url2, (CFDataRef *) &(ED_ctx->receipt_data), NULL, NULL, &error_code); \
if (error_code) { \
__RECEIPT_LOG(@"ReceiptValidation - Error while loading receipt"); \
ED_exit_008A00BF(code); \
ED_CFRelease_00270007(url1); \
ED_CFRelease_00270007(url2); \
ED_CFRelease_00270007(url1); \
} \
ED_CFRelease_00270007(url2); \
}
#endif
    
    
    // CodeBlock GetMacAddress
#if DEBUG
    inline static void ED_GetMacAddress1(ED_Context *ED_ctx) {
        kern_return_t kernResult;
        mach_port_t master_port;
        CFMutableDictionaryRef matching_dict = NULL;
        io_iterator_t iterator;
        io_object_t service, parent_service;
        volatile int code = 3; code -= 1; code *= 59; code += 55;
        char *str1;
        CFStringRef str2;
        str2 = ED_ObfuscationFunction10CF((ED_strings[296]), 248, 16);
        __RECEIPT_LOG(@"ReceiptValidation - Getting MAC address");
        // Open a MACH port
        kernResult = ED_IOMasterPort_00B90003(MACH_PORT_NULL, &master_port);
        if (kernResult != KERN_SUCCESS) {
            // Dead code
            ED_CFRelease_01030133(matching_dict);
            ED_CFRelease_01030133(str2);
            ED_CFRelease_01030133(matching_dict);
            goto ED_GetMacAddress1_bail;
        }
        // Create a search for primary interface
        char str1_[80];
        ED_ObfuscationFunction10((ED_strings[60]), str1_, 119, 16);
        str1 = str1_;
        matching_dict = ED_IOBSDNameMatching_01220053(master_port, 0, str1);
        if (!matching_dict) {
            // Dead code
            ED_CFRelease_01030133(matching_dict);
            ED_CFRelease_01030133(str2);
            ED_CFRelease_01030133(matching_dict);
            goto ED_GetMacAddress1_bail;
        }
        // Perform the search
        kernResult = ED_IOServiceGetMatchingServices_00B90077(master_port, matching_dict, &iterator);
        if (kernResult != KERN_SUCCESS) {
            // Dead code
            ED_CFRelease_01030133(matching_dict);
            ED_CFRelease_01030133(str2);
            ED_CFRelease_01030133(matching_dict);
            goto ED_GetMacAddress1_bail;
        }
        // Iterate over the result
        while((service = ED_IOIteratorNext_01220127(iterator)) != 0) {
            kernResult = ED_IORegistryEntryGetParentEntry_00B90119(service, kIOServicePlane, &parent_service);
            if (kernResult == KERN_SUCCESS) {
                if (ED_ctx->mac_data) ED_CFRelease_01030133(ED_ctx->mac_data);
                ED_ctx->mac_data = (CFDataRef) ED_IORegistryEntryCreateCFProperty_0122005D(parent_service, str2, kCFAllocatorDefault, 0);
                ED_IOObjectRelease_00B9010D(parent_service);
            }
            ED_IOObjectRelease_00B9010D(iterator);
            ED_IOObjectRelease_00B9010D(service);
        }
    ED_GetMacAddress1_bail:
        ED_CFRelease_01030133(str2);
    }
#else
#define ED_GetMacAddress1(ED_ctx) { \
kern_return_t kernResult; \
mach_port_t master_port; \
CFMutableDictionaryRef matching_dict = NULL; \
io_iterator_t iterator; \
io_object_t service, parent_service; \
volatile int code = 3; code -= 1; code *= 59; code += 55; \
char *str1; \
CFStringRef str2; \
str2 = ED_ObfuscationFunction10CF((ED_strings[296]), 248, 16);  \
__RECEIPT_LOG(@"ReceiptValidation - Getting MAC address"); \
kernResult = ED_IOMasterPort_00B90003(MACH_PORT_NULL, &master_port); \
if (kernResult != KERN_SUCCESS) { \
ED_CFRelease_01030133(matching_dict); \
ED_CFRelease_01030133(str2); \
ED_CFRelease_01030133(matching_dict); \
goto ED_GetMacAddress1_bail; \
} \
char str1_[80]; \
ED_ObfuscationFunction10((ED_strings[60]), str1_, 119, 16); \
str1 = str1_; \
matching_dict = ED_IOBSDNameMatching_01220053(master_port, 0, str1); \
if (!matching_dict) { \
ED_CFRelease_01030133(matching_dict); \
ED_CFRelease_01030133(str2); \
ED_CFRelease_01030133(matching_dict); \
goto ED_GetMacAddress1_bail; \
} \
kernResult = ED_IOServiceGetMatchingServices_00B90077(master_port, matching_dict, &iterator); \
if (kernResult != KERN_SUCCESS) { \
ED_CFRelease_01030133(matching_dict); \
ED_CFRelease_01030133(str2); \
ED_CFRelease_01030133(matching_dict); \
goto ED_GetMacAddress1_bail; \
} \
while((service = ED_IOIteratorNext_01220127(iterator)) != 0) { \
kernResult = ED_IORegistryEntryGetParentEntry_00B90119(service, kIOServicePlane, &parent_service); \
if (kernResult == KERN_SUCCESS) { \
if (ED_ctx->mac_data) ED_CFRelease_01030133(ED_ctx->mac_data); \
ED_ctx->mac_data = (CFDataRef) ED_IORegistryEntryCreateCFProperty_0122005D(parent_service, str2, kCFAllocatorDefault, 0); \
ED_IOObjectRelease_00B9010D(parent_service); \
} \
ED_IOObjectRelease_00B9010D(iterator); \
ED_IOObjectRelease_00B9010D(service); \
} \
ED_GetMacAddress1_bail: \
ED_CFRelease_01030133(str2); \
}
#endif
    
    
    // CodeBlock GetReceiptInformation
#if DEBUG
    inline static void ED_GetReceiptInformation1X(const ED_ASN1_DATA *asn1data, int *payload) {
        uint8 *ptr = asn1data->data;
        size_t size = asn1data->length;
        *payload = 0;
        // Extract an ASN.1 INTEGER value
        do {
            *payload <<= 8;
            *payload += (uint8) *ptr++;
        } while(--size > 0);
    }
#else
#define ED_GetReceiptInformation1X(asn1data, payload) { \
uint8 *ptr = asn1data->data; \
size_t size = asn1data->length; \
*payload = 0; \
do { \
*payload <<= 8; \
*payload += (uint8) *ptr++; \
} while(--size > 0); \
}
#endif
    
#if DEBUG
    inline static void ED_GetReceiptInformation1(ED_Context *ED_ctx) {
        ED_Parsing receipt_context;
        ED_Parsing *current_context;
        volatile int code = 160; code -= 103; code *= 3; code += 2;
        CMSDecoderRef decoder = NULL;
        CFDataRef content = NULL;
        CFNumberRef key = NULL;
        SecAsn1CoderRef asn1decoder = NULL;
        OSStatus status;
        ED_Payload payload = { NULL };
        ED_ReceiptAttribute *current;
        ED_ReceiptAttributeType key1, key2;
        CFTypeRef value1, value2;
        ED_ASN1_DATA asn1data;
        int type;
        __RECEIPT_LOG(@"ReceiptValidation - Parsing receipt");
        // Create a decoder for the encrypted message
        status = ED_CMSDecoderCreate_00A3007D(&decoder);
        if (status) {
            goto ED_GetReceiptInformation1_bail;
        }
        // Decrypt the message (update pass)
        status = ED_CMSDecoderUpdateMessage_00E700F6(decoder, ED_CFDataGetBytePtr_01030143((CFDataRef) ED_ctx->receipt_data), (size_t) ED_CFDataGetLength_002700F7((CFDataRef) ED_ctx->receipt_data));
        if (status) {
            goto ED_GetReceiptInformation1_bail;
        }
        // Decrypt the message (final pass)
        status = ED_CMSDecoderFinalizeMessage_00E700A8(decoder);
        if (status) {
            goto ED_GetReceiptInformation1_bail;
        }
        // Get the message content
        status = ED_CMSDecoderCopyContent_00A3009F(decoder, &content);
        if (status) {
            goto ED_GetReceiptInformation1_bail;
        }
        // Create the ASN.1 parser
        status = ED_SecAsn1CoderCreate_00A3009D(&asn1decoder);
        if (status) {
            goto ED_GetReceiptInformation1_bail;
        }
        // Create the receipt parsing context
        receipt_context.source = ED_CFDataGetBytePtr_01030143(content);
        receipt_context.length = (size_t) ED_CFDataGetLength_002700F7(content);
        receipt_context.dictionary = NULL;
        current_context = &receipt_context;
        while(true) {
            if (!current_context->dictionary) {
                // Create the target dictionary
                current_context->dictionary = ED_CFDictionaryCreateMutable_00270018(kCFAllocatorDefault, (CFIndex) 80, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
                // Decode the receipt payload from ASN.1
                status = ED_SecAsn1Decode_00A300FC(asn1decoder, current_context->source, current_context->length, ED_kSetOfReceiptAttributeTemplate, &payload);
                if (status) {
                    goto ED_GetReceiptInformation1_bail;
                }
                current_context->pointer = payload.attributes;
            }
            // Iterate over attributes
            while(*current_context->pointer) {
                current = *current_context->pointer++;
                ED_GetReceiptInformation1X((&current->type), (&type));
                key1 = key2 = ED_DataStoreNone;
                value1 = value2 = NULL;
                // Extract the value
                switch(type) {
                        // Attributes encoded as ASN.1 UTF8STRING
                    case ED_ReceiptAttributeTypeBundleId:
                    case ED_ReceiptAttributeTypeBundleVersion:
                        status = ED_SecAsn1Decode_00A300FC(asn1decoder, current->value.data, current->value.length, kSecAsn1UTF8StringTemplate, &asn1data);
                        if (status) {
                            goto ED_GetReceiptInformation1_bail;
                        }
                        value1 = ((_ED_CFStringCreateWithBytes) ED_pointers[48])(kCFAllocatorDefault, (const UInt8 *) asn1data.data, (CFIndex) asn1data.length, kCFStringEncodingUTF8, false);
                        value2 = ED_CFDataCreate_00AC00DA(kCFAllocatorDefault, (const UInt8 *) current->value.data, (CFIndex) current->value.length);
                        break;
                        // Attributes encoded as ASN.1 OCTETSTRING
                    case ED_ReceiptAttributeTypeOpaqueValue:
                    case ED_ReceiptAttributeTypeHash:
                        value1 = ED_CFDataCreate_00AC00DA(kCFAllocatorDefault, (const UInt8 *) current->value.data, (CFIndex) current->value.length);
                        break;
                    default:
                        break;
                }
                // Assign the key for storage
                switch(type) {
                    case ED_ReceiptAttributeTypeBundleId:
                        key1 = ED_DataStoreBundleId;
                        key2 = ED_DataStoreBundleIdData;
                        break;
                    case ED_ReceiptAttributeTypeBundleVersion:
                        key1 = ED_DataStoreBundleVersion;
                        key2 = ED_DataStoreBundleVersionData;
                        break;
                    case ED_ReceiptAttributeTypeOpaqueValue:
                        key1 = ED_DataStoreOpaqueValue;
                        break;
                    case ED_ReceiptAttributeTypeHash:
                        key1 = ED_DataStoreHash;
                        break;
                    default:
                        break;
                }
                // Store data if any
                if (key1 != ED_DataStoreNone) {
                    key = ED_CFNumberCreate_00AC00E1(kCFAllocatorDefault, kCFNumberIntType, &key1);
                    ED_CFDictionaryAddValue_002700B0((CFMutableDictionaryRef) current_context->dictionary, key, value1);
                    ED_CFRelease_00AC0007(key);
                }
                // Store data if any
                if (key2 != ED_DataStoreNone) {
                    key = ED_CFNumberCreate_00AC00E1(kCFAllocatorDefault, kCFNumberIntType, &key2);
                    ED_CFDictionaryAddValue_002700B0((CFMutableDictionaryRef) current_context->dictionary, key, value2);
                    ED_CFRelease_00AC0007(key);
                }
                if (value1) ED_CFRelease_00AC0007(value1);
                if (value2) ED_CFRelease_00AC0007(value2);
            }
            if (!current_context->dictionary) {
                continue;
            }
            if (*current_context->pointer) {
                continue;
            }
            break;
        }
        if (ED_ctx->receipt_dict) ED_CFRelease_00AC0007(ED_ctx->receipt_dict);
        ED_ctx->receipt_dict = receipt_context.dictionary;
    ED_GetReceiptInformation1_bail:
        if (content) ED_CFRelease_00AC0007(content);
        if (decoder) ED_CFRelease_00AC0007(decoder);
        if (asn1decoder) ED_SecAsn1CoderRelease_00A300DF(asn1decoder);
    }
#else
#define ED_GetReceiptInformation1(ED_ctx) { \
ED_Parsing receipt_context; \
ED_Parsing *current_context; \
volatile int code = 160; code -= 103; code *= 3; code += 2; \
CMSDecoderRef decoder = NULL; \
CFDataRef content = NULL; \
CFNumberRef key = NULL; \
SecAsn1CoderRef asn1decoder = NULL; \
OSStatus status; \
ED_Payload payload = { NULL }; \
ED_ReceiptAttribute *current; \
ED_ReceiptAttributeType key1, key2; \
CFTypeRef value1, value2; \
ED_ASN1_DATA asn1data; \
int type; \
__RECEIPT_LOG(@"ReceiptValidation - Parsing receipt"); \
status = ED_CMSDecoderCreate_00A3007D(&decoder); \
if (status) { \
goto ED_GetReceiptInformation1_bail; \
} \
status = ED_CMSDecoderUpdateMessage_00E700F6(decoder, ED_CFDataGetBytePtr_01030143((CFDataRef) ED_ctx->receipt_data), (size_t) ED_CFDataGetLength_002700F7((CFDataRef) ED_ctx->receipt_data)); \
if (status) { \
goto ED_GetReceiptInformation1_bail; \
} \
status = ED_CMSDecoderFinalizeMessage_00E700A8(decoder); \
if (status) { \
goto ED_GetReceiptInformation1_bail; \
} \
status = ED_CMSDecoderCopyContent_00A3009F(decoder, &content); \
if (status) { \
goto ED_GetReceiptInformation1_bail; \
} \
status = ED_SecAsn1CoderCreate_00A3009D(&asn1decoder); \
if (status) { \
goto ED_GetReceiptInformation1_bail; \
} \
receipt_context.source = ED_CFDataGetBytePtr_01030143(content); \
receipt_context.length = (size_t) ED_CFDataGetLength_002700F7(content); \
receipt_context.dictionary = NULL; \
current_context = &receipt_context; \
while(true) { \
if (!current_context->dictionary) { \
current_context->dictionary = ED_CFDictionaryCreateMutable_00270018(kCFAllocatorDefault, (CFIndex) 80, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks); \
status = ED_SecAsn1Decode_00A300FC(asn1decoder, current_context->source, current_context->length, ED_kSetOfReceiptAttributeTemplate, &payload); \
if (status) { \
goto ED_GetReceiptInformation1_bail; \
} \
current_context->pointer = payload.attributes; \
} \
while(*current_context->pointer) { \
current = *current_context->pointer++; \
ED_GetReceiptInformation1X((&current->type), (&type)); \
key1 = key2 = ED_DataStoreNone; \
value1 = value2 = NULL; \
switch(type) { \
case ED_ReceiptAttributeTypeBundleId: \
case ED_ReceiptAttributeTypeBundleVersion: \
status = ED_SecAsn1Decode_00A300FC(asn1decoder, current->value.data, current->value.length, kSecAsn1UTF8StringTemplate, &asn1data); \
if (status) { \
goto ED_GetReceiptInformation1_bail; \
} \
value1 = ((_ED_CFStringCreateWithBytes) ED_pointers[48])(kCFAllocatorDefault, (const UInt8 *) asn1data.data, (CFIndex) asn1data.length, kCFStringEncodingUTF8, false); \
value2 = ED_CFDataCreate_00AC00DA(kCFAllocatorDefault, (const UInt8 *) current->value.data, (CFIndex) current->value.length); \
break; \
case ED_ReceiptAttributeTypeOpaqueValue: \
case ED_ReceiptAttributeTypeHash: \
value1 = ED_CFDataCreate_00AC00DA(kCFAllocatorDefault, (const UInt8 *) current->value.data, (CFIndex) current->value.length); \
break; \
default: \
break; \
} \
switch(type) { \
case ED_ReceiptAttributeTypeBundleId: \
key1 = ED_DataStoreBundleId; \
key2 = ED_DataStoreBundleIdData; \
break; \
case ED_ReceiptAttributeTypeBundleVersion: \
key1 = ED_DataStoreBundleVersion; \
key2 = ED_DataStoreBundleVersionData; \
break; \
case ED_ReceiptAttributeTypeOpaqueValue: \
key1 = ED_DataStoreOpaqueValue; \
break; \
case ED_ReceiptAttributeTypeHash: \
key1 = ED_DataStoreHash; \
break; \
default: \
break; \
} \
if (key1 != ED_DataStoreNone) { \
key = ED_CFNumberCreate_00AC00E1(kCFAllocatorDefault, kCFNumberIntType, &key1); \
ED_CFDictionaryAddValue_002700B0((CFMutableDictionaryRef) current_context->dictionary, key, value1); \
ED_CFRelease_00AC0007(key); \
} \
if (key2 != ED_DataStoreNone) { \
key = ED_CFNumberCreate_00AC00E1(kCFAllocatorDefault, kCFNumberIntType, &key2); \
ED_CFDictionaryAddValue_002700B0((CFMutableDictionaryRef) current_context->dictionary, key, value2); \
ED_CFRelease_00AC0007(key); \
} \
if (value1) ED_CFRelease_00AC0007(value1); \
if (value2) ED_CFRelease_00AC0007(value2); \
} \
if (!current_context->dictionary) { \
continue; \
} \
if (*current_context->pointer) { \
continue; \
} \
break; \
} \
if (ED_ctx->receipt_dict) ED_CFRelease_00AC0007(ED_ctx->receipt_dict); \
ED_ctx->receipt_dict = receipt_context.dictionary; \
ED_GetReceiptInformation1_bail: \
if (content) ED_CFRelease_00AC0007(content); \
if (decoder) ED_CFRelease_00AC0007(decoder); \
if (asn1decoder) ED_SecAsn1CoderRelease_00A300DF(asn1decoder); \
}
#endif
    
    
    // CodeBlock CheckBundleIdentifier
#if DEBUG
    inline static void ED_CheckBundleIdentifier1(ED_Context *ED_ctx) {
        CFStringRef str1 = ED_ObfuscationFunction6CF((ED_strings[67]), 72, 23);
        __RECEIPT_LOG(@"ReceiptValidation - Checking bundle identifier");
        volatile int code = 55; code -= 21; code *= 5; code += 3;
        CFStringRef str2 = ED_CFBundleGetIdentifier_002700E6((CFBundleRef) ED_ctx->main_bundle);
        if (ED_CFStringCompare_00270054(str1, str2, 0) != kCFCompareEqualTo) {
            __RECEIPT_LOG(@"ReceiptValidation - Bundle identifier mismatch");
            ED_exit_000B0104(code);
            // Dead code
            ED_CFRelease_00AC00B3(str2);
            ED_CFRelease_00AC00B3(str2);
        }
        ED_CFRelease_00AC00B3(str1);
    }
#else
#define ED_CheckBundleIdentifier1(ED_ctx) { \
CFStringRef str1 = ED_ObfuscationFunction6CF((ED_strings[67]), 72, 23); \
__RECEIPT_LOG(@"ReceiptValidation - Checking bundle identifier"); \
volatile int code = 55; code -= 21; code *= 5; code += 3; \
CFStringRef str2 = ED_CFBundleGetIdentifier_002700E6((CFBundleRef) ED_ctx->main_bundle); \
if (ED_CFStringCompare_00270054(str1, str2, 0) != kCFCompareEqualTo) { \
__RECEIPT_LOG(@"ReceiptValidation - Bundle identifier mismatch"); \
ED_exit_000B0104(code); \
ED_CFRelease_00AC00B3(str2); \
ED_CFRelease_00AC00B3(str2); \
} \
ED_CFRelease_00AC00B3(str1); \
}
#endif
    
    
    // CodeBlock CheckBundleVersion
#if DEBUG
    inline static void ED_CheckBundleVersion1(ED_Context *ED_ctx) {
        __RECEIPT_LOG(@"ReceiptValidation - Checking bundle version");
        CFStringRef str1 = ED_ObfuscationFunction9CF((ED_strings[69]), 206, 16);
        CFStringRef str2 = ED_ObfuscationFunction9CF((ED_strings[264]), 179, 35);
        volatile int code = 19; code -= 4; code *= 11; code += 8;
        CFStringRef str3 = (CFStringRef) ED_CFBundleGetValueForInfoDictionaryKey_002700B6((CFBundleRef) ED_ctx->main_bundle, str2);
        if (ED_CFStringCompare_00270054(str1, str3, 0) != kCFCompareEqualTo) {
            __RECEIPT_LOG(@"ReceiptValidation - Bundle version mismatch");
            ED_exit_012C0104(code);
            // Dead code
            ED_CFRelease_002700B3(str1);
            ED_CFRelease_002700B3(str2);
            ED_CFRelease_002700B3(str1);
        }
        ED_CFRelease_002700B3(str2);
        ED_CFRelease_002700B3(str1);
    }
#else
#define ED_CheckBundleVersion1(ED_ctx) { \
__RECEIPT_LOG(@"ReceiptValidation - Checking bundle version"); \
CFStringRef str1 = ED_ObfuscationFunction9CF((ED_strings[69]), 206, 16); \
CFStringRef str2 = ED_ObfuscationFunction9CF((ED_strings[264]), 179, 35); \
volatile int code = 19; code -= 4; code *= 11; code += 8; \
CFStringRef str3 = (CFStringRef) ED_CFBundleGetValueForInfoDictionaryKey_002700B6((CFBundleRef) ED_ctx->main_bundle, str2); \
if (ED_CFStringCompare_00270054(str1, str3, 0) != kCFCompareEqualTo) { \
__RECEIPT_LOG(@"ReceiptValidation - Bundle version mismatch"); \
ED_exit_012C0104(code); \
ED_CFRelease_002700B3(str1); \
ED_CFRelease_002700B3(str2); \
ED_CFRelease_002700B3(str1); \
} \
ED_CFRelease_002700B3(str2); \
ED_CFRelease_002700B3(str1); \
}
#endif
    
    
    // CodeBlock CheckReceiptSignature
#if DEBUG
    inline static void ED_CheckReceiptSignature1(ED_Context *ED_ctx) {
        CMSDecoderRef decoder = NULL;
        SecTrustRef trust_ref = NULL;
        SecPolicyRef policy_ref = NULL;
        volatile int code = 127; code -= 70; code *= 3; code += 2;
        OSStatus status;
        __RECEIPT_LOG(@"ReceiptValidation - Checking receipt signature");
        status = ED_CMSDecoderCreate_00A30075(&decoder);
        if (status) {
            ED_exit_000B00F0(code);
            // Dead code
            ED_CFRelease_00AC0007(trust_ref);
            ED_CFRelease_00AC0007(policy_ref);
            ED_CFRelease_00AC0007(trust_ref);
        }
        status = ED_CMSDecoderUpdateMessage_005B012F(decoder, ED_CFDataGetBytePtr_0027003A((CFDataRef) ED_ctx->receipt_data), (size_t) ED_CFDataGetLength_00AC00AE((CFDataRef) ED_ctx->receipt_data));
        if (status) {
            ED_exit_000B00F0(code);
            // Dead code
            ED_CFRelease_00AC0007(trust_ref);
            ED_CFRelease_00AC0007(policy_ref);
            ED_CFRelease_00AC0007(trust_ref);
        }
        status = ED_CMSDecoderFinalizeMessage_00E70035(decoder);
        if (status) {
            ED_exit_000B00F0(code);
            // Dead code
            ED_CFRelease_00AC0007(trust_ref);
            ED_CFRelease_00AC0007(decoder);
            ED_CFRelease_00AC0007(trust_ref);
        }
        size_t num_signers;
        status = ED_CMSDecoderGetNumSigners_00A300CF(decoder, &num_signers);
        if (status) {
            ED_exit_000B00F0(code);
            // Dead code
            ED_CFRelease_00AC0007(trust_ref);
            ED_CFRelease_00AC0007(decoder);
            ED_CFRelease_00AC0007(policy_ref);
        }
        CMSSignerStatus signer_status;
        OSStatus cert_verify_result;
        policy_ref = ED_SecPolicyCreateBasicX509_00E7004C();
        status = ED_CMSDecoderCopySignerStatus_00E7010E(decoder, 0, policy_ref, TRUE, &signer_status, &trust_ref, &cert_verify_result);
        if (status) {
            ED_exit_000B00F0(code);
            // Dead code
            ED_CFRelease_00AC0007(policy_ref);
            ED_CFRelease_00AC0007(trust_ref);
            ED_CFRelease_00AC0007(policy_ref);
        }
    ED_CheckReceiptSignature1_bail:
        if (policy_ref) ED_CFRelease_00AC0007(policy_ref);
        if (trust_ref) ED_CFRelease_00AC0007(trust_ref);
        if (decoder) ED_CFRelease_00AC0007(decoder);
    }
#else
#define ED_CheckReceiptSignature1(ED_ctx) { \
CMSDecoderRef decoder = NULL; \
SecTrustRef trust_ref = NULL; \
SecPolicyRef policy_ref = NULL; \
volatile int code = 127; code -= 70; code *= 3; code += 2; \
OSStatus status; \
__RECEIPT_LOG(@"ReceiptValidation - Checking receipt signature"); \
status = ED_CMSDecoderCreate_00A30075(&decoder); \
if (status) { \
ED_exit_000B00F0(code); \
ED_CFRelease_00AC0007(trust_ref); \
ED_CFRelease_00AC0007(policy_ref); \
ED_CFRelease_00AC0007(trust_ref); \
} \
status = ED_CMSDecoderUpdateMessage_005B012F(decoder, ED_CFDataGetBytePtr_0027003A((CFDataRef) ED_ctx->receipt_data), (size_t) ED_CFDataGetLength_00AC00AE((CFDataRef) ED_ctx->receipt_data)); \
if (status) { \
ED_exit_000B00F0(code); \
ED_CFRelease_00AC0007(trust_ref); \
ED_CFRelease_00AC0007(policy_ref); \
ED_CFRelease_00AC0007(trust_ref); \
} \
status = ED_CMSDecoderFinalizeMessage_00E70035(decoder); \
if (status) { \
ED_exit_000B00F0(code); \
ED_CFRelease_00AC0007(trust_ref); \
ED_CFRelease_00AC0007(decoder); \
ED_CFRelease_00AC0007(trust_ref); \
} \
size_t num_signers; \
status = ED_CMSDecoderGetNumSigners_00A300CF(decoder, &num_signers); \
if (status) { \
ED_exit_000B00F0(code); \
ED_CFRelease_00AC0007(trust_ref); \
ED_CFRelease_00AC0007(decoder); \
ED_CFRelease_00AC0007(policy_ref); \
} \
CMSSignerStatus signer_status; \
OSStatus cert_verify_result; \
policy_ref = ED_SecPolicyCreateBasicX509_00E7004C(); \
status = ED_CMSDecoderCopySignerStatus_00E7010E(decoder, 0, policy_ref, TRUE, &signer_status, &trust_ref, &cert_verify_result); \
if (status) { \
ED_exit_000B00F0(code); \
ED_CFRelease_00AC0007(policy_ref); \
ED_CFRelease_00AC0007(trust_ref); \
ED_CFRelease_00AC0007(policy_ref); \
} \
ED_CheckReceiptSignature1_bail: \
if (policy_ref) ED_CFRelease_00AC0007(policy_ref); \
if (trust_ref) ED_CFRelease_00AC0007(trust_ref); \
if (decoder) ED_CFRelease_00AC0007(decoder); \
}
#endif
    
    
    // CodeBlock CheckReceiptIdentifier
#if DEBUG
    inline static void ED_CheckReceiptIdentifier1(ED_Context *ED_ctx) {
        __RECEIPT_LOG(@"ReceiptValidation - Checking receipt identifier");
        ED_ReceiptAttributeType value = ED_DataStoreBundleId;
        volatile int code = 89; code -= 32; code *= 3; code += 2;
        CFStringRef str1 = ED_ObfuscationFunction3CF((ED_strings[173]), 213, 23);
        CFNumberRef key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &value);
        CFStringRef str2 = (CFStringRef) ED_CFDictionaryGetValue_0103009B((CFDictionaryRef) ED_ctx->receipt_dict, key);
        ED_CFRelease_01030007(key);
        if (ED_CFStringCompare_01030054(str1, str2, 0) != kCFCompareEqualTo) {
            __RECEIPT_LOG(@"ReceiptValidation - Receipt identifier mismatch");
            ED_exit_000B00F0(code);
            // Dead code
            ED_CFRelease_01030007(key);
            ED_CFRelease_01030007(str1);
            ED_CFRelease_01030007(key);
            ED_CFRelease_01030007(str1);
        }
        ED_CFRelease_01030007(str1);
    }
#else
#define ED_CheckReceiptIdentifier1(ED_ctx) { \
__RECEIPT_LOG(@"ReceiptValidation - Checking receipt identifier"); \
ED_ReceiptAttributeType value = ED_DataStoreBundleId; \
volatile int code = 89; code -= 32; code *= 3; code += 2; \
CFStringRef str1 = ED_ObfuscationFunction3CF((ED_strings[173]), 213, 23); \
CFNumberRef key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &value); \
CFStringRef str2 = (CFStringRef) ED_CFDictionaryGetValue_0103009B((CFDictionaryRef) ED_ctx->receipt_dict, key); \
ED_CFRelease_01030007(key); \
if (ED_CFStringCompare_01030054(str1, str2, 0) != kCFCompareEqualTo) { \
__RECEIPT_LOG(@"ReceiptValidation - Receipt identifier mismatch"); \
ED_exit_000B00F0(code); \
ED_CFRelease_01030007(key); \
ED_CFRelease_01030007(str1); \
ED_CFRelease_01030007(key); \
ED_CFRelease_01030007(str1); \
} \
ED_CFRelease_01030007(str1); \
}
#endif
    
    
    // CodeBlock CheckReceiptVersion
#if DEBUG
    inline static void ED_CheckReceiptVersion1(ED_Context *ED_ctx) {
        __RECEIPT_LOG(@"ReceiptValidation - Checking receipt version");
        ED_ReceiptAttributeType value = ED_DataStoreBundleVersion;
        CFStringRef str1 = ED_ObfuscationFunction1CF((ED_strings[241]), 230, 16);
        volatile int code = 40; code -= 12; code *= 6; code += 5;
        CFNumberRef key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &value);
        CFStringRef str2 = (CFStringRef) ED_CFDictionaryGetValue_01030012((CFDictionaryRef) ED_ctx->receipt_dict, key);
        ED_CFRelease_00AC0133(key);
        if (ED_CFStringCompare_00270019(str1, str2, 0) != kCFCompareEqualTo) {
            __RECEIPT_LOG(@"ReceiptValidation - Receipt version mismatch");
            ED_exit_012C0104(code);
            // Dead code
            ED_CFRelease_00AC0133(key);
            ED_CFRelease_00AC0133(str1);
            ED_CFRelease_00AC0133(key);
            ED_CFRelease_00AC0133(str1);
        }
        ED_CFRelease_00AC0133(str1);
    }
#else
#define ED_CheckReceiptVersion1(ED_ctx) { \
__RECEIPT_LOG(@"ReceiptValidation - Checking receipt version"); \
ED_ReceiptAttributeType value = ED_DataStoreBundleVersion; \
CFStringRef str1 = ED_ObfuscationFunction1CF((ED_strings[241]), 230, 16); \
volatile int code = 40; code -= 12; code *= 6; code += 5; \
CFNumberRef key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &value); \
CFStringRef str2 = (CFStringRef) ED_CFDictionaryGetValue_01030012((CFDictionaryRef) ED_ctx->receipt_dict, key); \
ED_CFRelease_00AC0133(key); \
if (ED_CFStringCompare_00270019(str1, str2, 0) != kCFCompareEqualTo) { \
__RECEIPT_LOG(@"ReceiptValidation - Receipt version mismatch"); \
ED_exit_012C0104(code); \
ED_CFRelease_00AC0133(key); \
ED_CFRelease_00AC0133(str1); \
ED_CFRelease_00AC0133(key); \
ED_CFRelease_00AC0133(str1); \
} \
ED_CFRelease_00AC0133(str1); \
}
#endif
    
    
    // CodeBlock CheckReceiptHash
#if DEBUG
    inline static void ED_CheckReceiptHash1(ED_Context *ED_ctx) {
        CFDataRef data1, data2, data3;
        CFMutableDataRef data4;
        unsigned char digest[80];
        volatile int counter = 11; counter -= 5; counter *= 3; counter += 2;
        ED_ReceiptAttributeType value;
        CFNumberRef key;
        __RECEIPT_LOG(@"ReceiptValidation - Checking receipt hash");
        value = ED_DataStoreOpaqueValue;
        key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &value);
        data1 = (CFDataRef) ED_CFDictionaryGetValue_01030012((CFDictionaryRef) ED_ctx->receipt_dict, key);
        ED_CFRelease_00270007(key);
        value = ED_DataStoreBundleIdData;
        key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &value);
        data2 = (CFDataRef) ED_CFDictionaryGetValue_01030012((CFDictionaryRef) ED_ctx->receipt_dict, key);
        ED_CFRelease_00270007(key);
        value = ED_DataStoreHash;
        key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &value);
        data3 = (CFDataRef) ED_CFDictionaryGetValue_01030012((CFDictionaryRef) ED_ctx->receipt_dict, key);
        ED_CFRelease_00270007(key);
        data4 = ED_CFDataCreateMutable_002700ED(kCFAllocatorDefault, ED_CFDataGetLength_00AC00C0((CFDataRef) ED_ctx->mac_data) + ED_CFDataGetLength_00AC00C0(data1) + ED_CFDataGetLength_00AC00C0(data2));
        ED_CFDataAppendBytes_00270021(data4, ED_CFDataGetBytePtr_0103003A((CFDataRef) ED_ctx->mac_data), ED_CFDataGetLength_00AC00C0((CFDataRef) ED_ctx->mac_data));
        ED_CFDataAppendBytes_00270021(data4, ED_CFDataGetBytePtr_0103003A(data1), ED_CFDataGetLength_00AC00C0(data1));
        ED_CFDataAppendBytes_00270021(data4, ED_CFDataGetBytePtr_0103003A(data2), ED_CFDataGetLength_00AC00C0(data2));
        ED_CC_SHA1_000B0005(ED_CFDataGetBytePtr_0103003A(data4), (CC_LONG) ED_CFDataGetLength_00AC00C0(data4), digest);
        volatile int code = 63; code -= 20; code *= 4; code += 1;
        const unsigned char *ptr1 = digest;
        const unsigned char *ptr2 = ED_CFDataGetBytePtr_0103003A(data3);
        while(--counter >= 0) {
            if ((*ptr1++) != (*ptr2++)) {
                __RECEIPT_LOG(@"ReceiptValidation - Receipt hash is invalid");
                ED_CFRelease_00270007(data4);
                ED_exit_012C0104(code);
                // Dead code
                ED_CFRelease_00270007(data1);
                ED_CFRelease_00270007(data2);
                ED_CFRelease_00270007(data4);
                goto ED_CheckReceiptHash1_bail;
            }
        }
    ED_CheckReceiptHash1_bail:
        ED_CFRelease_00270007(data4);
    }
#else
#define ED_CheckReceiptHash1(ED_ctx) { \
CFDataRef data1, data2, data3; \
CFMutableDataRef data4; \
unsigned char digest[80]; \
volatile int counter = 11; counter -= 5; counter *= 3; counter += 2; \
ED_ReceiptAttributeType value; \
CFNumberRef key; \
__RECEIPT_LOG(@"ReceiptValidation - Checking receipt hash"); \
value = ED_DataStoreOpaqueValue; \
key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &value); \
data1 = (CFDataRef) ED_CFDictionaryGetValue_01030012((CFDictionaryRef) ED_ctx->receipt_dict, key); \
ED_CFRelease_00270007(key); \
value = ED_DataStoreBundleIdData; \
key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &value); \
data2 = (CFDataRef) ED_CFDictionaryGetValue_01030012((CFDictionaryRef) ED_ctx->receipt_dict, key); \
ED_CFRelease_00270007(key); \
value = ED_DataStoreHash; \
key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &value); \
data3 = (CFDataRef) ED_CFDictionaryGetValue_01030012((CFDictionaryRef) ED_ctx->receipt_dict, key); \
ED_CFRelease_00270007(key); \
data4 = ED_CFDataCreateMutable_002700ED(kCFAllocatorDefault, ED_CFDataGetLength_00AC00C0((CFDataRef) ED_ctx->mac_data) + ED_CFDataGetLength_00AC00C0(data1) + ED_CFDataGetLength_00AC00C0(data2)); \
ED_CFDataAppendBytes_00270021(data4, ED_CFDataGetBytePtr_0103003A((CFDataRef) ED_ctx->mac_data), ED_CFDataGetLength_00AC00C0((CFDataRef) ED_ctx->mac_data)); \
ED_CFDataAppendBytes_00270021(data4, ED_CFDataGetBytePtr_0103003A(data1), ED_CFDataGetLength_00AC00C0(data1)); \
ED_CFDataAppendBytes_00270021(data4, ED_CFDataGetBytePtr_0103003A(data2), ED_CFDataGetLength_00AC00C0(data2)); \
ED_CC_SHA1_000B0005(ED_CFDataGetBytePtr_0103003A(data4), (CC_LONG) ED_CFDataGetLength_00AC00C0(data4), digest); \
volatile int code = 63; code -= 20; code *= 4; code += 1; \
const unsigned char *ptr1 = digest; \
const unsigned char *ptr2 = ED_CFDataGetBytePtr_0103003A(data3); \
while(--counter >= 0) { \
if ((*ptr1++) != (*ptr2++)) { \
__RECEIPT_LOG(@"ReceiptValidation - Receipt hash is invalid"); \
ED_CFRelease_00270007(data4); \
ED_exit_012C0104(code); \
ED_CFRelease_00270007(data1); \
ED_CFRelease_00270007(data2); \
ED_CFRelease_00270007(data4); \
goto ED_CheckReceiptHash1_bail; \
} \
} \
ED_CheckReceiptHash1_bail: \
ED_CFRelease_00270007(data4); \
}
#endif
    
    
    // CodeBlock AppRunner
#ifdef RUNNER
#define RUNNER_SIGNATURE int(*_RUNNER_)(int argc, const char *argv[])
    typedef RUNNER_SIGNATURE;
    static uintptr_t RUNNER_ = ((uintptr_t)RUNNER - -320);
#endif
    
    inline static void ED_AppRunner1(ED_Context *ED_ctx) {
#ifdef RUNNER
        ((_RUNNER_)(RUNNER_ + -320))(ED_ctx->argc, ED_ctx->argv);
#else
        ED_NSApplicationMain_013000A5(ED_ctx->argc, ED_ctx->argv);
#endif
    }
    
    
    // CodeBlock CleanUp
#if DEBUG
    inline static void ED_CleanUp1(ED_Context *ED_ctx) {
        __RECEIPT_LOG(@"ReceiptValidation - Cleaning up");
        int index;
        CFTypeRef references[3] = { ED_ctx->receipt_data, ED_ctx->mac_data, ED_ctx->receipt_dict };
        for(index = 0; index < 3; index++) {
            if (references[index]) {
                CFRelease(references[index]);
                references[index] = NULL;
            }
        }
    }
#else
#define ED_CleanUp1(ED_ctx) { \
__RECEIPT_LOG(@"ReceiptValidation - Cleaning up"); \
int index; \
CFTypeRef references[3] = { ED_ctx->receipt_data, ED_ctx->mac_data, ED_ctx->receipt_dict }; \
for(index = 0; index < 3; index++) { \
if (references[index]) { \
CFRelease(references[index]); \
references[index] = NULL; \
} \
} \
}
#endif
    
    
    // CodeBlock EntryPoint
#if DEBUG
    inline static int CheckReceiptAndRun(int _argc, const char *_argv[]) {
        // Create contexts
        ED_Context ED_ctx0 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0 };
        ED_ctx0.argc = _argc;
        ED_ctx0.argv = (const char **) _argv;
        // Initial value
        int idx = 3772;
        // While loop
        while(idx != 2784) {
            switch(idx) {
                case 2420:
                    ED_CheckReceiptHash1((&ED_ctx0));
                    idx += 62; idx /= 73; 
                    break;
                case 979:
                    ED_GetReceiptInformation1((&ED_ctx0));
                    idx -= 384; idx *= 5; idx += 4; 
                    break;
                case 4040:
                    ED_CleanUp1((&ED_ctx0));
                    idx += 1528; idx /= 2; 
                    break;
                case 2588:
                    ED_CheckBundleVersion1((&ED_ctx0));
                    idx += 1764; idx /= 2; 
                    break;
                case 2241:
                    ED_LoadReceipt1((&ED_ctx0));
                    idx += 692; idx /= 7; 
                    break;
                case 1534:
                    ED_CheckReceiptVersion1((&ED_ctx0));
                    idx -= 728; idx *= 3; idx += 2; 
                    break;
                case 2979:
                    ED_CheckBundleIdentifier1((&ED_ctx0));
                    idx += 2197; idx /= 2; 
                    break;
                case 419:
                    ED_GetMacAddress1((&ED_ctx0));
                    idx -= 175; idx *= 4; idx += 3; 
                    break;
                case 2176:
                    ED_CheckReceiptSignature1((&ED_ctx0));
                    idx -= 1019; idx *= 3; idx += 2; 
                    break;
                case 34:
                    ED_AppRunner1((&ED_ctx0));
                    idx -= 1; idx *= 120; idx += 80; 
                    break;
                case 3772:
                    ED_GetMainBundle1((&ED_ctx0));
                    idx += 2951; idx /= 3; 
                    break;
                case 3473:
                    ED_CheckReceiptIdentifier1((&ED_ctx0));
                    idx += 2663; idx /= 4; 
                    break;
            }
        }
        return 0;
    }
#else
#define CheckReceiptAndRun(_argc, _argv) ({ \
ED_Context ED_ctx0 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0 }; \
ED_ctx0.argc = _argc; \
ED_ctx0.argv = (const char **) _argv; \
int idx = 3772; \
while(idx != 2784) { \
switch(idx) { \
case 2420: \
ED_CheckReceiptHash1((&ED_ctx0)); \
idx += 62; idx /= 73;  \
break; \
case 979: \
ED_GetReceiptInformation1((&ED_ctx0)); \
idx -= 384; idx *= 5; idx += 4;  \
break; \
case 4040: \
ED_CleanUp1((&ED_ctx0)); \
idx += 1528; idx /= 2;  \
break; \
case 2588: \
ED_CheckBundleVersion1((&ED_ctx0)); \
idx += 1764; idx /= 2;  \
break; \
case 2241: \
ED_LoadReceipt1((&ED_ctx0)); \
idx += 692; idx /= 7;  \
break; \
case 1534: \
ED_CheckReceiptVersion1((&ED_ctx0)); \
idx -= 728; idx *= 3; idx += 2;  \
break; \
case 2979: \
ED_CheckBundleIdentifier1((&ED_ctx0)); \
idx += 2197; idx /= 2;  \
break; \
case 419: \
ED_GetMacAddress1((&ED_ctx0)); \
idx -= 175; idx *= 4; idx += 3;  \
break; \
case 2176: \
ED_CheckReceiptSignature1((&ED_ctx0)); \
idx -= 1019; idx *= 3; idx += 2;  \
break; \
case 34: \
ED_AppRunner1((&ED_ctx0)); \
idx -= 1; idx *= 120; idx += 80;  \
break; \
case 3772: \
ED_GetMainBundle1((&ED_ctx0)); \
idx += 2951; idx /= 3;  \
break; \
case 3473: \
ED_CheckReceiptIdentifier1((&ED_ctx0)); \
idx += 2663; idx /= 4;  \
break; \
} \
} \
0; \
})
#endif
    
    
    
    
    // C++ epilogue
#ifdef __cplusplus
}
#endif

